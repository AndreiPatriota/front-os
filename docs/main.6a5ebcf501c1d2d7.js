'use strict';
(self.webpackChunkos = self.webpackChunkos || []).push([
  [179],
  {
    7: () => {
      function Ce(n) {
        return 'function' == typeof n;
      }
      function ja(n) {
        const e = n((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (e.prototype = Object.create(Error.prototype)),
          (e.prototype.constructor = e),
          e
        );
      }
      const ec = ja(
        (n) =>
          function (e) {
            n(this),
              (this.message = e
                ? `${e.length} errors occurred during unsubscription:\n${e
                    .map((i, r) => `${r + 1}) ${i.toString()}`)
                    .join('\n  ')}`
                : ''),
              (this.name = 'UnsubscriptionError'),
              (this.errors = e);
          }
      );
      function vo(n, t) {
        if (n) {
          const e = n.indexOf(t);
          0 <= e && n.splice(e, 1);
        }
      }
      class Oe {
        constructor(t) {
          (this.initialTeardown = t),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let t;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: e } = this;
            if (e)
              if (((this._parentage = null), Array.isArray(e)))
                for (const o of e) o.remove(this);
              else e.remove(this);
            const { initialTeardown: i } = this;
            if (Ce(i))
              try {
                i();
              } catch (o) {
                t = o instanceof ec ? o.errors : [o];
              }
            const { _finalizers: r } = this;
            if (r) {
              this._finalizers = null;
              for (const o of r)
                try {
                  iv(o);
                } catch (a) {
                  (t = t ?? []),
                    a instanceof ec ? (t = [...t, ...a.errors]) : t.push(a);
                }
            }
            if (t) throw new ec(t);
          }
        }
        add(t) {
          var e;
          if (t && t !== this)
            if (this.closed) iv(t);
            else {
              if (t instanceof Oe) {
                if (t.closed || t._hasParent(this)) return;
                t._addParent(this);
              }
              (this._finalizers =
                null !== (e = this._finalizers) && void 0 !== e ? e : []).push(
                t
              );
            }
        }
        _hasParent(t) {
          const { _parentage: e } = this;
          return e === t || (Array.isArray(e) && e.includes(t));
        }
        _addParent(t) {
          const { _parentage: e } = this;
          this._parentage = Array.isArray(e) ? (e.push(t), e) : e ? [e, t] : t;
        }
        _removeParent(t) {
          const { _parentage: e } = this;
          e === t ? (this._parentage = null) : Array.isArray(e) && vo(e, t);
        }
        remove(t) {
          const { _finalizers: e } = this;
          e && vo(e, t), t instanceof Oe && t._removeParent(this);
        }
      }
      Oe.EMPTY = (() => {
        const n = new Oe();
        return (n.closed = !0), n;
      })();
      const tv = Oe.EMPTY;
      function nv(n) {
        return (
          n instanceof Oe ||
          (n && 'closed' in n && Ce(n.remove) && Ce(n.add) && Ce(n.unsubscribe))
        );
      }
      function iv(n) {
        Ce(n) ? n() : n.unsubscribe();
      }
      const Ar = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        tc = {
          setTimeout(n, t, ...e) {
            const { delegate: i } = tc;
            return i?.setTimeout
              ? i.setTimeout(n, t, ...e)
              : setTimeout(n, t, ...e);
          },
          clearTimeout(n) {
            const { delegate: t } = tc;
            return (t?.clearTimeout || clearTimeout)(n);
          },
          delegate: void 0,
        };
      function rv(n) {
        tc.setTimeout(() => {
          const { onUnhandledError: t } = Ar;
          if (!t) throw n;
          t(n);
        });
      }
      function nc() {}
      const E1 = Dh('C', void 0, void 0);
      function Dh(n, t, e) {
        return { kind: n, value: t, error: e };
      }
      let Tr = null;
      function ic(n) {
        if (Ar.useDeprecatedSynchronousErrorHandling) {
          const t = !Tr;
          if ((t && (Tr = { errorThrown: !1, error: null }), n(), t)) {
            const { errorThrown: e, error: i } = Tr;
            if (((Tr = null), e)) throw i;
          }
        } else n();
      }
      class Mh extends Oe {
        constructor(t) {
          super(),
            (this.isStopped = !1),
            t
              ? ((this.destination = t), nv(t) && t.add(this))
              : (this.destination = O1);
        }
        static create(t, e, i) {
          return new Ua(t, e, i);
        }
        next(t) {
          this.isStopped
            ? Sh(
                (function k1(n) {
                  return Dh('N', n, void 0);
                })(t),
                this
              )
            : this._next(t);
        }
        error(t) {
          this.isStopped
            ? Sh(
                (function S1(n) {
                  return Dh('E', void 0, n);
                })(t),
                this
              )
            : ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped
            ? Sh(E1, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          try {
            this.destination.error(t);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const T1 = Function.prototype.bind;
      function Eh(n, t) {
        return T1.call(n, t);
      }
      class I1 {
        constructor(t) {
          this.partialObserver = t;
        }
        next(t) {
          const { partialObserver: e } = this;
          if (e.next)
            try {
              e.next(t);
            } catch (i) {
              rc(i);
            }
        }
        error(t) {
          const { partialObserver: e } = this;
          if (e.error)
            try {
              e.error(t);
            } catch (i) {
              rc(i);
            }
          else rc(t);
        }
        complete() {
          const { partialObserver: t } = this;
          if (t.complete)
            try {
              t.complete();
            } catch (e) {
              rc(e);
            }
        }
      }
      class Ua extends Mh {
        constructor(t, e, i) {
          let r;
          if ((super(), Ce(t) || !t))
            r = {
              next: t ?? void 0,
              error: e ?? void 0,
              complete: i ?? void 0,
            };
          else {
            let o;
            this && Ar.useDeprecatedNextContext
              ? ((o = Object.create(t)),
                (o.unsubscribe = () => this.unsubscribe()),
                (r = {
                  next: t.next && Eh(t.next, o),
                  error: t.error && Eh(t.error, o),
                  complete: t.complete && Eh(t.complete, o),
                }))
              : (r = t);
          }
          this.destination = new I1(r);
        }
      }
      function rc(n) {
        Ar.useDeprecatedSynchronousErrorHandling
          ? (function A1(n) {
              Ar.useDeprecatedSynchronousErrorHandling &&
                Tr &&
                ((Tr.errorThrown = !0), (Tr.error = n));
            })(n)
          : rv(n);
      }
      function Sh(n, t) {
        const { onStoppedNotification: e } = Ar;
        e && tc.setTimeout(() => e(n, t));
      }
      const O1 = {
          closed: !0,
          next: nc,
          error: function R1(n) {
            throw n;
          },
          complete: nc,
        },
        kh =
          ('function' == typeof Symbol && Symbol.observable) || '@@observable';
      function or(n) {
        return n;
      }
      function ov(n) {
        return 0 === n.length
          ? or
          : 1 === n.length
          ? n[0]
          : function (e) {
              return n.reduce((i, r) => r(i), e);
            };
      }
      let Fe = (() => {
        class n {
          constructor(e) {
            e && (this._subscribe = e);
          }
          lift(e) {
            const i = new n();
            return (i.source = this), (i.operator = e), i;
          }
          subscribe(e, i, r) {
            const o = (function N1(n) {
              return (
                (n && n instanceof Mh) ||
                ((function P1(n) {
                  return n && Ce(n.next) && Ce(n.error) && Ce(n.complete);
                })(n) &&
                  nv(n))
              );
            })(e)
              ? e
              : new Ua(e, i, r);
            return (
              ic(() => {
                const { operator: a, source: s } = this;
                o.add(
                  a
                    ? a.call(o, s)
                    : s
                    ? this._subscribe(o)
                    : this._trySubscribe(o)
                );
              }),
              o
            );
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (i) {
              e.error(i);
            }
          }
          forEach(e, i) {
            return new (i = av(i))((r, o) => {
              const a = new Ua({
                next: (s) => {
                  try {
                    e(s);
                  } catch (l) {
                    o(l), a.unsubscribe();
                  }
                },
                error: o,
                complete: r,
              });
              this.subscribe(a);
            });
          }
          _subscribe(e) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(e);
          }
          [kh]() {
            return this;
          }
          pipe(...e) {
            return ov(e)(this);
          }
          toPromise(e) {
            return new (e = av(e))((i, r) => {
              let o;
              this.subscribe(
                (a) => (o = a),
                (a) => r(a),
                () => i(o)
              );
            });
          }
        }
        return (n.create = (t) => new n(t)), n;
      })();
      function av(n) {
        var t;
        return null !== (t = n ?? Ar.Promise) && void 0 !== t ? t : Promise;
      }
      const L1 = ja(
        (n) =>
          function () {
            n(this),
              (this.name = 'ObjectUnsubscribedError'),
              (this.message = 'object unsubscribed');
          }
      );
      let z = (() => {
        class n extends Fe {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(e) {
            const i = new sv(this, this);
            return (i.operator = e), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new L1();
          }
          next(e) {
            ic(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const i of this.currentObservers) i.next(e);
              }
            });
          }
          error(e) {
            ic(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = e);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(e);
              }
            });
          }
          complete() {
            ic(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: e } = this;
                for (; e.length; ) e.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var e;
            return (
              (null === (e = this.observers) || void 0 === e
                ? void 0
                : e.length) > 0
            );
          }
          _trySubscribe(e) {
            return this._throwIfClosed(), super._trySubscribe(e);
          }
          _subscribe(e) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(e),
              this._innerSubscribe(e)
            );
          }
          _innerSubscribe(e) {
            const { hasError: i, isStopped: r, observers: o } = this;
            return i || r
              ? tv
              : ((this.currentObservers = null),
                o.push(e),
                new Oe(() => {
                  (this.currentObservers = null), vo(o, e);
                }));
          }
          _checkFinalizedStatuses(e) {
            const { hasError: i, thrownError: r, isStopped: o } = this;
            i ? e.error(r) : o && e.complete();
          }
          asObservable() {
            const e = new Fe();
            return (e.source = this), e;
          }
        }
        return (n.create = (t, e) => new sv(t, e)), n;
      })();
      class sv extends z {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.next) ||
            void 0 === i ||
            i.call(e, t);
        }
        error(t) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.error) ||
            void 0 === i ||
            i.call(e, t);
        }
        complete() {
          var t, e;
          null ===
            (e =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.complete) ||
            void 0 === e ||
            e.call(t);
        }
        _subscribe(t) {
          var e, i;
          return null !==
            (i =
              null === (e = this.source) || void 0 === e
                ? void 0
                : e.subscribe(t)) && void 0 !== i
            ? i
            : tv;
        }
      }
      function lv(n) {
        return Ce(n?.lift);
      }
      function Je(n) {
        return (t) => {
          if (lv(t))
            return t.lift(function (e) {
              try {
                return n(e, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError('Unable to lift unknown Observable type');
        };
      }
      function qe(n, t, e, i, r) {
        return new V1(n, t, e, i, r);
      }
      class V1 extends Mh {
        constructor(t, e, i, r, o, a) {
          super(t),
            (this.onFinalize = o),
            (this.shouldUnsubscribe = a),
            (this._next = e
              ? function (s) {
                  try {
                    e(s);
                  } catch (l) {
                    t.error(l);
                  }
                }
              : super._next),
            (this._error = r
              ? function (s) {
                  try {
                    r(s);
                  } catch (l) {
                    t.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (s) {
                    t.error(s);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var t;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e } = this;
            super.unsubscribe(),
              !e &&
                (null === (t = this.onFinalize) ||
                  void 0 === t ||
                  t.call(this));
          }
        }
      }
      function q(n, t) {
        return Je((e, i) => {
          let r = 0;
          e.subscribe(
            qe(i, (o) => {
              i.next(n.call(t, o, r++));
            })
          );
        });
      }
      function Ir(n) {
        return this instanceof Ir ? ((this.v = n), this) : new Ir(n);
      }
      function z1(n, t, e) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var r,
          i = e.apply(n, t || []),
          o = [];
        return (
          (r = {}),
          a('next'),
          a('throw'),
          a('return'),
          (r[Symbol.asyncIterator] = function () {
            return this;
          }),
          r
        );
        function a(h) {
          i[h] &&
            (r[h] = function (f) {
              return new Promise(function (g, v) {
                o.push([h, f, g, v]) > 1 || s(h, f);
              });
            });
        }
        function s(h, f) {
          try {
            !(function l(h) {
              h.value instanceof Ir
                ? Promise.resolve(h.value.v).then(c, d)
                : u(o[0][2], h);
            })(i[h](f));
          } catch (g) {
            u(o[0][3], g);
          }
        }
        function c(h) {
          s('next', h);
        }
        function d(h) {
          s('throw', h);
        }
        function u(h, f) {
          h(f), o.shift(), o.length && s(o[0][0], o[0][1]);
        }
      }
      function j1(n) {
        if (!Symbol.asyncIterator)
          throw new TypeError('Symbol.asyncIterator is not defined.');
        var e,
          t = n[Symbol.asyncIterator];
        return t
          ? t.call(n)
          : ((n = (function uv(n) {
              var t = 'function' == typeof Symbol && Symbol.iterator,
                e = t && n[t],
                i = 0;
              if (e) return e.call(n);
              if (n && 'number' == typeof n.length)
                return {
                  next: function () {
                    return (
                      n && i >= n.length && (n = void 0),
                      { value: n && n[i++], done: !n }
                    );
                  },
                };
              throw new TypeError(
                t
                  ? 'Object is not iterable.'
                  : 'Symbol.iterator is not defined.'
              );
            })(n)),
            (e = {}),
            i('next'),
            i('throw'),
            i('return'),
            (e[Symbol.asyncIterator] = function () {
              return this;
            }),
            e);
        function i(o) {
          e[o] =
            n[o] &&
            function (a) {
              return new Promise(function (s, l) {
                !(function r(o, a, s, l) {
                  Promise.resolve(l).then(function (c) {
                    o({ value: c, done: s });
                  }, a);
                })(s, l, (a = n[o](a)).done, a.value);
              });
            };
        }
      }
      const Th = (n) =>
        n && 'number' == typeof n.length && 'function' != typeof n;
      function hv(n) {
        return Ce(n?.then);
      }
      function mv(n) {
        return Ce(n[kh]);
      }
      function fv(n) {
        return Symbol.asyncIterator && Ce(n?.[Symbol.asyncIterator]);
      }
      function pv(n) {
        return new TypeError(
          `You provided ${
            null !== n && 'object' == typeof n ? 'an invalid object' : `'${n}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const gv = (function $1() {
        return 'function' == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : '@@iterator';
      })();
      function _v(n) {
        return Ce(n?.[gv]);
      }
      function vv(n) {
        return z1(this, arguments, function* () {
          const e = n.getReader();
          try {
            for (;;) {
              const { value: i, done: r } = yield Ir(e.read());
              if (r) return yield Ir(void 0);
              yield yield Ir(i);
            }
          } finally {
            e.releaseLock();
          }
        });
      }
      function bv(n) {
        return Ce(n?.getReader);
      }
      function It(n) {
        if (n instanceof Fe) return n;
        if (null != n) {
          if (mv(n))
            return (function G1(n) {
              return new Fe((t) => {
                const e = n[kh]();
                if (Ce(e.subscribe)) return e.subscribe(t);
                throw new TypeError(
                  'Provided object does not correctly implement Symbol.observable'
                );
              });
            })(n);
          if (Th(n))
            return (function W1(n) {
              return new Fe((t) => {
                for (let e = 0; e < n.length && !t.closed; e++) t.next(n[e]);
                t.complete();
              });
            })(n);
          if (hv(n))
            return (function Y1(n) {
              return new Fe((t) => {
                n.then(
                  (e) => {
                    t.closed || (t.next(e), t.complete());
                  },
                  (e) => t.error(e)
                ).then(null, rv);
              });
            })(n);
          if (fv(n)) return yv(n);
          if (_v(n))
            return (function q1(n) {
              return new Fe((t) => {
                for (const e of n) if ((t.next(e), t.closed)) return;
                t.complete();
              });
            })(n);
          if (bv(n))
            return (function K1(n) {
              return yv(vv(n));
            })(n);
        }
        throw pv(n);
      }
      function yv(n) {
        return new Fe((t) => {
          (function X1(n, t) {
            var e, i, r, o;
            return (function B1(n, t, e, i) {
              return new (e || (e = Promise))(function (o, a) {
                function s(d) {
                  try {
                    c(i.next(d));
                  } catch (u) {
                    a(u);
                  }
                }
                function l(d) {
                  try {
                    c(i.throw(d));
                  } catch (u) {
                    a(u);
                  }
                }
                function c(d) {
                  d.done
                    ? o(d.value)
                    : (function r(o) {
                        return o instanceof e
                          ? o
                          : new e(function (a) {
                              a(o);
                            });
                      })(d.value).then(s, l);
                }
                c((i = i.apply(n, t || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (e = j1(n); !(i = yield e.next()).done; )
                  if ((t.next(i.value), t.closed)) return;
              } catch (a) {
                r = { error: a };
              } finally {
                try {
                  i && !i.done && (o = e.return) && (yield o.call(e));
                } finally {
                  if (r) throw r.error;
                }
              }
              t.complete();
            });
          })(n, t).catch((e) => t.error(e));
        });
      }
      function Ai(n, t, e, i = 0, r = !1) {
        const o = t.schedule(function () {
          e(), r ? n.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((n.add(o), !r)) return o;
      }
      function yt(n, t, e = 1 / 0) {
        return Ce(t)
          ? yt((i, r) => q((o, a) => t(i, o, r, a))(It(n(i, r))), e)
          : ('number' == typeof t && (e = t),
            Je((i, r) =>
              (function Z1(n, t, e, i, r, o, a, s) {
                const l = [];
                let c = 0,
                  d = 0,
                  u = !1;
                const h = () => {
                    u && !l.length && !c && t.complete();
                  },
                  f = (v) => (c < i ? g(v) : l.push(v)),
                  g = (v) => {
                    o && t.next(v), c++;
                    let y = !1;
                    It(e(v, d++)).subscribe(
                      qe(
                        t,
                        (x) => {
                          r?.(x), o ? f(x) : t.next(x);
                        },
                        () => {
                          y = !0;
                        },
                        void 0,
                        () => {
                          if (y)
                            try {
                              for (c--; l.length && c < i; ) {
                                const x = l.shift();
                                a ? Ai(t, a, () => g(x)) : g(x);
                              }
                              h();
                            } catch (x) {
                              t.error(x);
                            }
                        }
                      )
                    );
                  };
                return (
                  n.subscribe(
                    qe(t, f, () => {
                      (u = !0), h();
                    })
                  ),
                  () => {
                    s?.();
                  }
                );
              })(i, r, n, e)
            ));
      }
      function bo(n = 1 / 0) {
        return yt(or, n);
      }
      const Vn = new Fe((n) => n.complete());
      function wv(n) {
        return n && Ce(n.schedule);
      }
      function Ih(n) {
        return n[n.length - 1];
      }
      function Cv(n) {
        return Ce(Ih(n)) ? n.pop() : void 0;
      }
      function $a(n) {
        return wv(Ih(n)) ? n.pop() : void 0;
      }
      function xv(n, t = 0) {
        return Je((e, i) => {
          e.subscribe(
            qe(
              i,
              (r) => Ai(i, n, () => i.next(r), t),
              () => Ai(i, n, () => i.complete(), t),
              (r) => Ai(i, n, () => i.error(r), t)
            )
          );
        });
      }
      function Dv(n, t = 0) {
        return Je((e, i) => {
          i.add(n.schedule(() => e.subscribe(i), t));
        });
      }
      function Mv(n, t) {
        if (!n) throw new Error('Iterable cannot be null');
        return new Fe((e) => {
          Ai(e, t, () => {
            const i = n[Symbol.asyncIterator]();
            Ai(
              e,
              t,
              () => {
                i.next().then((r) => {
                  r.done ? e.complete() : e.next(r.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function at(n, t) {
        return t
          ? (function oA(n, t) {
              if (null != n) {
                if (mv(n))
                  return (function eA(n, t) {
                    return It(n).pipe(Dv(t), xv(t));
                  })(n, t);
                if (Th(n))
                  return (function nA(n, t) {
                    return new Fe((e) => {
                      let i = 0;
                      return t.schedule(function () {
                        i === n.length
                          ? e.complete()
                          : (e.next(n[i++]), e.closed || this.schedule());
                      });
                    });
                  })(n, t);
                if (hv(n))
                  return (function tA(n, t) {
                    return It(n).pipe(Dv(t), xv(t));
                  })(n, t);
                if (fv(n)) return Mv(n, t);
                if (_v(n))
                  return (function iA(n, t) {
                    return new Fe((e) => {
                      let i;
                      return (
                        Ai(e, t, () => {
                          (i = n[gv]()),
                            Ai(
                              e,
                              t,
                              () => {
                                let r, o;
                                try {
                                  ({ value: r, done: o } = i.next());
                                } catch (a) {
                                  return void e.error(a);
                                }
                                o ? e.complete() : e.next(r);
                              },
                              0,
                              !0
                            );
                        }),
                        () => Ce(i?.return) && i.return()
                      );
                    });
                  })(n, t);
                if (bv(n))
                  return (function rA(n, t) {
                    return Mv(vv(n), t);
                  })(n, t);
              }
              throw pv(n);
            })(n, t)
          : It(n);
      }
      function on(...n) {
        const t = $a(n),
          e = (function J1(n, t) {
            return 'number' == typeof Ih(n) ? n.pop() : t;
          })(n, 1 / 0),
          i = n;
        return i.length ? (1 === i.length ? It(i[0]) : bo(e)(at(i, t))) : Vn;
      }
      function Ev(n = {}) {
        const {
          connector: t = () => new z(),
          resetOnError: e = !0,
          resetOnComplete: i = !0,
          resetOnRefCountZero: r = !0,
        } = n;
        return (o) => {
          let a,
            s,
            l,
            c = 0,
            d = !1,
            u = !1;
          const h = () => {
              s?.unsubscribe(), (s = void 0);
            },
            f = () => {
              h(), (a = l = void 0), (d = u = !1);
            },
            g = () => {
              const v = a;
              f(), v?.unsubscribe();
            };
          return Je((v, y) => {
            c++, !u && !d && h();
            const x = (l = l ?? t());
            y.add(() => {
              c--, 0 === c && !u && !d && (s = Rh(g, r));
            }),
              x.subscribe(y),
              !a &&
                c > 0 &&
                ((a = new Ua({
                  next: (R) => x.next(R),
                  error: (R) => {
                    (u = !0), h(), (s = Rh(f, e, R)), x.error(R);
                  },
                  complete: () => {
                    (d = !0), h(), (s = Rh(f, i)), x.complete();
                  },
                })),
                It(v).subscribe(a));
          })(o);
        };
      }
      function Rh(n, t, ...e) {
        if (!0 === t) return void n();
        if (!1 === t) return;
        const i = new Ua({
          next: () => {
            i.unsubscribe(), n();
          },
        });
        return It(t(...e)).subscribe(i);
      }
      function ze(n) {
        for (let t in n) if (n[t] === ze) return t;
        throw Error('Could not find renamed property on target object.');
      }
      function Oh(n, t) {
        for (const e in t)
          t.hasOwnProperty(e) && !n.hasOwnProperty(e) && (n[e] = t[e]);
      }
      function Ue(n) {
        if ('string' == typeof n) return n;
        if (Array.isArray(n)) return '[' + n.map(Ue).join(', ') + ']';
        if (null == n) return '' + n;
        if (n.overriddenName) return `${n.overriddenName}`;
        if (n.name) return `${n.name}`;
        const t = n.toString();
        if (null == t) return '' + t;
        const e = t.indexOf('\n');
        return -1 === e ? t : t.substring(0, e);
      }
      function Fh(n, t) {
        return null == n || '' === n
          ? null === t
            ? ''
            : t
          : null == t || '' === t
          ? n
          : n + ' ' + t;
      }
      const aA = ze({ __forward_ref__: ze });
      function Pe(n) {
        return (
          (n.__forward_ref__ = Pe),
          (n.toString = function () {
            return Ue(this());
          }),
          n
        );
      }
      function Q(n) {
        return Ph(n) ? n() : n;
      }
      function Ph(n) {
        return (
          'function' == typeof n &&
          n.hasOwnProperty(aA) &&
          n.__forward_ref__ === Pe
        );
      }
      function Nh(n) {
        return n && !!n.ɵproviders;
      }
      const oc = 'https://g.co/ng/security#xss';
      class k extends Error {
        constructor(t, e) {
          super(
            (function ac(n, t) {
              return `NG0${Math.abs(n)}${t ? ': ' + t.trim() : ''}`;
            })(t, e)
          ),
            (this.code = t);
        }
      }
      function ae(n) {
        return 'string' == typeof n ? n : null == n ? '' : String(n);
      }
      function sc(n, t) {
        throw new k(-201, !1);
      }
      function wn(n, t) {
        null == n &&
          (function Le(n, t, e, i) {
            throw new Error(
              `ASSERTION ERROR: ${n}` +
                (null == i ? '' : ` [Expected=> ${e} ${i} ${t} <=Actual]`)
            );
          })(t, n, null, '!=');
      }
      function I(n) {
        return {
          token: n.token,
          providedIn: n.providedIn || null,
          factory: n.factory,
          value: void 0,
        };
      }
      function de(n) {
        return { providers: n.providers || [], imports: n.imports || [] };
      }
      function lc(n) {
        return Sv(n, cc) || Sv(n, Av);
      }
      function Sv(n, t) {
        return n.hasOwnProperty(t) ? n[t] : null;
      }
      function kv(n) {
        return n && (n.hasOwnProperty(Lh) || n.hasOwnProperty(pA))
          ? n[Lh]
          : null;
      }
      const cc = ze({ ɵprov: ze }),
        Lh = ze({ ɵinj: ze }),
        Av = ze({ ngInjectableDef: ze }),
        pA = ze({ ngInjectorDef: ze });
      var J = (() => (
        ((J = J || {})[(J.Default = 0)] = 'Default'),
        (J[(J.Host = 1)] = 'Host'),
        (J[(J.Self = 2)] = 'Self'),
        (J[(J.SkipSelf = 4)] = 'SkipSelf'),
        (J[(J.Optional = 8)] = 'Optional'),
        J
      ))();
      let Vh;
      function Cn(n) {
        const t = Vh;
        return (Vh = n), t;
      }
      function Tv(n, t, e) {
        const i = lc(n);
        return i && 'root' == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : e & J.Optional
          ? null
          : void 0 !== t
          ? t
          : void sc(Ue(n));
      }
      const $e = (() =>
          (typeof globalThis < 'u' && globalThis) ||
          (typeof global < 'u' && global) ||
          (typeof window < 'u' && window) ||
          (typeof self < 'u' &&
            typeof WorkerGlobalScope < 'u' &&
            self instanceof WorkerGlobalScope &&
            self))(),
        Ga = {},
        Bh = '__NG_DI_FLAG__',
        dc = 'ngTempTokenPath',
        vA = /\n/gm,
        Iv = '__source';
      let Wa;
      function yo(n) {
        const t = Wa;
        return (Wa = n), t;
      }
      function yA(n, t = J.Default) {
        if (void 0 === Wa) throw new k(-203, !1);
        return null === Wa
          ? Tv(n, void 0, t)
          : Wa.get(n, t & J.Optional ? null : void 0, t);
      }
      function C(n, t = J.Default) {
        return (
          (function gA() {
            return Vh;
          })() || yA
        )(Q(n), t);
      }
      function ie(n, t = J.Default) {
        return C(n, uc(t));
      }
      function uc(n) {
        return typeof n > 'u' || 'number' == typeof n
          ? n
          : 0 |
              (n.optional && 8) |
              (n.host && 1) |
              (n.self && 2) |
              (n.skipSelf && 4);
      }
      function Hh(n) {
        const t = [];
        for (let e = 0; e < n.length; e++) {
          const i = Q(n[e]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new k(900, !1);
            let r,
              o = J.Default;
            for (let a = 0; a < i.length; a++) {
              const s = i[a],
                l = wA(s);
              'number' == typeof l
                ? -1 === l
                  ? (r = s.token)
                  : (o |= l)
                : (r = s);
            }
            t.push(C(r, o));
          } else t.push(C(i));
        }
        return t;
      }
      function Ya(n, t) {
        return (n[Bh] = t), (n.prototype[Bh] = t), n;
      }
      function wA(n) {
        return n[Bh];
      }
      function sr(n) {
        return { toString: n }.toString();
      }
      var Bn = (() => (
          ((Bn = Bn || {})[(Bn.OnPush = 0)] = 'OnPush'),
          (Bn[(Bn.Default = 1)] = 'Default'),
          Bn
        ))(),
        Hn = (() => {
          return (
            ((n = Hn || (Hn = {}))[(n.Emulated = 0)] = 'Emulated'),
            (n[(n.None = 2)] = 'None'),
            (n[(n.ShadowDom = 3)] = 'ShadowDom'),
            Hn
          );
          var n;
        })();
      const Ti = {},
        Ie = [],
        hc = ze({ ɵcmp: ze }),
        zh = ze({ ɵdir: ze }),
        jh = ze({ ɵpipe: ze }),
        Ov = ze({ ɵmod: ze }),
        Ii = ze({ ɵfac: ze }),
        qa = ze({ __NG_ELEMENT_ID__: ze });
      let DA = 0;
      function W(n) {
        return sr(() => {
          const e = !0 === n.standalone,
            i = {},
            r = {
              type: n.type,
              providersResolver: null,
              decls: n.decls,
              vars: n.vars,
              factory: null,
              template: n.template || null,
              consts: n.consts || null,
              ngContentSelectors: n.ngContentSelectors,
              hostBindings: n.hostBindings || null,
              hostVars: n.hostVars || 0,
              hostAttrs: n.hostAttrs || null,
              contentQueries: n.contentQueries || null,
              declaredInputs: i,
              inputs: null,
              outputs: null,
              exportAs: n.exportAs || null,
              onPush: n.changeDetection === Bn.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              standalone: e,
              dependencies: (e && n.dependencies) || null,
              getStandaloneInjector: null,
              selectors: n.selectors || Ie,
              viewQuery: n.viewQuery || null,
              features: n.features || null,
              data: n.data || {},
              encapsulation: n.encapsulation || Hn.Emulated,
              id: 'c' + DA++,
              styles: n.styles || Ie,
              _: null,
              setInput: null,
              schemas: n.schemas || null,
              tView: null,
              findHostDirectiveDefs: null,
              hostDirectives: null,
            },
            o = n.dependencies,
            a = n.features;
          return (
            (r.inputs = Nv(n.inputs, i)),
            (r.outputs = Nv(n.outputs)),
            a && a.forEach((s) => s(r)),
            (r.directiveDefs = o
              ? () => ('function' == typeof o ? o() : o).map(Fv).filter(Pv)
              : null),
            (r.pipeDefs = o
              ? () => ('function' == typeof o ? o() : o).map(zt).filter(Pv)
              : null),
            r
          );
        });
      }
      function Fv(n) {
        return Ve(n) || Rt(n);
      }
      function Pv(n) {
        return null !== n;
      }
      function he(n) {
        return sr(() => ({
          type: n.type,
          bootstrap: n.bootstrap || Ie,
          declarations: n.declarations || Ie,
          imports: n.imports || Ie,
          exports: n.exports || Ie,
          transitiveCompileScopes: null,
          schemas: n.schemas || null,
          id: n.id || null,
        }));
      }
      function Nv(n, t) {
        if (null == n) return Ti;
        const e = {};
        for (const i in n)
          if (n.hasOwnProperty(i)) {
            let r = n[i],
              o = r;
            Array.isArray(r) && ((o = r[1]), (r = r[0])),
              (e[r] = i),
              t && (t[r] = o);
          }
        return e;
      }
      const S = W;
      function Ve(n) {
        return n[hc] || null;
      }
      function Rt(n) {
        return n[zh] || null;
      }
      function zt(n) {
        return n[jh] || null;
      }
      function sn(n, t) {
        const e = n[Ov] || null;
        if (!e && !0 === t)
          throw new Error(`Type ${Ue(n)} does not have '\u0275mod' property.`);
        return e;
      }
      function ln(n) {
        return Array.isArray(n) && 'object' == typeof n[1];
      }
      function jn(n) {
        return Array.isArray(n) && !0 === n[1];
      }
      function Gh(n) {
        return 0 != (4 & n.flags);
      }
      function Qa(n) {
        return n.componentOffset > -1;
      }
      function _c(n) {
        return 1 == (1 & n.flags);
      }
      function Un(n) {
        return null !== n.template;
      }
      function SA(n) {
        return 0 != (256 & n[2]);
      }
      function Or(n, t) {
        return n.hasOwnProperty(Ii) ? n[Ii] : null;
      }
      class TA {
        constructor(t, e, i) {
          (this.previousValue = t),
            (this.currentValue = e),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function dt() {
        return jv;
      }
      function jv(n) {
        return n.type.prototype.ngOnChanges && (n.setInput = RA), IA;
      }
      function IA() {
        const n = $v(this),
          t = n?.current;
        if (t) {
          const e = n.previous;
          if (e === Ti) n.previous = t;
          else for (let i in t) e[i] = t[i];
          (n.current = null), this.ngOnChanges(t);
        }
      }
      function RA(n, t, e, i) {
        const r = this.declaredInputs[e],
          o =
            $v(n) ||
            (function OA(n, t) {
              return (n[Uv] = t);
            })(n, { previous: Ti, current: null }),
          a = o.current || (o.current = {}),
          s = o.previous,
          l = s[r];
        (a[r] = new TA(l && l.currentValue, t, s === Ti)), (n[i] = t);
      }
      dt.ngInherit = !0;
      const Uv = '__ngSimpleChanges__';
      function $v(n) {
        return n[Uv] || null;
      }
      function Et(n) {
        for (; Array.isArray(n); ) n = n[0];
        return n;
      }
      function vc(n, t) {
        return Et(t[n]);
      }
      function cn(n, t) {
        return Et(t[n.index]);
      }
      function Yv(n, t) {
        return n.data[t];
      }
      function dn(n, t) {
        const e = t[n];
        return ln(e) ? e : e[0];
      }
      function bc(n) {
        return 64 == (64 & n[2]);
      }
      function lr(n, t) {
        return null == t ? null : n[t];
      }
      function qv(n) {
        n[18] = 0;
      }
      function Yh(n, t) {
        n[5] += t;
        let e = n,
          i = n[3];
        for (
          ;
          null !== i && ((1 === t && 1 === e[5]) || (-1 === t && 0 === e[5]));

        )
          (i[5] += t), (e = i), (i = i[3]);
      }
      const se = { lFrame: rb(null), bindingsEnabled: !0 };
      function Xv() {
        return se.bindingsEnabled;
      }
      function T() {
        return se.lFrame.lView;
      }
      function xe() {
        return se.lFrame.tView;
      }
      function Zt(n) {
        return (se.lFrame.contextLView = n), n[8];
      }
      function Qt(n) {
        return (se.lFrame.contextLView = null), n;
      }
      function St() {
        let n = Zv();
        for (; null !== n && 64 === n.type; ) n = n.parent;
        return n;
      }
      function Zv() {
        return se.lFrame.currentTNode;
      }
      function ni(n, t) {
        const e = se.lFrame;
        (e.currentTNode = n), (e.isParent = t);
      }
      function qh() {
        return se.lFrame.isParent;
      }
      function Kh() {
        se.lFrame.isParent = !1;
      }
      function So() {
        return se.lFrame.bindingIndex++;
      }
      function Fi(n) {
        const t = se.lFrame,
          e = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + n), e;
      }
      function WA(n, t) {
        const e = se.lFrame;
        (e.bindingIndex = e.bindingRootIndex = n), Xh(t);
      }
      function Xh(n) {
        se.lFrame.currentDirectiveIndex = n;
      }
      function Zh(n) {
        const t = se.lFrame.currentDirectiveIndex;
        return -1 === t ? null : n[t];
      }
      function tb() {
        return se.lFrame.currentQueryIndex;
      }
      function Qh(n) {
        se.lFrame.currentQueryIndex = n;
      }
      function qA(n) {
        const t = n[1];
        return 2 === t.type ? t.declTNode : 1 === t.type ? n[6] : null;
      }
      function nb(n, t, e) {
        if (e & J.SkipSelf) {
          let r = t,
            o = n;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              e & J.Host ||
              ((r = qA(o)), null === r || ((o = o[15]), 10 & r.type)));

          );
          if (null === r) return !1;
          (t = r), (n = o);
        }
        const i = (se.lFrame = ib());
        return (i.currentTNode = t), (i.lView = n), !0;
      }
      function Jh(n) {
        const t = ib(),
          e = n[1];
        (se.lFrame = t),
          (t.currentTNode = e.firstChild),
          (t.lView = n),
          (t.tView = e),
          (t.contextLView = n),
          (t.bindingIndex = e.bindingStartIndex),
          (t.inI18n = !1);
      }
      function ib() {
        const n = se.lFrame,
          t = null === n ? null : n.child;
        return null === t ? rb(n) : t;
      }
      function rb(n) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: n,
          child: null,
          inI18n: !1,
        };
        return null !== n && (n.child = t), t;
      }
      function ob() {
        const n = se.lFrame;
        return (
          (se.lFrame = n.parent), (n.currentTNode = null), (n.lView = null), n
        );
      }
      const ab = ob;
      function em() {
        const n = ob();
        (n.isParent = !0),
          (n.tView = null),
          (n.selectedIndex = -1),
          (n.contextLView = null),
          (n.elementDepthCount = 0),
          (n.currentDirectiveIndex = -1),
          (n.currentNamespace = null),
          (n.bindingRootIndex = -1),
          (n.bindingIndex = -1),
          (n.currentQueryIndex = 0);
      }
      function $t() {
        return se.lFrame.selectedIndex;
      }
      function Fr(n) {
        se.lFrame.selectedIndex = n;
      }
      function et() {
        const n = se.lFrame;
        return Yv(n.tView, n.selectedIndex);
      }
      function ii() {
        se.lFrame.currentNamespace = 'svg';
      }
      function es() {
        !(function QA() {
          se.lFrame.currentNamespace = null;
        })();
      }
      function yc(n, t) {
        for (let e = t.directiveStart, i = t.directiveEnd; e < i; e++) {
          const o = n.data[e].type.prototype,
            {
              ngAfterContentInit: a,
              ngAfterContentChecked: s,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: d,
            } = o;
          a && (n.contentHooks || (n.contentHooks = [])).push(-e, a),
            s &&
              ((n.contentHooks || (n.contentHooks = [])).push(e, s),
              (n.contentCheckHooks || (n.contentCheckHooks = [])).push(e, s)),
            l && (n.viewHooks || (n.viewHooks = [])).push(-e, l),
            c &&
              ((n.viewHooks || (n.viewHooks = [])).push(e, c),
              (n.viewCheckHooks || (n.viewCheckHooks = [])).push(e, c)),
            null != d && (n.destroyHooks || (n.destroyHooks = [])).push(e, d);
        }
      }
      function wc(n, t, e) {
        sb(n, t, 3, e);
      }
      function Cc(n, t, e, i) {
        (3 & n[2]) === e && sb(n, t, e, i);
      }
      function tm(n, t) {
        let e = n[2];
        (3 & e) === t && ((e &= 2047), (e += 1), (n[2] = e));
      }
      function sb(n, t, e, i) {
        const o = i ?? -1,
          a = t.length - 1;
        let s = 0;
        for (let l = void 0 !== i ? 65535 & n[18] : 0; l < a; l++)
          if ('number' == typeof t[l + 1]) {
            if (((s = t[l]), null != i && s >= i)) break;
          } else
            t[l] < 0 && (n[18] += 65536),
              (s < o || -1 == o) &&
                (tT(n, e, t, l), (n[18] = (4294901760 & n[18]) + l + 2)),
              l++;
      }
      function tT(n, t, e, i) {
        const r = e[i] < 0,
          o = e[i + 1],
          s = n[r ? -e[i] : e[i]];
        if (r) {
          if (n[2] >> 11 < n[18] >> 16 && (3 & n[2]) === t) {
            n[2] += 2048;
            try {
              o.call(s);
            } finally {
            }
          }
        } else
          try {
            o.call(s);
          } finally {
          }
      }
      class ts {
        constructor(t, e, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = i);
        }
      }
      function im(n, t, e) {
        let i = 0;
        for (; i < e.length; ) {
          const r = e[i];
          if ('number' == typeof r) {
            if (0 !== r) break;
            i++;
            const o = e[i++],
              a = e[i++],
              s = e[i++];
            n.setAttribute(t, a, s, o);
          } else {
            const o = r,
              a = e[++i];
            cb(o) ? n.setProperty(t, o, a) : n.setAttribute(t, o, a), i++;
          }
        }
        return i;
      }
      function lb(n) {
        return 3 === n || 4 === n || 6 === n;
      }
      function cb(n) {
        return 64 === n.charCodeAt(0);
      }
      function ns(n, t) {
        if (null !== t && 0 !== t.length)
          if (null === n || 0 === n.length) n = t.slice();
          else {
            let e = -1;
            for (let i = 0; i < t.length; i++) {
              const r = t[i];
              'number' == typeof r
                ? (e = r)
                : 0 === e ||
                  db(n, e, r, null, -1 === e || 2 === e ? t[++i] : null);
            }
          }
        return n;
      }
      function db(n, t, e, i, r) {
        let o = 0,
          a = n.length;
        if (-1 === t) a = -1;
        else
          for (; o < n.length; ) {
            const s = n[o++];
            if ('number' == typeof s) {
              if (s === t) {
                a = -1;
                break;
              }
              if (s > t) {
                a = o - 1;
                break;
              }
            }
          }
        for (; o < n.length; ) {
          const s = n[o];
          if ('number' == typeof s) break;
          if (s === e) {
            if (null === i) return void (null !== r && (n[o + 1] = r));
            if (i === n[o + 1]) return void (n[o + 2] = r);
          }
          o++, null !== i && o++, null !== r && o++;
        }
        -1 !== a && (n.splice(a, 0, t), (o = a + 1)),
          n.splice(o++, 0, e),
          null !== i && n.splice(o++, 0, i),
          null !== r && n.splice(o++, 0, r);
      }
      function ub(n) {
        return -1 !== n;
      }
      function xc(n) {
        return 32767 & n;
      }
      function Dc(n, t) {
        let e = (function oT(n) {
            return n >> 16;
          })(n),
          i = t;
        for (; e > 0; ) (i = i[15]), e--;
        return i;
      }
      let rm = !0;
      function Mc(n) {
        const t = rm;
        return (rm = n), t;
      }
      let aT = 0;
      const ri = {};
      function Ec(n, t) {
        const e = fb(n, t);
        if (-1 !== e) return e;
        const i = t[1];
        i.firstCreatePass &&
          ((n.injectorIndex = t.length),
          om(i.data, n),
          om(t, null),
          om(i.blueprint, null));
        const r = am(n, t),
          o = n.injectorIndex;
        if (ub(r)) {
          const a = xc(r),
            s = Dc(r, t),
            l = s[1].data;
          for (let c = 0; c < 8; c++) t[o + c] = s[a + c] | l[a + c];
        }
        return (t[o + 8] = r), o;
      }
      function om(n, t) {
        n.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function fb(n, t) {
        return -1 === n.injectorIndex ||
          (n.parent && n.parent.injectorIndex === n.injectorIndex) ||
          null === t[n.injectorIndex + 8]
          ? -1
          : n.injectorIndex;
      }
      function am(n, t) {
        if (n.parent && -1 !== n.parent.injectorIndex)
          return n.parent.injectorIndex;
        let e = 0,
          i = null,
          r = t;
        for (; null !== r; ) {
          if (((i = wb(r)), null === i)) return -1;
          if ((e++, (r = r[15]), -1 !== i.injectorIndex))
            return i.injectorIndex | (e << 16);
        }
        return -1;
      }
      function sm(n, t, e) {
        !(function sT(n, t, e) {
          let i;
          'string' == typeof e
            ? (i = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(qa) && (i = e[qa]),
            null == i && (i = e[qa] = aT++);
          const r = 255 & i;
          t.data[n + (r >> 5)] |= 1 << r;
        })(n, t, e);
      }
      function pb(n, t, e) {
        if (e & J.Optional || void 0 !== n) return n;
        sc();
      }
      function gb(n, t, e, i) {
        if (
          (e & J.Optional && void 0 === i && (i = null),
          !(e & (J.Self | J.Host)))
        ) {
          const r = n[9],
            o = Cn(void 0);
          try {
            return r ? r.get(t, i, e & J.Optional) : Tv(t, i, e & J.Optional);
          } finally {
            Cn(o);
          }
        }
        return pb(i, 0, e);
      }
      function _b(n, t, e, i = J.Default, r) {
        if (null !== n) {
          if (1024 & t[2]) {
            const a = (function hT(n, t, e, i, r) {
              let o = n,
                a = t;
              for (
                ;
                null !== o && null !== a && 1024 & a[2] && !(256 & a[2]);

              ) {
                const s = vb(o, a, e, i | J.Self, ri);
                if (s !== ri) return s;
                let l = o.parent;
                if (!l) {
                  const c = a[21];
                  if (c) {
                    const d = c.get(e, ri, i);
                    if (d !== ri) return d;
                  }
                  (l = wb(a)), (a = a[15]);
                }
                o = l;
              }
              return r;
            })(n, t, e, i, ri);
            if (a !== ri) return a;
          }
          const o = vb(n, t, e, i, ri);
          if (o !== ri) return o;
        }
        return gb(t, e, i, r);
      }
      function vb(n, t, e, i, r) {
        const o = (function dT(n) {
          if ('string' == typeof n) return n.charCodeAt(0) || 0;
          const t = n.hasOwnProperty(qa) ? n[qa] : void 0;
          return 'number' == typeof t ? (t >= 0 ? 255 & t : uT) : t;
        })(e);
        if ('function' == typeof o) {
          if (!nb(t, n, i)) return i & J.Host ? pb(r, 0, i) : gb(t, e, i, r);
          try {
            const a = o(i);
            if (null != a || i & J.Optional) return a;
            sc();
          } finally {
            ab();
          }
        } else if ('number' == typeof o) {
          let a = null,
            s = fb(n, t),
            l = -1,
            c = i & J.Host ? t[16][6] : null;
          for (
            (-1 === s || i & J.SkipSelf) &&
            ((l = -1 === s ? am(n, t) : t[s + 8]),
            -1 !== l && yb(i, !1)
              ? ((a = t[1]), (s = xc(l)), (t = Dc(l, t)))
              : (s = -1));
            -1 !== s;

          ) {
            const d = t[1];
            if (bb(o, s, d.data)) {
              const u = cT(s, t, e, a, i, c);
              if (u !== ri) return u;
            }
            (l = t[s + 8]),
              -1 !== l && yb(i, t[1].data[s + 8] === c) && bb(o, s, t)
                ? ((a = d), (s = xc(l)), (t = Dc(l, t)))
                : (s = -1);
          }
        }
        return r;
      }
      function cT(n, t, e, i, r, o) {
        const a = t[1],
          s = a.data[n + 8],
          d = Sc(
            s,
            a,
            e,
            null == i ? Qa(s) && rm : i != a && 0 != (3 & s.type),
            r & J.Host && o === s
          );
        return null !== d ? Pr(t, a, d, s) : ri;
      }
      function Sc(n, t, e, i, r) {
        const o = n.providerIndexes,
          a = t.data,
          s = 1048575 & o,
          l = n.directiveStart,
          d = o >> 20,
          h = r ? s + d : n.directiveEnd;
        for (let f = i ? s : s + d; f < h; f++) {
          const g = a[f];
          if ((f < l && e === g) || (f >= l && g.type === e)) return f;
        }
        if (r) {
          const f = a[l];
          if (f && Un(f) && f.type === e) return l;
        }
        return null;
      }
      function Pr(n, t, e, i) {
        let r = n[e];
        const o = t.data;
        if (
          (function nT(n) {
            return n instanceof ts;
          })(r)
        ) {
          const a = r;
          a.resolving &&
            (function sA(n, t) {
              const e = t ? `. Dependency path: ${t.join(' > ')} > ${n}` : '';
              throw new k(
                -200,
                `Circular dependency in DI detected for ${n}${e}`
              );
            })(
              (function Ne(n) {
                return 'function' == typeof n
                  ? n.name || n.toString()
                  : 'object' == typeof n &&
                    null != n &&
                    'function' == typeof n.type
                  ? n.type.name || n.type.toString()
                  : ae(n);
              })(o[e])
            );
          const s = Mc(a.canSeeViewProviders);
          a.resolving = !0;
          const l = a.injectImpl ? Cn(a.injectImpl) : null;
          nb(n, i, J.Default);
          try {
            (r = n[e] = a.factory(void 0, o, n, i)),
              t.firstCreatePass &&
                e >= i.directiveStart &&
                (function eT(n, t, e) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: r,
                    ngDoCheck: o,
                  } = t.type.prototype;
                  if (i) {
                    const a = jv(t);
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(n, a),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(n, a);
                  }
                  r &&
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - n, r),
                    o &&
                      ((e.preOrderHooks || (e.preOrderHooks = [])).push(n, o),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(n, o));
                })(e, o[e], t);
          } finally {
            null !== l && Cn(l), Mc(s), (a.resolving = !1), ab();
          }
        }
        return r;
      }
      function bb(n, t, e) {
        return !!(e[t + (n >> 5)] & (1 << n));
      }
      function yb(n, t) {
        return !(n & J.Self || (n & J.Host && t));
      }
      class Ao {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e, i) {
          return _b(this._tNode, this._lView, t, uc(i), e);
        }
      }
      function uT() {
        return new Ao(St(), T());
      }
      function _e(n) {
        return sr(() => {
          const t = n.prototype.constructor,
            e = t[Ii] || lm(t),
            i = Object.prototype;
          let r = Object.getPrototypeOf(n.prototype).constructor;
          for (; r && r !== i; ) {
            const o = r[Ii] || lm(r);
            if (o && o !== e) return o;
            r = Object.getPrototypeOf(r);
          }
          return (o) => new o();
        });
      }
      function lm(n) {
        return Ph(n)
          ? () => {
              const t = lm(Q(n));
              return t && t();
            }
          : Or(n);
      }
      function wb(n) {
        const t = n[1],
          e = t.type;
        return 2 === e ? t.declTNode : 1 === e ? n[6] : null;
      }
      function cr(n) {
        return (function lT(n, t) {
          if ('class' === t) return n.classes;
          if ('style' === t) return n.styles;
          const e = n.attrs;
          if (e) {
            const i = e.length;
            let r = 0;
            for (; r < i; ) {
              const o = e[r];
              if (lb(o)) break;
              if (0 === o) r += 2;
              else if ('number' == typeof o)
                for (r++; r < i && 'string' == typeof e[r]; ) r++;
              else {
                if (o === t) return e[r + 1];
                r += 2;
              }
            }
          }
          return null;
        })(St(), n);
      }
      const Io = '__parameters__';
      function Oo(n, t, e) {
        return sr(() => {
          const i = (function cm(n) {
            return function (...e) {
              if (n) {
                const i = n(...e);
                for (const r in i) this[r] = i[r];
              }
            };
          })(t);
          function r(...o) {
            if (this instanceof r) return i.apply(this, o), this;
            const a = new r(...o);
            return (s.annotation = a), s;
            function s(l, c, d) {
              const u = l.hasOwnProperty(Io)
                ? l[Io]
                : Object.defineProperty(l, Io, { value: [] })[Io];
              for (; u.length <= d; ) u.push(null);
              return (u[d] = u[d] || []).push(a), l;
            }
          }
          return (
            e && (r.prototype = Object.create(e.prototype)),
            (r.prototype.ngMetadataName = n),
            (r.annotationCls = r),
            r
          );
        });
      }
      class A {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = I({
                  token: this,
                  providedIn: e.providedIn || 'root',
                  factory: e.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function Nr(n, t) {
        n.forEach((e) => (Array.isArray(e) ? Nr(e, t) : t(e)));
      }
      function xb(n, t, e) {
        t >= n.length ? n.push(e) : n.splice(t, 0, e);
      }
      function kc(n, t) {
        return t >= n.length - 1 ? n.pop() : n.splice(t, 1)[0];
      }
      function os(n, t) {
        const e = [];
        for (let i = 0; i < n; i++) e.push(t);
        return e;
      }
      function un(n, t, e) {
        let i = Fo(n, t);
        return (
          i >= 0
            ? (n[1 | i] = e)
            : ((i = ~i),
              (function gT(n, t, e, i) {
                let r = n.length;
                if (r == t) n.push(e, i);
                else if (1 === r) n.push(i, n[0]), (n[0] = e);
                else {
                  for (r--, n.push(n[r - 1], n[r]); r > t; )
                    (n[r] = n[r - 2]), r--;
                  (n[t] = e), (n[t + 1] = i);
                }
              })(n, i, t, e)),
          i
        );
      }
      function um(n, t) {
        const e = Fo(n, t);
        if (e >= 0) return n[1 | e];
      }
      function Fo(n, t) {
        return (function Db(n, t, e) {
          let i = 0,
            r = n.length >> e;
          for (; r !== i; ) {
            const o = i + ((r - i) >> 1),
              a = n[o << e];
            if (t === a) return o << e;
            a > t ? (r = o) : (i = o + 1);
          }
          return ~(r << e);
        })(n, t, 1);
      }
      const Tc = Ya(
          Oo('Inject', (n) => ({ token: n })),
          -1
        ),
        hn = Ya(Oo('Optional'), 8),
        oi = Ya(Oo('SkipSelf'), 4);
      var Jt = (() => (
        ((Jt = Jt || {})[(Jt.Important = 1)] = 'Important'),
        (Jt[(Jt.DashCase = 2)] = 'DashCase'),
        Jt
      ))();
      const gm = new Map();
      let VT = 0;
      const vm = '__ngContext__';
      function Pt(n, t) {
        ln(t)
          ? ((n[vm] = t[20]),
            (function HT(n) {
              gm.set(n[20], n);
            })(t))
          : (n[vm] = t);
      }
      function ym(n, t) {
        return undefined(n, t);
      }
      function cs(n) {
        const t = n[3];
        return jn(t) ? t[3] : t;
      }
      function wm(n) {
        return $b(n[13]);
      }
      function Cm(n) {
        return $b(n[4]);
      }
      function $b(n) {
        for (; null !== n && !jn(n); ) n = n[4];
        return n;
      }
      function No(n, t, e, i, r) {
        if (null != i) {
          let o,
            a = !1;
          jn(i) ? (o = i) : ln(i) && ((a = !0), (i = i[0]));
          const s = Et(i);
          0 === n && null !== e
            ? null == r
              ? Xb(t, e, s)
              : Lr(t, e, s, r || null, !0)
            : 1 === n && null !== e
            ? Lr(t, e, s, r || null, !0)
            : 2 === n
            ? (function Am(n, t, e) {
                const i = Oc(n, t);
                i &&
                  (function aI(n, t, e, i) {
                    n.removeChild(t, e, i);
                  })(n, i, t, e);
              })(t, s, a)
            : 3 === n && t.destroyNode(s),
            null != o &&
              (function cI(n, t, e, i, r) {
                const o = e[7];
                o !== Et(e) && No(t, n, i, o, r);
                for (let s = 10; s < e.length; s++) {
                  const l = e[s];
                  ds(l[1], l, n, t, i, o);
                }
              })(t, n, o, e, r);
        }
      }
      function Dm(n, t, e) {
        return n.createElement(t, e);
      }
      function Wb(n, t) {
        const e = n[9],
          i = e.indexOf(t),
          r = t[3];
        512 & t[2] && ((t[2] &= -513), Yh(r, -1)), e.splice(i, 1);
      }
      function Mm(n, t) {
        if (n.length <= 10) return;
        const e = 10 + t,
          i = n[e];
        if (i) {
          const r = i[17];
          null !== r && r !== n && Wb(r, i), t > 0 && (n[e - 1][4] = i[4]);
          const o = kc(n, 10 + t);
          !(function QT(n, t) {
            ds(n, t, t[11], 2, null, null), (t[0] = null), (t[6] = null);
          })(i[1], i);
          const a = o[19];
          null !== a && a.detachView(o[1]),
            (i[3] = null),
            (i[4] = null),
            (i[2] &= -65);
        }
        return i;
      }
      function Yb(n, t) {
        if (!(128 & t[2])) {
          const e = t[11];
          e.destroyNode && ds(n, t, e, 3, null, null),
            (function tI(n) {
              let t = n[13];
              if (!t) return Em(n[1], n);
              for (; t; ) {
                let e = null;
                if (ln(t)) e = t[13];
                else {
                  const i = t[10];
                  i && (e = i);
                }
                if (!e) {
                  for (; t && !t[4] && t !== n; )
                    ln(t) && Em(t[1], t), (t = t[3]);
                  null === t && (t = n), ln(t) && Em(t[1], t), (e = t && t[4]);
                }
                t = e;
              }
            })(t);
        }
      }
      function Em(n, t) {
        if (!(128 & t[2])) {
          (t[2] &= -65),
            (t[2] |= 128),
            (function oI(n, t) {
              let e;
              if (null != n && null != (e = n.destroyHooks))
                for (let i = 0; i < e.length; i += 2) {
                  const r = t[e[i]];
                  if (!(r instanceof ts)) {
                    const o = e[i + 1];
                    if (Array.isArray(o))
                      for (let a = 0; a < o.length; a += 2) {
                        const s = r[o[a]],
                          l = o[a + 1];
                        try {
                          l.call(s);
                        } finally {
                        }
                      }
                    else
                      try {
                        o.call(r);
                      } finally {
                      }
                  }
                }
            })(n, t),
            (function rI(n, t) {
              const e = n.cleanup,
                i = t[7];
              let r = -1;
              if (null !== e)
                for (let o = 0; o < e.length - 1; o += 2)
                  if ('string' == typeof e[o]) {
                    const a = e[o + 3];
                    a >= 0 ? i[(r = a)]() : i[(r = -a)].unsubscribe(), (o += 2);
                  } else {
                    const a = i[(r = e[o + 1])];
                    e[o].call(a);
                  }
              if (null !== i) {
                for (let o = r + 1; o < i.length; o++) (0, i[o])();
                t[7] = null;
              }
            })(n, t),
            1 === t[1].type && t[11].destroy();
          const e = t[17];
          if (null !== e && jn(t[3])) {
            e !== t[3] && Wb(e, t);
            const i = t[19];
            null !== i && i.detachView(n);
          }
          !(function zT(n) {
            gm.delete(n[20]);
          })(t);
        }
      }
      function qb(n, t, e) {
        return (function Kb(n, t, e) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return e[0];
          {
            const { componentOffset: r } = i;
            if (r > -1) {
              const { encapsulation: o } = n.data[i.directiveStart + r];
              if (o === Hn.None || o === Hn.Emulated) return null;
            }
            return cn(i, e);
          }
        })(n, t.parent, e);
      }
      function Lr(n, t, e, i, r) {
        n.insertBefore(t, e, i, r);
      }
      function Xb(n, t, e) {
        n.appendChild(t, e);
      }
      function Zb(n, t, e, i, r) {
        null !== i ? Lr(n, t, e, i, r) : Xb(n, t, e);
      }
      function Oc(n, t) {
        return n.parentNode(t);
      }
      function Qb(n, t, e) {
        return ey(n, t, e);
      }
      let Nc,
        Rm,
        Lc,
        ey = function Jb(n, t, e) {
          return 40 & n.type ? cn(n, e) : null;
        };
      function Fc(n, t, e, i) {
        const r = qb(n, i, t),
          o = t[11],
          s = Qb(i.parent || t[6], i, t);
        if (null != r)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) Zb(o, r, e[l], s, !1);
          else Zb(o, r, e, s, !1);
      }
      function Pc(n, t) {
        if (null !== t) {
          const e = t.type;
          if (3 & e) return cn(t, n);
          if (4 & e) return km(-1, n[t.index]);
          if (8 & e) {
            const i = t.child;
            if (null !== i) return Pc(n, i);
            {
              const r = n[t.index];
              return jn(r) ? km(-1, r) : Et(r);
            }
          }
          if (32 & e) return ym(t, n)() || Et(n[t.index]);
          {
            const i = ny(n, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : Pc(cs(n[16]), i)
              : Pc(n, t.next);
          }
        }
        return null;
      }
      function ny(n, t) {
        return null !== t ? n[16][6].projection[t.projection] : null;
      }
      function km(n, t) {
        const e = 10 + n + 1;
        if (e < t.length) {
          const i = t[e],
            r = i[1].firstChild;
          if (null !== r) return Pc(i, r);
        }
        return t[7];
      }
      function Tm(n, t, e, i, r, o, a) {
        for (; null != e; ) {
          const s = i[e.index],
            l = e.type;
          if (
            (a && 0 === t && (s && Pt(Et(s), i), (e.flags |= 2)),
            32 != (32 & e.flags))
          )
            if (8 & l) Tm(n, t, e.child, i, r, o, !1), No(t, n, r, s, o);
            else if (32 & l) {
              const c = ym(e, i);
              let d;
              for (; (d = c()); ) No(t, n, r, d, o);
              No(t, n, r, s, o);
            } else 16 & l ? iy(n, t, i, e, r, o) : No(t, n, r, s, o);
          e = a ? e.projectionNext : e.next;
        }
      }
      function ds(n, t, e, i, r, o) {
        Tm(e, i, n.firstChild, t, r, o, !1);
      }
      function iy(n, t, e, i, r, o) {
        const a = e[16],
          l = a[6].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) No(t, n, r, l[c], o);
        else Tm(n, t, l, a[3], r, o, !0);
      }
      function ry(n, t, e) {
        '' === e
          ? n.removeAttribute(t, 'class')
          : n.setAttribute(t, 'class', e);
      }
      function oy(n, t, e) {
        const { mergedAttrs: i, classes: r, styles: o } = e;
        null !== i && im(n, t, i),
          null !== r && ry(n, t, r),
          null !== o &&
            (function uI(n, t, e) {
              n.setAttribute(t, 'style', e);
            })(n, t, o);
      }
      function Vr(n) {
        return (
          (function Im() {
            if (void 0 === Nc && ((Nc = null), $e.trustedTypes))
              try {
                Nc = $e.trustedTypes.createPolicy('angular', {
                  createHTML: (n) => n,
                  createScript: (n) => n,
                  createScriptURL: (n) => n,
                });
              } catch {}
            return Nc;
          })()?.createHTML(n) || n
        );
      }
      function cy(n) {
        return (
          (function Om() {
            if (void 0 === Lc && ((Lc = null), $e.trustedTypes))
              try {
                Lc = $e.trustedTypes.createPolicy('angular#unsafe-bypass', {
                  createHTML: (n) => n,
                  createScript: (n) => n,
                  createScriptURL: (n) => n,
                });
              } catch {}
            return Lc;
          })()?.createScriptURL(n) || n
        );
      }
      class Br {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${oc})`;
        }
      }
      class gI extends Br {
        getTypeName() {
          return 'HTML';
        }
      }
      class _I extends Br {
        getTypeName() {
          return 'Style';
        }
      }
      class vI extends Br {
        getTypeName() {
          return 'Script';
        }
      }
      class bI extends Br {
        getTypeName() {
          return 'URL';
        }
      }
      class yI extends Br {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function mn(n) {
        return n instanceof Br ? n.changingThisBreaksApplicationSecurity : n;
      }
      function ai(n, t) {
        const e = (function wI(n) {
          return (n instanceof Br && n.getTypeName()) || null;
        })(n);
        if (null != e && e !== t) {
          if ('ResourceURL' === e && 'URL' === t) return !0;
          throw new Error(`Required a safe ${t}, got a ${e} (see ${oc})`);
        }
        return e === t;
      }
      class SI {
        constructor(t) {
          this.inertDocumentHelper = t;
        }
        getInertBodyElement(t) {
          t = '<body><remove></remove>' + t;
          try {
            const e = new window.DOMParser().parseFromString(
              Vr(t),
              'text/html'
            ).body;
            return null === e
              ? this.inertDocumentHelper.getInertBodyElement(t)
              : (e.removeChild(e.firstChild), e);
          } catch {
            return null;
          }
        }
      }
      class kI {
        constructor(t) {
          if (
            ((this.defaultDoc = t),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                'sanitization-inert'
              )),
            null == this.inertDocument.body)
          ) {
            const e = this.inertDocument.createElement('html');
            this.inertDocument.appendChild(e);
            const i = this.inertDocument.createElement('body');
            e.appendChild(i);
          }
        }
        getInertBodyElement(t) {
          const e = this.inertDocument.createElement('template');
          if ('content' in e) return (e.innerHTML = Vr(t)), e;
          const i = this.inertDocument.createElement('body');
          return (
            (i.innerHTML = Vr(t)),
            this.defaultDoc.documentMode && this.stripCustomNsAttrs(i),
            i
          );
        }
        stripCustomNsAttrs(t) {
          const e = t.attributes;
          for (let r = e.length - 1; 0 < r; r--) {
            const a = e.item(r).name;
            ('xmlns:ns1' === a || 0 === a.indexOf('ns1:')) &&
              t.removeAttribute(a);
          }
          let i = t.firstChild;
          for (; i; )
            i.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(i),
              (i = i.nextSibling);
        }
      }
      const TI =
        /^(?:(?:https?|mailto|data|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;
      function Vc(n) {
        return (n = String(n)).match(TI) ? n : 'unsafe:' + n;
      }
      function Pi(n) {
        const t = {};
        for (const e of n.split(',')) t[e] = !0;
        return t;
      }
      function us(...n) {
        const t = {};
        for (const e of n)
          for (const i in e) e.hasOwnProperty(i) && (t[i] = !0);
        return t;
      }
      const uy = Pi('area,br,col,hr,img,wbr'),
        hy = Pi('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        my = Pi('rp,rt'),
        Fm = us(
          uy,
          us(
            hy,
            Pi(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'
            )
          ),
          us(
            my,
            Pi(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'
            )
          ),
          us(my, hy)
        ),
        Pm = Pi('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        fy = us(
          Pm,
          Pi(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width'
          ),
          Pi(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext'
          )
        ),
        II = Pi('script,style,template');
      class RI {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let e = t.firstChild,
            i = !0;
          for (; e; )
            if (
              (e.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(e))
                : e.nodeType === Node.TEXT_NODE
                ? this.chars(e.nodeValue)
                : (this.sanitizedSomething = !0),
              i && e.firstChild)
            )
              e = e.firstChild;
            else
              for (; e; ) {
                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                let r = this.checkClobberedElement(e, e.nextSibling);
                if (r) {
                  e = r;
                  break;
                }
                e = this.checkClobberedElement(e, e.parentNode);
              }
          return this.buf.join('');
        }
        startElement(t) {
          const e = t.nodeName.toLowerCase();
          if (!Fm.hasOwnProperty(e))
            return (this.sanitizedSomething = !0), !II.hasOwnProperty(e);
          this.buf.push('<'), this.buf.push(e);
          const i = t.attributes;
          for (let r = 0; r < i.length; r++) {
            const o = i.item(r),
              a = o.name,
              s = a.toLowerCase();
            if (!fy.hasOwnProperty(s)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let l = o.value;
            Pm[s] && (l = Vc(l)), this.buf.push(' ', a, '="', py(l), '"');
          }
          return this.buf.push('>'), !0;
        }
        endElement(t) {
          const e = t.nodeName.toLowerCase();
          Fm.hasOwnProperty(e) &&
            !uy.hasOwnProperty(e) &&
            (this.buf.push('</'), this.buf.push(e), this.buf.push('>'));
        }
        chars(t) {
          this.buf.push(py(t));
        }
        checkClobberedElement(t, e) {
          if (
            e &&
            (t.compareDocumentPosition(e) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`
            );
          return e;
        }
      }
      const OI = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        FI = /([^\#-~ |!])/g;
      function py(n) {
        return n
          .replace(/&/g, '&amp;')
          .replace(OI, function (t) {
            return (
              '&#' +
              (1024 * (t.charCodeAt(0) - 55296) +
                (t.charCodeAt(1) - 56320) +
                65536) +
              ';'
            );
          })
          .replace(FI, function (t) {
            return '&#' + t.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let Bc;
      function gy(n, t) {
        let e = null;
        try {
          Bc =
            Bc ||
            (function dy(n) {
              const t = new kI(n);
              return (function AI() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    Vr(''),
                    'text/html'
                  );
                } catch {
                  return !1;
                }
              })()
                ? new SI(t)
                : t;
            })(n);
          let i = t ? String(t) : '';
          e = Bc.getInertBodyElement(i);
          let r = 5,
            o = i;
          do {
            if (0 === r)
              throw new Error(
                'Failed to sanitize html because the input is unstable'
              );
            r--, (i = o), (o = e.innerHTML), (e = Bc.getInertBodyElement(i));
          } while (i !== o);
          return Vr(new RI().sanitizeChildren(Nm(e) || e));
        } finally {
          if (e) {
            const i = Nm(e) || e;
            for (; i.firstChild; ) i.removeChild(i.firstChild);
          }
        }
      }
      function Nm(n) {
        return 'content' in n &&
          (function PI(n) {
            return (
              n.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === n.nodeName
            );
          })(n)
          ? n.content
          : null;
      }
      var Re = (() => (
        ((Re = Re || {})[(Re.NONE = 0)] = 'NONE'),
        (Re[(Re.HTML = 1)] = 'HTML'),
        (Re[(Re.STYLE = 2)] = 'STYLE'),
        (Re[(Re.SCRIPT = 3)] = 'SCRIPT'),
        (Re[(Re.URL = 4)] = 'URL'),
        (Re[(Re.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
        Re
      ))();
      function _y(n) {
        const t = hs();
        return t
          ? t.sanitize(Re.URL, n) || ''
          : ai(n, 'URL')
          ? mn(n)
          : Vc(ae(n));
      }
      function vy(n) {
        const t = hs();
        if (t) return cy(t.sanitize(Re.RESOURCE_URL, n) || '');
        if (ai(n, 'ResourceURL')) return cy(mn(n));
        throw new k(904, !1);
      }
      function hs() {
        const n = T();
        return n && n[12];
      }
      const Hc = new A('ENVIRONMENT_INITIALIZER'),
        yy = new A('INJECTOR', -1),
        wy = new A('INJECTOR_DEF_TYPES');
      class Cy {
        get(t, e = Ga) {
          if (e === Ga) {
            const i = new Error(`NullInjectorError: No provider for ${Ue(t)}!`);
            throw ((i.name = 'NullInjectorError'), i);
          }
          return e;
        }
      }
      function UI(...n) {
        return { ɵproviders: xy(0, n), ɵfromNgModule: !0 };
      }
      function xy(n, ...t) {
        const e = [],
          i = new Set();
        let r;
        return (
          Nr(t, (o) => {
            const a = o;
            Lm(a, e, [], i) && (r || (r = []), r.push(a));
          }),
          void 0 !== r && Dy(r, e),
          e
        );
      }
      function Dy(n, t) {
        for (let e = 0; e < n.length; e++) {
          const { providers: r } = n[e];
          Vm(r, (o) => {
            t.push(o);
          });
        }
      }
      function Lm(n, t, e, i) {
        if (!(n = Q(n))) return !1;
        let r = null,
          o = kv(n);
        const a = !o && Ve(n);
        if (o || a) {
          if (a && !a.standalone) return !1;
          r = n;
        } else {
          const l = n.ngModule;
          if (((o = kv(l)), !o)) return !1;
          r = l;
        }
        const s = i.has(r);
        if (a) {
          if (s) return !1;
          if ((i.add(r), a.dependencies)) {
            const l =
              'function' == typeof a.dependencies
                ? a.dependencies()
                : a.dependencies;
            for (const c of l) Lm(c, t, e, i);
          }
        } else {
          if (!o) return !1;
          {
            if (null != o.imports && !s) {
              let c;
              i.add(r);
              try {
                Nr(o.imports, (d) => {
                  Lm(d, t, e, i) && (c || (c = []), c.push(d));
                });
              } finally {
              }
              void 0 !== c && Dy(c, t);
            }
            if (!s) {
              const c = Or(r) || (() => new r());
              t.push(
                { provide: r, useFactory: c, deps: Ie },
                { provide: wy, useValue: r, multi: !0 },
                { provide: Hc, useValue: () => C(r), multi: !0 }
              );
            }
            const l = o.providers;
            null == l ||
              s ||
              Vm(l, (d) => {
                t.push(d);
              });
          }
        }
        return r !== n && void 0 !== n.providers;
      }
      function Vm(n, t) {
        for (let e of n)
          Nh(e) && (e = e.ɵproviders), Array.isArray(e) ? Vm(e, t) : t(e);
      }
      const $I = ze({ provide: String, useValue: ze });
      function Bm(n) {
        return null !== n && 'object' == typeof n && $I in n;
      }
      function Hr(n) {
        return 'function' == typeof n;
      }
      const Hm = new A('Set Injector scope.'),
        zc = {},
        WI = {};
      let zm;
      function jc() {
        return void 0 === zm && (zm = new Cy()), zm;
      }
      class si {}
      class Sy extends si {
        get destroyed() {
          return this._destroyed;
        }
        constructor(t, e, i, r) {
          super(),
            (this.parent = e),
            (this.source = i),
            (this.scopes = r),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Um(t, (a) => this.processProvider(a)),
            this.records.set(yy, Lo(void 0, this)),
            r.has('environment') && this.records.set(si, Lo(void 0, this));
          const o = this.records.get(Hm);
          null != o && 'string' == typeof o.value && this.scopes.add(o.value),
            (this.injectorDefTypes = new Set(this.get(wy.multi, Ie, J.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const e = yo(this),
            i = Cn(void 0);
          try {
            return t();
          } finally {
            yo(e), Cn(i);
          }
        }
        get(t, e = Ga, i = J.Default) {
          this.assertNotDestroyed(), (i = uc(i));
          const r = yo(this),
            o = Cn(void 0);
          try {
            if (!(i & J.SkipSelf)) {
              let s = this.records.get(t);
              if (void 0 === s) {
                const l =
                  (function ZI(n) {
                    return (
                      'function' == typeof n ||
                      ('object' == typeof n && n instanceof A)
                    );
                  })(t) && lc(t);
                (s = l && this.injectableDefInScope(l) ? Lo(jm(t), zc) : null),
                  this.records.set(t, s);
              }
              if (null != s) return this.hydrate(t, s);
            }
            return (i & J.Self ? jc() : this.parent).get(
              t,
              (e = i & J.Optional && e === Ga ? null : e)
            );
          } catch (a) {
            if ('NullInjectorError' === a.name) {
              if (((a[dc] = a[dc] || []).unshift(Ue(t)), r)) throw a;
              return (function CA(n, t, e, i) {
                const r = n[dc];
                throw (
                  (t[Iv] && r.unshift(t[Iv]),
                  (n.message = (function xA(n, t, e, i = null) {
                    n =
                      n && '\n' === n.charAt(0) && '\u0275' == n.charAt(1)
                        ? n.slice(2)
                        : n;
                    let r = Ue(t);
                    if (Array.isArray(t)) r = t.map(Ue).join(' -> ');
                    else if ('object' == typeof t) {
                      let o = [];
                      for (let a in t)
                        if (t.hasOwnProperty(a)) {
                          let s = t[a];
                          o.push(
                            a +
                              ':' +
                              ('string' == typeof s ? JSON.stringify(s) : Ue(s))
                          );
                        }
                      r = `{${o.join(', ')}}`;
                    }
                    return `${e}${i ? '(' + i + ')' : ''}[${r}]: ${n.replace(
                      vA,
                      '\n  '
                    )}`;
                  })('\n' + n.message, r, e, i)),
                  (n.ngTokenPath = r),
                  (n[dc] = null),
                  n)
                );
              })(a, t, 'R3InjectorError', this.source);
            }
            throw a;
          } finally {
            Cn(o), yo(r);
          }
        }
        resolveInjectorInitializers() {
          const t = yo(this),
            e = Cn(void 0);
          try {
            const i = this.get(Hc.multi, Ie, J.Self);
            for (const r of i) r();
          } finally {
            yo(t), Cn(e);
          }
        }
        toString() {
          const t = [],
            e = this.records;
          for (const i of e.keys()) t.push(Ue(i));
          return `R3Injector[${t.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new k(205, !1);
        }
        processProvider(t) {
          let e = Hr((t = Q(t))) ? t : Q(t && t.provide);
          const i = (function qI(n) {
            return Bm(n) ? Lo(void 0, n.useValue) : Lo(ky(n), zc);
          })(t);
          if (Hr(t) || !0 !== t.multi) this.records.get(e);
          else {
            let r = this.records.get(e);
            r ||
              ((r = Lo(void 0, zc, !0)),
              (r.factory = () => Hh(r.multi)),
              this.records.set(e, r)),
              (e = t),
              r.multi.push(t);
          }
          this.records.set(e, i);
        }
        hydrate(t, e) {
          return (
            e.value === zc && ((e.value = WI), (e.value = e.factory())),
            'object' == typeof e.value &&
              e.value &&
              (function XI(n) {
                return (
                  null !== n &&
                  'object' == typeof n &&
                  'function' == typeof n.ngOnDestroy
                );
              })(e.value) &&
              this._ngOnDestroyHooks.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const e = Q(t.providedIn);
          return 'string' == typeof e
            ? 'any' === e || this.scopes.has(e)
            : this.injectorDefTypes.has(e);
        }
      }
      function jm(n) {
        const t = lc(n),
          e = null !== t ? t.factory : Or(n);
        if (null !== e) return e;
        if (n instanceof A) throw new k(204, !1);
        if (n instanceof Function)
          return (function YI(n) {
            const t = n.length;
            if (t > 0) throw (os(t, '?'), new k(204, !1));
            const e = (function mA(n) {
              const t = n && (n[cc] || n[Av]);
              if (t) {
                const e = (function fA(n) {
                  if (n.hasOwnProperty('name')) return n.name;
                  const t = ('' + n).match(/^function\s*([^\s(]+)/);
                  return null === t ? '' : t[1];
                })(n);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`
                  ),
                  t
                );
              }
              return null;
            })(n);
            return null !== e ? () => e.factory(n) : () => new n();
          })(n);
        throw new k(204, !1);
      }
      function ky(n, t, e) {
        let i;
        if (Hr(n)) {
          const r = Q(n);
          return Or(r) || jm(r);
        }
        if (Bm(n)) i = () => Q(n.useValue);
        else if (
          (function Ey(n) {
            return !(!n || !n.useFactory);
          })(n)
        )
          i = () => n.useFactory(...Hh(n.deps || []));
        else if (
          (function My(n) {
            return !(!n || !n.useExisting);
          })(n)
        )
          i = () => C(Q(n.useExisting));
        else {
          const r = Q(n && (n.useClass || n.provide));
          if (
            !(function KI(n) {
              return !!n.deps;
            })(n)
          )
            return Or(r) || jm(r);
          i = () => new r(...Hh(n.deps));
        }
        return i;
      }
      function Lo(n, t, e = !1) {
        return { factory: n, value: t, multi: e ? [] : void 0 };
      }
      function Um(n, t) {
        for (const e of n)
          Array.isArray(e) ? Um(e, t) : e && Nh(e) ? Um(e.ɵproviders, t) : t(e);
      }
      class QI {}
      class Ay {}
      class eR {
        resolveComponentFactory(t) {
          throw (function JI(n) {
            const t = Error(
              `No component factory found for ${Ue(
                n
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (t.ngComponent = n), t;
          })(t);
        }
      }
      let zr = (() => {
        class n {}
        return (n.NULL = new eR()), n;
      })();
      function tR() {
        return Vo(St(), T());
      }
      function Vo(n, t) {
        return new j(cn(n, t));
      }
      let j = (() => {
        class n {
          constructor(e) {
            this.nativeElement = e;
          }
        }
        return (n.__NG_ELEMENT_ID__ = tR), n;
      })();
      function nR(n) {
        return n instanceof j ? n.nativeElement : n;
      }
      class ms {}
      let Ni = (() => {
          class n {}
          return (
            (n.__NG_ELEMENT_ID__ = () =>
              (function iR() {
                const n = T(),
                  e = dn(St().index, n);
                return (ln(e) ? e : n)[11];
              })()),
            n
          );
        })(),
        rR = (() => {
          class n {}
          return (
            (n.ɵprov = I({
              token: n,
              providedIn: 'root',
              factory: () => null,
            })),
            n
          );
        })();
      class jr {
        constructor(t) {
          (this.full = t),
            (this.major = t.split('.')[0]),
            (this.minor = t.split('.')[1]),
            (this.patch = t.split('.').slice(2).join('.'));
        }
      }
      const oR = new jr('15.1.3'),
        $m = {};
      function Wm(n) {
        return n.ngOriginalError;
      }
      class Li {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t);
          this._console.error('ERROR', t),
            e && this._console.error('ORIGINAL ERROR', e);
        }
        _findOriginalError(t) {
          let e = t && Wm(t);
          for (; e && Wm(e); ) e = Wm(e);
          return e || null;
        }
      }
      function Vi(n) {
        return n instanceof Function ? n() : n;
      }
      function Ry(n, t, e) {
        let i = n.length;
        for (;;) {
          const r = n.indexOf(t, e);
          if (-1 === r) return r;
          if (0 === r || n.charCodeAt(r - 1) <= 32) {
            const o = t.length;
            if (r + o === i || n.charCodeAt(r + o) <= 32) return r;
          }
          e = r + 1;
        }
      }
      const Oy = 'ng-template';
      function gR(n, t, e) {
        let i = 0;
        for (; i < n.length; ) {
          let r = n[i++];
          if (e && 'class' === r) {
            if (((r = n[i]), -1 !== Ry(r.toLowerCase(), t, 0))) return !0;
          } else if (1 === r) {
            for (; i < n.length && 'string' == typeof (r = n[i++]); )
              if (r.toLowerCase() === t) return !0;
            return !1;
          }
        }
        return !1;
      }
      function Fy(n) {
        return 4 === n.type && n.value !== Oy;
      }
      function _R(n, t, e) {
        return t === (4 !== n.type || e ? n.value : Oy);
      }
      function vR(n, t, e) {
        let i = 4;
        const r = n.attrs || [],
          o = (function wR(n) {
            for (let t = 0; t < n.length; t++) if (lb(n[t])) return t;
            return n.length;
          })(r);
        let a = !1;
        for (let s = 0; s < t.length; s++) {
          const l = t[s];
          if ('number' != typeof l) {
            if (!a)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ('' !== l && !_R(n, l, e)) || ('' === l && 1 === t.length))
                ) {
                  if ($n(i)) return !1;
                  a = !0;
                }
              } else {
                const c = 8 & i ? l : t[++s];
                if (8 & i && null !== n.attrs) {
                  if (!gR(n.attrs, c, e)) {
                    if ($n(i)) return !1;
                    a = !0;
                  }
                  continue;
                }
                const u = bR(8 & i ? 'class' : l, r, Fy(n), e);
                if (-1 === u) {
                  if ($n(i)) return !1;
                  a = !0;
                  continue;
                }
                if ('' !== c) {
                  let h;
                  h = u > o ? '' : r[u + 1].toLowerCase();
                  const f = 8 & i ? h : null;
                  if ((f && -1 !== Ry(f, c, 0)) || (2 & i && c !== h)) {
                    if ($n(i)) return !1;
                    a = !0;
                  }
                }
              }
          } else {
            if (!a && !$n(i) && !$n(l)) return !1;
            if (a && $n(l)) continue;
            (a = !1), (i = l | (1 & i));
          }
        }
        return $n(i) || a;
      }
      function $n(n) {
        return 0 == (1 & n);
      }
      function bR(n, t, e, i) {
        if (null === t) return -1;
        let r = 0;
        if (i || !e) {
          let o = !1;
          for (; r < t.length; ) {
            const a = t[r];
            if (a === n) return r;
            if (3 === a || 6 === a) o = !0;
            else {
              if (1 === a || 2 === a) {
                let s = t[++r];
                for (; 'string' == typeof s; ) s = t[++r];
                continue;
              }
              if (4 === a) break;
              if (0 === a) {
                r += 4;
                continue;
              }
            }
            r += o ? 1 : 2;
          }
          return -1;
        }
        return (function CR(n, t) {
          let e = n.indexOf(4);
          if (e > -1)
            for (e++; e < n.length; ) {
              const i = n[e];
              if ('number' == typeof i) return -1;
              if (i === t) return e;
              e++;
            }
          return -1;
        })(t, n);
      }
      function Py(n, t, e = !1) {
        for (let i = 0; i < t.length; i++) if (vR(n, t[i], e)) return !0;
        return !1;
      }
      function xR(n, t) {
        e: for (let e = 0; e < t.length; e++) {
          const i = t[e];
          if (n.length === i.length) {
            for (let r = 0; r < n.length; r++) if (n[r] !== i[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function Ny(n, t) {
        return n ? ':not(' + t.trim() + ')' : t;
      }
      function DR(n) {
        let t = n[0],
          e = 1,
          i = 2,
          r = '',
          o = !1;
        for (; e < n.length; ) {
          let a = n[e];
          if ('string' == typeof a)
            if (2 & i) {
              const s = n[++e];
              r += '[' + a + (s.length > 0 ? '="' + s + '"' : '') + ']';
            } else 8 & i ? (r += '.' + a) : 4 & i && (r += ' ' + a);
          else
            '' !== r && !$n(a) && ((t += Ny(o, r)), (r = '')),
              (i = a),
              (o = o || !$n(i));
          e++;
        }
        return '' !== r && (t += Ny(o, r)), t;
      }
      const le = {};
      function b(n) {
        Ly(xe(), T(), $t() + n, !1);
      }
      function Ly(n, t, e, i) {
        if (!i)
          if (3 == (3 & t[2])) {
            const o = n.preOrderCheckHooks;
            null !== o && wc(t, o, e);
          } else {
            const o = n.preOrderHooks;
            null !== o && Cc(t, o, 0, e);
          }
        Fr(e);
      }
      function zy(n, t = null, e = null, i) {
        const r = jy(n, t, e, i);
        return r.resolveInjectorInitializers(), r;
      }
      function jy(n, t = null, e = null, i, r = new Set()) {
        const o = [e || Ie, UI(n)];
        return (
          (i = i || ('object' == typeof n ? void 0 : Ue(n))),
          new Sy(o, t || jc(), i || null, r)
        );
      }
      let Dt = (() => {
        class n {
          static create(e, i) {
            if (Array.isArray(e)) return zy({ name: '' }, i, e, '');
            {
              const r = e.name ?? '';
              return zy({ name: r }, e.parent, e.providers, r);
            }
          }
        }
        return (
          (n.THROW_IF_NOT_FOUND = Ga),
          (n.NULL = new Cy()),
          (n.ɵprov = I({ token: n, providedIn: 'any', factory: () => C(yy) })),
          (n.__NG_ELEMENT_ID__ = -1),
          n
        );
      })();
      function m(n, t = J.Default) {
        const e = T();
        return null === e ? C(n, t) : _b(St(), e, Q(n), t);
      }
      function Ur() {
        throw new Error('invalid');
      }
      function Ky(n, t) {
        const e = n.contentQueries;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) {
            const o = e[i + 1];
            if (-1 !== o) {
              const a = n.data[o];
              Qh(e[i]), a.contentQueries(2, t[o], o);
            }
          }
      }
      function $c(n, t, e, i, r, o, a, s, l, c, d) {
        const u = t.blueprint.slice();
        return (
          (u[0] = r),
          (u[2] = 76 | i),
          (null !== d || (n && 1024 & n[2])) && (u[2] |= 1024),
          qv(u),
          (u[3] = u[15] = n),
          (u[8] = e),
          (u[10] = a || (n && n[10])),
          (u[11] = s || (n && n[11])),
          (u[12] = l || (n && n[12]) || null),
          (u[9] = c || (n && n[9]) || null),
          (u[6] = o),
          (u[20] = (function BT() {
            return VT++;
          })()),
          (u[21] = d),
          (u[16] = 2 == t.type ? n[16] : u),
          u
        );
      }
      function zo(n, t, e, i, r) {
        let o = n.data[t];
        if (null === o)
          (o = (function Zm(n, t, e, i, r) {
            const o = Zv(),
              a = qh(),
              l = (n.data[t] = (function XR(n, t, e, i, r, o) {
                return {
                  type: e,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  componentOffset: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: o,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, a ? o : o && o.parent, e, t, i, r));
            return (
              null === n.firstChild && (n.firstChild = l),
              null !== o &&
                (a
                  ? null == o.child && null !== l.parent && (o.child = l)
                  : null === o.next && (o.next = l)),
              l
            );
          })(n, t, e, i, r)),
            (function GA() {
              return se.lFrame.inI18n;
            })() && (o.flags |= 32);
        else if (64 & o.type) {
          (o.type = e), (o.value = i), (o.attrs = r);
          const a = (function Ja() {
            const n = se.lFrame,
              t = n.currentTNode;
            return n.isParent ? t : t.parent;
          })();
          o.injectorIndex = null === a ? -1 : a.injectorIndex;
        }
        return ni(o, !0), o;
      }
      function fs(n, t, e, i) {
        if (0 === e) return -1;
        const r = t.length;
        for (let o = 0; o < e; o++)
          t.push(i), n.blueprint.push(i), n.data.push(null);
        return r;
      }
      function Qm(n, t, e) {
        Jh(t);
        try {
          const i = n.viewQuery;
          null !== i && df(1, i, e);
          const r = n.template;
          null !== r && Xy(n, t, r, 1, e),
            n.firstCreatePass && (n.firstCreatePass = !1),
            n.staticContentQueries && Ky(n, t),
            n.staticViewQueries && df(2, n.viewQuery, e);
          const o = n.components;
          null !== o &&
            (function YR(n, t) {
              for (let e = 0; e < t.length; e++) pO(n, t[e]);
            })(t, o);
        } catch (i) {
          throw (
            (n.firstCreatePass &&
              ((n.incompleteFirstPass = !0), (n.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[2] &= -5), em();
        }
      }
      function Gc(n, t, e, i) {
        const r = t[2];
        if (128 != (128 & r)) {
          Jh(t);
          try {
            qv(t),
              (function Jv(n) {
                return (se.lFrame.bindingIndex = n);
              })(n.bindingStartIndex),
              null !== e && Xy(n, t, e, 2, i);
            const a = 3 == (3 & r);
            if (a) {
              const c = n.preOrderCheckHooks;
              null !== c && wc(t, c, null);
            } else {
              const c = n.preOrderHooks;
              null !== c && Cc(t, c, 0, null), tm(t, 0);
            }
            if (
              ((function mO(n) {
                for (let t = wm(n); null !== t; t = Cm(t)) {
                  if (!t[2]) continue;
                  const e = t[9];
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i];
                    512 & r[2] || Yh(r[3], 1), (r[2] |= 512);
                  }
                }
              })(t),
              (function hO(n) {
                for (let t = wm(n); null !== t; t = Cm(t))
                  for (let e = 10; e < t.length; e++) {
                    const i = t[e],
                      r = i[1];
                    bc(i) && Gc(r, i, r.template, i[8]);
                  }
              })(t),
              null !== n.contentQueries && Ky(n, t),
              a)
            ) {
              const c = n.contentCheckHooks;
              null !== c && wc(t, c);
            } else {
              const c = n.contentHooks;
              null !== c && Cc(t, c, 1), tm(t, 1);
            }
            !(function GR(n, t) {
              const e = n.hostBindingOpCodes;
              if (null !== e)
                try {
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i];
                    if (r < 0) Fr(~r);
                    else {
                      const o = r,
                        a = e[++i],
                        s = e[++i];
                      WA(a, o), s(2, t[o]);
                    }
                  }
                } finally {
                  Fr(-1);
                }
            })(n, t);
            const s = n.components;
            null !== s &&
              (function WR(n, t) {
                for (let e = 0; e < t.length; e++) fO(n, t[e]);
              })(t, s);
            const l = n.viewQuery;
            if ((null !== l && df(2, l, i), a)) {
              const c = n.viewCheckHooks;
              null !== c && wc(t, c);
            } else {
              const c = n.viewHooks;
              null !== c && Cc(t, c, 2), tm(t, 2);
            }
            !0 === n.firstUpdatePass && (n.firstUpdatePass = !1),
              (t[2] &= -41),
              512 & t[2] && ((t[2] &= -513), Yh(t[3], -1));
          } finally {
            em();
          }
        }
      }
      function Xy(n, t, e, i, r) {
        const o = $t(),
          a = 2 & i;
        try {
          Fr(-1), a && t.length > 22 && Ly(n, t, 22, !1), e(i, r);
        } finally {
          Fr(o);
        }
      }
      function Jm(n, t, e) {
        if (Gh(t)) {
          const r = t.directiveEnd;
          for (let o = t.directiveStart; o < r; o++) {
            const a = n.data[o];
            a.contentQueries && a.contentQueries(1, e[o], o);
          }
        }
      }
      function ef(n, t, e) {
        Xv() &&
          ((function nO(n, t, e, i) {
            const r = e.directiveStart,
              o = e.directiveEnd;
            Qa(e) &&
              (function cO(n, t, e) {
                const i = cn(t, n),
                  r = Zy(e),
                  o = n[10],
                  a = Wc(
                    n,
                    $c(
                      n,
                      r,
                      null,
                      e.onPush ? 32 : 16,
                      i,
                      t,
                      o,
                      o.createRenderer(i, e),
                      null,
                      null,
                      null
                    )
                  );
                n[t.index] = a;
              })(t, e, n.data[r + e.componentOffset]),
              n.firstCreatePass || Ec(e, t),
              Pt(i, t);
            const a = e.initialInputs;
            for (let s = r; s < o; s++) {
              const l = n.data[s],
                c = Pr(t, n, s, e);
              Pt(c, t),
                null !== a && dO(0, s - r, c, l, 0, a),
                Un(l) && (dn(e.index, t)[8] = Pr(t, n, s, e));
            }
          })(n, t, e, cn(e, t)),
          64 == (64 & e.flags) && iw(n, t, e));
      }
      function tf(n, t, e = cn) {
        const i = t.localNames;
        if (null !== i) {
          let r = t.index + 1;
          for (let o = 0; o < i.length; o += 2) {
            const a = i[o + 1],
              s = -1 === a ? e(t, n) : n[a];
            n[r++] = s;
          }
        }
      }
      function Zy(n) {
        const t = n.tView;
        return null === t || t.incompleteFirstPass
          ? (n.tView = nf(
              1,
              null,
              n.template,
              n.decls,
              n.vars,
              n.directiveDefs,
              n.pipeDefs,
              n.viewQuery,
              n.schemas,
              n.consts
            ))
          : t;
      }
      function nf(n, t, e, i, r, o, a, s, l, c) {
        const d = 22 + i,
          u = d + r,
          h = (function qR(n, t) {
            const e = [];
            for (let i = 0; i < t; i++) e.push(i < n ? null : le);
            return e;
          })(d, u),
          f = 'function' == typeof c ? c() : c;
        return (h[1] = {
          type: n,
          blueprint: h,
          template: e,
          queries: null,
          viewQuery: s,
          declTNode: t,
          data: h.slice().fill(null, d),
          bindingStartIndex: d,
          expandoStartIndex: u,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof o ? o() : o,
          pipeRegistry: 'function' == typeof a ? a() : a,
          firstChild: null,
          schemas: l,
          consts: f,
          incompleteFirstPass: !1,
        });
      }
      function Qy(n, t, e, i) {
        const r = ow(t);
        null === e
          ? r.push(i)
          : (r.push(e), n.firstCreatePass && aw(n).push(i, r.length - 1));
      }
      function Jy(n, t, e, i) {
        for (let r in n)
          if (n.hasOwnProperty(r)) {
            e = null === e ? {} : e;
            const o = n[r];
            null === i
              ? ew(e, t, r, o)
              : i.hasOwnProperty(r) && ew(e, t, i[r], o);
          }
        return e;
      }
      function ew(n, t, e, i) {
        n.hasOwnProperty(e) ? n[e].push(t, i) : (n[e] = [t, i]);
      }
      function fn(n, t, e, i, r, o, a, s) {
        const l = cn(t, e);
        let d,
          c = t.inputs;
        !s && null != c && (d = c[i])
          ? (uf(n, e, d, i, r), Qa(t) && tw(e, t.index))
          : 3 & t.type &&
            ((i = (function QR(n) {
              return 'class' === n
                ? 'className'
                : 'for' === n
                ? 'htmlFor'
                : 'formaction' === n
                ? 'formAction'
                : 'innerHtml' === n
                ? 'innerHTML'
                : 'readonly' === n
                ? 'readOnly'
                : 'tabindex' === n
                ? 'tabIndex'
                : n;
            })(i)),
            (r = null != a ? a(r, t.value || '', i) : r),
            o.setProperty(l, i, r));
      }
      function tw(n, t) {
        const e = dn(t, n);
        16 & e[2] || (e[2] |= 32);
      }
      function rf(n, t, e, i) {
        let r = !1;
        if (Xv()) {
          const o = null === i ? null : { '': -1 },
            a = (function rO(n, t) {
              const e = n.directiveRegistry;
              let i = null,
                r = null;
              if (e)
                for (let o = 0; o < e.length; o++) {
                  const a = e[o];
                  if (Py(t, a.selectors, !1))
                    if ((i || (i = []), Un(a)))
                      if (null !== a.findHostDirectiveDefs) {
                        const s = [];
                        (r = r || new Map()),
                          a.findHostDirectiveDefs(a, s, r),
                          i.unshift(...s, a),
                          af(n, t, s.length);
                      } else i.unshift(a), af(n, t, 0);
                    else
                      (r = r || new Map()),
                        a.findHostDirectiveDefs?.(a, i, r),
                        i.push(a);
                }
              return null === i ? null : [i, r];
            })(n, e);
          let s, l;
          null === a ? (s = l = null) : ([s, l] = a),
            null !== s && ((r = !0), nw(n, t, e, s, o, l)),
            o &&
              (function oO(n, t, e) {
                if (t) {
                  const i = (n.localNames = []);
                  for (let r = 0; r < t.length; r += 2) {
                    const o = e[t[r + 1]];
                    if (null == o) throw new k(-301, !1);
                    i.push(t[r], o);
                  }
                }
              })(e, i, o);
        }
        return (e.mergedAttrs = ns(e.mergedAttrs, e.attrs)), r;
      }
      function nw(n, t, e, i, r, o) {
        for (let c = 0; c < i.length; c++) sm(Ec(e, t), n, i[c].type);
        !(function sO(n, t, e) {
          (n.flags |= 1),
            (n.directiveStart = t),
            (n.directiveEnd = t + e),
            (n.providerIndexes = t);
        })(e, n.data.length, i.length);
        for (let c = 0; c < i.length; c++) {
          const d = i[c];
          d.providersResolver && d.providersResolver(d);
        }
        let a = !1,
          s = !1,
          l = fs(n, t, i.length, null);
        for (let c = 0; c < i.length; c++) {
          const d = i[c];
          (e.mergedAttrs = ns(e.mergedAttrs, d.hostAttrs)),
            lO(n, e, t, l, d),
            aO(l, d, r),
            null !== d.contentQueries && (e.flags |= 4),
            (null !== d.hostBindings ||
              null !== d.hostAttrs ||
              0 !== d.hostVars) &&
              (e.flags |= 64);
          const u = d.type.prototype;
          !a &&
            (u.ngOnChanges || u.ngOnInit || u.ngDoCheck) &&
            ((n.preOrderHooks || (n.preOrderHooks = [])).push(e.index),
            (a = !0)),
            !s &&
              (u.ngOnChanges || u.ngDoCheck) &&
              ((n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(
                e.index
              ),
              (s = !0)),
            l++;
        }
        !(function ZR(n, t, e) {
          const r = t.directiveEnd,
            o = n.data,
            a = t.attrs,
            s = [];
          let l = null,
            c = null;
          for (let d = t.directiveStart; d < r; d++) {
            const u = o[d],
              h = e ? e.get(u) : null,
              g = h ? h.outputs : null;
            (l = Jy(u.inputs, d, l, h ? h.inputs : null)),
              (c = Jy(u.outputs, d, c, g));
            const v = null === l || null === a || Fy(t) ? null : uO(l, d, a);
            s.push(v);
          }
          null !== l &&
            (l.hasOwnProperty('class') && (t.flags |= 8),
            l.hasOwnProperty('style') && (t.flags |= 16)),
            (t.initialInputs = s),
            (t.inputs = l),
            (t.outputs = c);
        })(n, e, o);
      }
      function iw(n, t, e) {
        const i = e.directiveStart,
          r = e.directiveEnd,
          o = e.index,
          a = (function YA() {
            return se.lFrame.currentDirectiveIndex;
          })();
        try {
          Fr(o);
          for (let s = i; s < r; s++) {
            const l = n.data[s],
              c = t[s];
            Xh(s),
              (null !== l.hostBindings ||
                0 !== l.hostVars ||
                null !== l.hostAttrs) &&
                iO(l, c);
          }
        } finally {
          Fr(-1), Xh(a);
        }
      }
      function iO(n, t) {
        null !== n.hostBindings && n.hostBindings(1, t);
      }
      function af(n, t, e) {
        (t.componentOffset = e),
          (n.components || (n.components = [])).push(t.index);
      }
      function aO(n, t, e) {
        if (e) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) e[t.exportAs[i]] = n;
          Un(t) && (e[''] = n);
        }
      }
      function lO(n, t, e, i, r) {
        n.data[i] = r;
        const o = r.factory || (r.factory = Or(r.type)),
          a = new ts(o, Un(r), m);
        (n.blueprint[i] = a),
          (e[i] = a),
          (function eO(n, t, e, i, r) {
            const o = r.hostBindings;
            if (o) {
              let a = n.hostBindingOpCodes;
              null === a && (a = n.hostBindingOpCodes = []);
              const s = ~t.index;
              (function tO(n) {
                let t = n.length;
                for (; t > 0; ) {
                  const e = n[--t];
                  if ('number' == typeof e && e < 0) return e;
                }
                return 0;
              })(a) != s && a.push(s),
                a.push(e, i, o);
            }
          })(n, t, i, fs(n, e, r.hostVars, le), r);
      }
      function li(n, t, e, i, r, o) {
        const a = cn(n, t);
        !(function sf(n, t, e, i, r, o, a) {
          if (null == o) n.removeAttribute(t, r, e);
          else {
            const s = null == a ? ae(o) : a(o, i || '', r);
            n.setAttribute(t, r, s, e);
          }
        })(t[11], a, o, n.value, e, i, r);
      }
      function dO(n, t, e, i, r, o) {
        const a = o[t];
        if (null !== a) {
          const s = i.setInput;
          for (let l = 0; l < a.length; ) {
            const c = a[l++],
              d = a[l++],
              u = a[l++];
            null !== s ? i.setInput(e, u, c, d) : (e[d] = u);
          }
        }
      }
      function uO(n, t, e) {
        let i = null,
          r = 0;
        for (; r < e.length; ) {
          const o = e[r];
          if (0 !== o)
            if (5 !== o) {
              if ('number' == typeof o) break;
              if (n.hasOwnProperty(o)) {
                null === i && (i = []);
                const a = n[o];
                for (let s = 0; s < a.length; s += 2)
                  if (a[s] === t) {
                    i.push(o, a[s + 1], e[r + 1]);
                    break;
                  }
              }
              r += 2;
            } else r += 2;
          else r += 4;
        }
        return i;
      }
      function rw(n, t, e, i) {
        return [n, !0, !1, t, null, 0, i, e, null, null];
      }
      function fO(n, t) {
        const e = dn(t, n);
        if (bc(e)) {
          const i = e[1];
          48 & e[2] ? Gc(i, e, i.template, e[8]) : e[5] > 0 && lf(e);
        }
      }
      function lf(n) {
        for (let i = wm(n); null !== i; i = Cm(i))
          for (let r = 10; r < i.length; r++) {
            const o = i[r];
            if (bc(o))
              if (512 & o[2]) {
                const a = o[1];
                Gc(a, o, a.template, o[8]);
              } else o[5] > 0 && lf(o);
          }
        const e = n[1].components;
        if (null !== e)
          for (let i = 0; i < e.length; i++) {
            const r = dn(e[i], n);
            bc(r) && r[5] > 0 && lf(r);
          }
      }
      function pO(n, t) {
        const e = dn(t, n),
          i = e[1];
        (function gO(n, t) {
          for (let e = t.length; e < n.blueprint.length; e++)
            t.push(n.blueprint[e]);
        })(i, e),
          Qm(i, e, e[8]);
      }
      function Wc(n, t) {
        return n[13] ? (n[14][4] = t) : (n[13] = t), (n[14] = t), t;
      }
      function cf(n) {
        for (; n; ) {
          n[2] |= 32;
          const t = cs(n);
          if (SA(n) && !t) return n;
          n = t;
        }
        return null;
      }
      function Yc(n, t, e, i = !0) {
        const r = t[10];
        r.begin && r.begin();
        try {
          Gc(n, t, n.template, e);
        } catch (a) {
          throw (i && lw(t, a), a);
        } finally {
          r.end && r.end();
        }
      }
      function df(n, t, e) {
        Qh(0), t(n, e);
      }
      function ow(n) {
        return n[7] || (n[7] = []);
      }
      function aw(n) {
        return n.cleanup || (n.cleanup = []);
      }
      function sw(n, t, e) {
        return (
          (null === n || Un(n)) &&
            (e = (function PA(n) {
              for (; Array.isArray(n); ) {
                if ('object' == typeof n[1]) return n;
                n = n[0];
              }
              return null;
            })(e[t.index])),
          e[11]
        );
      }
      function lw(n, t) {
        const e = n[9],
          i = e ? e.get(Li, null) : null;
        i && i.handleError(t);
      }
      function uf(n, t, e, i, r) {
        for (let o = 0; o < e.length; ) {
          const a = e[o++],
            s = e[o++],
            l = t[a],
            c = n.data[a];
          null !== c.setInput ? c.setInput(l, r, i, s) : (l[s] = r);
        }
      }
      function qc(n, t, e) {
        let i = e ? n.styles : null,
          r = e ? n.classes : null,
          o = 0;
        if (null !== t)
          for (let a = 0; a < t.length; a++) {
            const s = t[a];
            'number' == typeof s
              ? (o = s)
              : 1 == o
              ? (r = Fh(r, s))
              : 2 == o && (i = Fh(i, s + ': ' + t[++a] + ';'));
          }
        e ? (n.styles = i) : (n.stylesWithoutHost = i),
          e ? (n.classes = r) : (n.classesWithoutHost = r);
      }
      function Kc(n, t, e, i, r = !1) {
        for (; null !== e; ) {
          const o = t[e.index];
          if ((null !== o && i.push(Et(o)), jn(o)))
            for (let s = 10; s < o.length; s++) {
              const l = o[s],
                c = l[1].firstChild;
              null !== c && Kc(l[1], l, c, i);
            }
          const a = e.type;
          if (8 & a) Kc(n, t, e.child, i);
          else if (32 & a) {
            const s = ym(e, t);
            let l;
            for (; (l = s()); ) i.push(l);
          } else if (16 & a) {
            const s = ny(t, e);
            if (Array.isArray(s)) i.push(...s);
            else {
              const l = cs(t[16]);
              Kc(l[1], l, s, i, !0);
            }
          }
          e = r ? e.projectionNext : e.next;
        }
        return i;
      }
      class ps {
        get rootNodes() {
          const t = this._lView,
            e = t[1];
          return Kc(e, t, e.firstChild, []);
        }
        constructor(t, e) {
          (this._lView = t),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[8];
        }
        set context(t) {
          this._lView[8] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[3];
            if (jn(t)) {
              const e = t[8],
                i = e ? e.indexOf(this) : -1;
              i > -1 && (Mm(t, i), kc(e, i));
            }
            this._attachedToViewContainer = !1;
          }
          Yb(this._lView[1], this._lView);
        }
        onDestroy(t) {
          Qy(this._lView[1], this._lView, null, t);
        }
        markForCheck() {
          cf(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -65;
        }
        reattach() {
          this._lView[2] |= 64;
        }
        detectChanges() {
          Yc(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new k(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function eI(n, t) {
              ds(n, t, t[11], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new k(902, !1);
          this._appRef = t;
        }
      }
      class _O extends ps {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          const t = this._view;
          Yc(t[1], t, t[8], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class cw extends zr {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = Ve(t);
          return new gs(e, this.ngModule);
        }
      }
      function dw(n) {
        const t = [];
        for (let e in n)
          n.hasOwnProperty(e) && t.push({ propName: n[e], templateName: e });
        return t;
      }
      class bO {
        constructor(t, e) {
          (this.injector = t), (this.parentInjector = e);
        }
        get(t, e, i) {
          i = uc(i);
          const r = this.injector.get(t, $m, i);
          return r !== $m || e === $m ? r : this.parentInjector.get(t, e, i);
        }
      }
      class gs extends Ay {
        get inputs() {
          return dw(this.componentDef.inputs);
        }
        get outputs() {
          return dw(this.componentDef.outputs);
        }
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = (function MR(n) {
              return n.map(DR).join(',');
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        create(t, e, i, r) {
          let o = (r = r || this.ngModule) instanceof si ? r : r?.injector;
          o &&
            null !== this.componentDef.getStandaloneInjector &&
            (o = this.componentDef.getStandaloneInjector(o) || o);
          const a = o ? new bO(t, o) : t,
            s = a.get(ms, null);
          if (null === s) throw new k(407, !1);
          const l = a.get(rR, null),
            c = s.createRenderer(null, this.componentDef),
            d = this.componentDef.selectors[0][0] || 'div',
            u = i
              ? (function KR(n, t, e) {
                  return n.selectRootElement(t, e === Hn.ShadowDom);
                })(c, i, this.componentDef.encapsulation)
              : Dm(
                  c,
                  d,
                  (function vO(n) {
                    const t = n.toLowerCase();
                    return 'svg' === t ? 'svg' : 'math' === t ? 'math' : null;
                  })(d)
                ),
            h = this.componentDef.onPush ? 288 : 272,
            f = nf(0, null, null, 1, 0, null, null, null, null, null),
            g = $c(null, f, null, h, null, null, s, c, l, a, null);
          let v, y;
          Jh(g);
          try {
            const x = this.componentDef;
            let R,
              M = null;
            x.findHostDirectiveDefs
              ? ((R = []),
                (M = new Map()),
                x.findHostDirectiveDefs(x, R, M),
                R.push(x))
              : (R = [x]);
            const N = (function wO(n, t) {
                const e = n[1];
                return (n[22] = t), zo(e, 22, 2, '#host', null);
              })(g, u),
              Ee = (function CO(n, t, e, i, r, o, a, s) {
                const l = r[1];
                !(function xO(n, t, e, i) {
                  for (const r of n)
                    t.mergedAttrs = ns(t.mergedAttrs, r.hostAttrs);
                  null !== t.mergedAttrs &&
                    (qc(t, t.mergedAttrs, !0), null !== e && oy(i, e, t));
                })(i, n, t, a);
                const c = o.createRenderer(t, e),
                  d = $c(
                    r,
                    Zy(e),
                    null,
                    e.onPush ? 32 : 16,
                    r[n.index],
                    n,
                    o,
                    c,
                    s || null,
                    null,
                    null
                  );
                return (
                  l.firstCreatePass && af(l, n, i.length - 1),
                  Wc(r, d),
                  (r[n.index] = d)
                );
              })(N, u, x, R, g, s, c);
            (y = Yv(f, 22)),
              u &&
                (function MO(n, t, e, i) {
                  if (i) im(n, e, ['ng-version', oR.full]);
                  else {
                    const { attrs: r, classes: o } = (function ER(n) {
                      const t = [],
                        e = [];
                      let i = 1,
                        r = 2;
                      for (; i < n.length; ) {
                        let o = n[i];
                        if ('string' == typeof o)
                          2 === r
                            ? '' !== o && t.push(o, n[++i])
                            : 8 === r && e.push(o);
                        else {
                          if (!$n(r)) break;
                          r = o;
                        }
                        i++;
                      }
                      return { attrs: t, classes: e };
                    })(t.selectors[0]);
                    r && im(n, e, r),
                      o && o.length > 0 && ry(n, e, o.join(' '));
                  }
                })(c, x, u, i),
              void 0 !== e &&
                (function EO(n, t, e) {
                  const i = (n.projection = []);
                  for (let r = 0; r < t.length; r++) {
                    const o = e[r];
                    i.push(null != o ? Array.from(o) : null);
                  }
                })(y, this.ngContentSelectors, e),
              (v = (function DO(n, t, e, i, r, o) {
                const a = St(),
                  s = r[1],
                  l = cn(a, r);
                nw(s, r, a, e, null, i);
                for (let d = 0; d < e.length; d++)
                  Pt(Pr(r, s, a.directiveStart + d, a), r);
                iw(s, r, a), l && Pt(l, r);
                const c = Pr(r, s, a.directiveStart + a.componentOffset, a);
                if (((n[8] = r[8] = c), null !== o)) for (const d of o) d(c, t);
                return Jm(s, a, n), c;
              })(Ee, x, R, M, g, [SO])),
              Qm(f, g, null);
          } finally {
            em();
          }
          return new yO(this.componentType, v, Vo(y, g), g, y);
        }
      }
      class yO extends QI {
        constructor(t, e, i, r, o) {
          super(),
            (this.location = i),
            (this._rootLView = r),
            (this._tNode = o),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new _O(r)),
            (this.componentType = t);
        }
        setInput(t, e) {
          const i = this._tNode.inputs;
          let r;
          if (null !== i && (r = i[t])) {
            const o = this._rootLView;
            uf(o[1], o, r, t, e), tw(o, this._tNode.index);
          }
        }
        get injector() {
          return new Ao(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function SO() {
        const n = St();
        yc(T()[1], n);
      }
      function F(n) {
        let t = (function uw(n) {
            return Object.getPrototypeOf(n.prototype).constructor;
          })(n.type),
          e = !0;
        const i = [n];
        for (; t; ) {
          let r;
          if (Un(n)) r = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new k(903, !1);
            r = t.ɵdir;
          }
          if (r) {
            if (e) {
              i.push(r);
              const a = n;
              (a.inputs = hf(n.inputs)),
                (a.declaredInputs = hf(n.declaredInputs)),
                (a.outputs = hf(n.outputs));
              const s = r.hostBindings;
              s && IO(n, s);
              const l = r.viewQuery,
                c = r.contentQueries;
              if (
                (l && AO(n, l),
                c && TO(n, c),
                Oh(n.inputs, r.inputs),
                Oh(n.declaredInputs, r.declaredInputs),
                Oh(n.outputs, r.outputs),
                Un(r) && r.data.animation)
              ) {
                const d = n.data;
                d.animation = (d.animation || []).concat(r.data.animation);
              }
            }
            const o = r.features;
            if (o)
              for (let a = 0; a < o.length; a++) {
                const s = o[a];
                s && s.ngInherit && s(n), s === F && (e = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function kO(n) {
          let t = 0,
            e = null;
          for (let i = n.length - 1; i >= 0; i--) {
            const r = n[i];
            (r.hostVars = t += r.hostVars),
              (r.hostAttrs = ns(r.hostAttrs, (e = ns(e, r.hostAttrs))));
          }
        })(i);
      }
      function hf(n) {
        return n === Ti ? {} : n === Ie ? [] : n;
      }
      function AO(n, t) {
        const e = n.viewQuery;
        n.viewQuery = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      function TO(n, t) {
        const e = n.contentQueries;
        n.contentQueries = e
          ? (i, r, o) => {
              t(i, r, o), e(i, r, o);
            }
          : t;
      }
      function IO(n, t) {
        const e = n.hostBindings;
        n.hostBindings = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      let Xc = null;
      function $r() {
        if (!Xc) {
          const n = $e.Symbol;
          if (n && n.iterator) Xc = n.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const i = t[e];
              'entries' !== i &&
                'size' !== i &&
                Map.prototype[i] === Map.prototype.entries &&
                (Xc = i);
            }
          }
        }
        return Xc;
      }
      function Zc(n) {
        return (
          !!mf(n) && (Array.isArray(n) || (!(n instanceof Map) && $r() in n))
        );
      }
      function mf(n) {
        return null !== n && ('function' == typeof n || 'object' == typeof n);
      }
      function Nt(n, t, e) {
        return !Object.is(n[t], e) && ((n[t] = e), !0);
      }
      function ve(n, t, e, i) {
        const r = T();
        return Nt(r, So(), t) && (xe(), li(et(), r, n, t, e, i)), ve;
      }
      function Uo(n, t, e, i) {
        return Nt(n, So(), e) ? t + ae(e) + i : le;
      }
      function E(n, t, e, i, r, o, a, s) {
        const l = T(),
          c = xe(),
          d = n + 22,
          u = c.firstCreatePass
            ? (function zO(n, t, e, i, r, o, a, s, l) {
                const c = t.consts,
                  d = zo(t, n, 4, a || null, lr(c, s));
                rf(t, e, d, lr(c, l)), yc(t, d);
                const u = (d.tViews = nf(
                  2,
                  d,
                  i,
                  r,
                  o,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  c
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, d),
                    (u.queries = t.queries.embeddedTView(d))),
                  d
                );
              })(d, c, l, t, e, i, r, o, a)
            : c.data[d];
        ni(u, !1);
        const h = l[11].createComment('');
        Fc(c, l, h, u),
          Pt(h, l),
          Wc(l, (l[d] = rw(h, l, h, u))),
          _c(u) && ef(c, l, u),
          null != a && tf(l, u, s);
      }
      function En(n) {
        return (function Eo(n, t) {
          return n[t];
        })(
          (function $A() {
            return se.lFrame.contextLView;
          })(),
          22 + n
        );
      }
      function D(n, t, e) {
        const i = T();
        return Nt(i, So(), t) && fn(xe(), et(), i, n, t, i[11], e, !1), D;
      }
      function ff(n, t, e, i, r) {
        const a = r ? 'class' : 'style';
        uf(n, e, t.inputs[a], a, i);
      }
      function _(n, t, e, i) {
        const r = T(),
          o = xe(),
          a = 22 + n,
          s = r[11],
          l = (r[a] = Dm(
            s,
            t,
            (function JA() {
              return se.lFrame.currentNamespace;
            })()
          )),
          c = o.firstCreatePass
            ? (function UO(n, t, e, i, r, o, a) {
                const s = t.consts,
                  c = zo(t, n, 2, r, lr(s, o));
                return (
                  rf(t, e, c, lr(s, a)),
                  null !== c.attrs && qc(c, c.attrs, !1),
                  null !== c.mergedAttrs && qc(c, c.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, c),
                  c
                );
              })(a, o, r, 0, t, e, i)
            : o.data[a];
        return (
          ni(c, !0),
          oy(s, l, c),
          32 != (32 & c.flags) && Fc(o, r, l, c),
          0 ===
            (function BA() {
              return se.lFrame.elementDepthCount;
            })() && Pt(l, r),
          (function HA() {
            se.lFrame.elementDepthCount++;
          })(),
          _c(c) && (ef(o, r, c), Jm(o, c, r)),
          null !== i && tf(r, c),
          _
        );
      }
      function p() {
        let n = St();
        qh() ? Kh() : ((n = n.parent), ni(n, !1));
        const t = n;
        !(function zA() {
          se.lFrame.elementDepthCount--;
        })();
        const e = xe();
        return (
          e.firstCreatePass && (yc(e, n), Gh(n) && e.queries.elementEnd(n)),
          null != t.classesWithoutHost &&
            (function iT(n) {
              return 0 != (8 & n.flags);
            })(t) &&
            ff(e, t, T(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function rT(n) {
              return 0 != (16 & n.flags);
            })(t) &&
            ff(e, t, T(), t.stylesWithoutHost, !1),
          p
        );
      }
      function ne(n, t, e, i) {
        return _(n, t, e, i), p(), ne;
      }
      function Be(n, t, e) {
        const i = T(),
          r = xe(),
          o = n + 22,
          a = r.firstCreatePass
            ? (function $O(n, t, e, i, r) {
                const o = t.consts,
                  a = lr(o, i),
                  s = zo(t, n, 8, 'ng-container', a);
                return (
                  null !== a && qc(s, a, !0),
                  rf(t, e, s, lr(o, r)),
                  null !== t.queries && t.queries.elementStart(t, s),
                  s
                );
              })(o, r, i, t, e)
            : r.data[o];
        ni(a, !0);
        const s = (i[o] = i[11].createComment(''));
        return (
          Fc(r, i, s, a),
          Pt(s, i),
          _c(a) && (ef(r, i, a), Jm(r, a, i)),
          null != e && tf(i, a),
          Be
        );
      }
      function He() {
        let n = St();
        const t = xe();
        return (
          qh() ? Kh() : ((n = n.parent), ni(n, !1)),
          t.firstCreatePass && (yc(t, n), Gh(n) && t.queries.elementEnd(n)),
          He
        );
      }
      function di(n, t, e) {
        return Be(n, t, e), He(), di;
      }
      function ui() {
        return T();
      }
      function vs(n) {
        return !!n && 'function' == typeof n.then;
      }
      const pf = function Dw(n) {
        return !!n && 'function' == typeof n.subscribe;
      };
      function O(n, t, e, i) {
        const r = T(),
          o = xe(),
          a = St();
        return Mw(o, r, r[11], a, n, t, i), O;
      }
      function Jc(n, t) {
        const e = St(),
          i = T(),
          r = xe();
        return Mw(r, i, sw(Zh(r.data), e, i), e, n, t), Jc;
      }
      function Mw(n, t, e, i, r, o, a) {
        const s = _c(i),
          c = n.firstCreatePass && aw(n),
          d = t[8],
          u = ow(t);
        let h = !0;
        if (3 & i.type || a) {
          const v = cn(i, t),
            y = a ? a(v) : v,
            x = u.length,
            R = a ? (N) => a(Et(N[i.index])) : i.index;
          let M = null;
          if (
            (!a &&
              s &&
              (M = (function GO(n, t, e, i) {
                const r = n.cleanup;
                if (null != r)
                  for (let o = 0; o < r.length - 1; o += 2) {
                    const a = r[o];
                    if (a === e && r[o + 1] === i) {
                      const s = t[7],
                        l = r[o + 2];
                      return s.length > l ? s[l] : null;
                    }
                    'string' == typeof a && (o += 2);
                  }
                return null;
              })(n, t, r, i.index)),
            null !== M)
          )
            ((M.__ngLastListenerFn__ || M).__ngNextListenerFn__ = o),
              (M.__ngLastListenerFn__ = o),
              (h = !1);
          else {
            o = Sw(i, t, d, o, !1);
            const N = e.listen(y, r, o);
            u.push(o, N), c && c.push(r, R, x, x + 1);
          }
        } else o = Sw(i, t, d, o, !1);
        const f = i.outputs;
        let g;
        if (h && null !== f && (g = f[r])) {
          const v = g.length;
          if (v)
            for (let y = 0; y < v; y += 2) {
              const Ee = t[g[y]][g[y + 1]].subscribe(o),
                Te = u.length;
              u.push(o, Ee), c && c.push(r, i.index, Te, -(Te + 1));
            }
        }
      }
      function Ew(n, t, e, i) {
        try {
          return !1 !== e(i);
        } catch (r) {
          return lw(n, r), !1;
        }
      }
      function Sw(n, t, e, i, r) {
        return function o(a) {
          if (a === Function) return i;
          cf(n.componentOffset > -1 ? dn(n.index, t) : t);
          let l = Ew(t, 0, i, a),
            c = o.__ngNextListenerFn__;
          for (; c; ) (l = Ew(t, 0, c, a) && l), (c = c.__ngNextListenerFn__);
          return r && !1 === l && (a.preventDefault(), (a.returnValue = !1)), l;
        };
      }
      function G(n = 1) {
        return (function KA(n) {
          return (se.lFrame.contextLView = (function XA(n, t) {
            for (; n > 0; ) (t = t[15]), n--;
            return t;
          })(n, se.lFrame.contextLView))[8];
        })(n);
      }
      function WO(n, t) {
        let e = null;
        const i = (function yR(n) {
          const t = n.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (!(1 & e)) return t[e + 1];
          }
          return null;
        })(n);
        for (let r = 0; r < t.length; r++) {
          const o = t[r];
          if ('*' !== o) {
            if (null === i ? Py(n, o, !0) : xR(i, o)) return r;
          } else e = r;
        }
        return e;
      }
      function Xe(n) {
        const t = T()[16][6];
        if (!t.projection) {
          const i = (t.projection = os(n ? n.length : 1, null)),
            r = i.slice();
          let o = t.child;
          for (; null !== o; ) {
            const a = n ? WO(o, n) : 0;
            null !== a &&
              (r[a] ? (r[a].projectionNext = o) : (i[a] = o), (r[a] = o)),
              (o = o.next);
          }
        }
      }
      function Y(n, t = 0, e) {
        const i = T(),
          r = xe(),
          o = zo(r, 22 + n, 16, null, e || null);
        null === o.projection && (o.projection = t),
          Kh(),
          32 != (32 & o.flags) &&
            (function lI(n, t, e) {
              iy(t[11], 0, t, e, qb(n, e, t), Qb(e.parent || t[6], e, t));
            })(r, i, o);
      }
      function Wr(n, t, e) {
        return Gn(n, '', t, '', e), Wr;
      }
      function Gn(n, t, e, i, r) {
        const o = T(),
          a = Uo(o, t, e, i);
        return a !== le && fn(xe(), et(), o, n, a, o[11], r, !1), Gn;
      }
      function ed(n, t) {
        return (n << 17) | (t << 2);
      }
      function dr(n) {
        return (n >> 17) & 32767;
      }
      function gf(n) {
        return 2 | n;
      }
      function Yr(n) {
        return (131068 & n) >> 2;
      }
      function _f(n, t) {
        return (-131069 & n) | (t << 2);
      }
      function vf(n) {
        return 1 | n;
      }
      function Nw(n, t, e, i, r) {
        const o = n[e + 1],
          a = null === t;
        let s = i ? dr(o) : Yr(o),
          l = !1;
        for (; 0 !== s && (!1 === l || a); ) {
          const d = n[s + 1];
          QO(n[s], t) && ((l = !0), (n[s + 1] = i ? vf(d) : gf(d))),
            (s = i ? dr(d) : Yr(d));
        }
        l && (n[e + 1] = i ? gf(o) : vf(o));
      }
      function QO(n, t) {
        return (
          null === n ||
          null == t ||
          (Array.isArray(n) ? n[1] : n) === t ||
          (!(!Array.isArray(n) || 'string' != typeof t) && Fo(n, t) >= 0)
        );
      }
      const Ct = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function Lw(n) {
        return n.substring(Ct.key, Ct.keyEnd);
      }
      function Vw(n, t) {
        const e = Ct.textEnd;
        return e === t
          ? -1
          : ((t = Ct.keyEnd =
              (function nF(n, t, e) {
                for (; t < e && n.charCodeAt(t) > 32; ) t++;
                return t;
              })(n, (Ct.key = t), e)),
            Zo(n, t, e));
      }
      function Zo(n, t, e) {
        for (; t < e && n.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function hi(n, t, e) {
        return Wn(n, t, e, !1), hi;
      }
      function be(n, t) {
        return Wn(n, t, null, !0), be;
      }
      function bf(n) {
        Yn(un, fi, n, !0);
      }
      function fi(n, t) {
        for (
          let e = (function eF(n) {
            return (
              (function Hw(n) {
                (Ct.key = 0),
                  (Ct.keyEnd = 0),
                  (Ct.value = 0),
                  (Ct.valueEnd = 0),
                  (Ct.textEnd = n.length);
              })(n),
              Vw(n, Zo(n, 0, Ct.textEnd))
            );
          })(t);
          e >= 0;
          e = Vw(t, e)
        )
          un(n, Lw(t), !0);
      }
      function Wn(n, t, e, i) {
        const r = T(),
          o = xe(),
          a = Fi(2);
        o.firstUpdatePass && $w(o, n, a, i),
          t !== le &&
            Nt(r, a, t) &&
            Ww(
              o,
              o.data[$t()],
              r,
              r[11],
              n,
              (r[a + 1] = (function hF(n, t) {
                return (
                  null == n ||
                    ('string' == typeof t
                      ? (n += t)
                      : 'object' == typeof n && (n = Ue(mn(n)))),
                  n
                );
              })(t, e)),
              i,
              a
            );
      }
      function Yn(n, t, e, i) {
        const r = xe(),
          o = Fi(2);
        r.firstUpdatePass && $w(r, null, o, i);
        const a = T();
        if (e !== le && Nt(a, o, e)) {
          const s = r.data[$t()];
          if (qw(s, i) && !Uw(r, o)) {
            let l = i ? s.classesWithoutHost : s.stylesWithoutHost;
            null !== l && (e = Fh(l, e || '')), ff(r, s, a, e, i);
          } else
            !(function uF(n, t, e, i, r, o, a, s) {
              r === le && (r = Ie);
              let l = 0,
                c = 0,
                d = 0 < r.length ? r[0] : null,
                u = 0 < o.length ? o[0] : null;
              for (; null !== d || null !== u; ) {
                const h = l < r.length ? r[l + 1] : void 0,
                  f = c < o.length ? o[c + 1] : void 0;
                let v,
                  g = null;
                d === u
                  ? ((l += 2), (c += 2), h !== f && ((g = u), (v = f)))
                  : null === u || (null !== d && d < u)
                  ? ((l += 2), (g = d))
                  : ((c += 2), (g = u), (v = f)),
                  null !== g && Ww(n, t, e, i, g, v, a, s),
                  (d = l < r.length ? r[l] : null),
                  (u = c < o.length ? o[c] : null);
              }
            })(
              r,
              s,
              a,
              a[11],
              a[o + 1],
              (a[o + 1] = (function dF(n, t, e) {
                if (null == e || '' === e) return Ie;
                const i = [],
                  r = mn(e);
                if (Array.isArray(r))
                  for (let o = 0; o < r.length; o++) n(i, r[o], !0);
                else if ('object' == typeof r)
                  for (const o in r) r.hasOwnProperty(o) && n(i, o, r[o]);
                else 'string' == typeof r && t(i, r);
                return i;
              })(n, t, e)),
              i,
              o
            );
        }
      }
      function Uw(n, t) {
        return t >= n.expandoStartIndex;
      }
      function $w(n, t, e, i) {
        const r = n.data;
        if (null === r[e + 1]) {
          const o = r[$t()],
            a = Uw(n, e);
          qw(o, i) && null === t && !a && (t = !1),
            (t = (function aF(n, t, e, i) {
              const r = Zh(n);
              let o = i ? t.residualClasses : t.residualStyles;
              if (null === r)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((e = bs((e = yf(null, n, t, e, i)), t.attrs, i)),
                  (o = null));
              else {
                const a = t.directiveStylingLast;
                if (-1 === a || n[a] !== r)
                  if (((e = yf(r, n, t, e, i)), null === o)) {
                    let l = (function sF(n, t, e) {
                      const i = e ? t.classBindings : t.styleBindings;
                      if (0 !== Yr(i)) return n[dr(i)];
                    })(n, t, i);
                    void 0 !== l &&
                      Array.isArray(l) &&
                      ((l = yf(null, n, t, l[1], i)),
                      (l = bs(l, t.attrs, i)),
                      (function lF(n, t, e, i) {
                        n[dr(e ? t.classBindings : t.styleBindings)] = i;
                      })(n, t, i, l));
                  } else
                    o = (function cF(n, t, e) {
                      let i;
                      const r = t.directiveEnd;
                      for (let o = 1 + t.directiveStylingLast; o < r; o++)
                        i = bs(i, n[o].hostAttrs, e);
                      return bs(i, t.attrs, e);
                    })(n, t, i);
              }
              return (
                void 0 !== o &&
                  (i ? (t.residualClasses = o) : (t.residualStyles = o)),
                e
              );
            })(r, o, t, i)),
            (function XO(n, t, e, i, r, o) {
              let a = o ? t.classBindings : t.styleBindings,
                s = dr(a),
                l = Yr(a);
              n[i] = e;
              let d,
                c = !1;
              if (
                (Array.isArray(e)
                  ? ((d = e[1]), (null === d || Fo(e, d) > 0) && (c = !0))
                  : (d = e),
                r)
              )
                if (0 !== l) {
                  const h = dr(n[s + 1]);
                  (n[i + 1] = ed(h, s)),
                    0 !== h && (n[h + 1] = _f(n[h + 1], i)),
                    (n[s + 1] = (function qO(n, t) {
                      return (131071 & n) | (t << 17);
                    })(n[s + 1], i));
                } else
                  (n[i + 1] = ed(s, 0)),
                    0 !== s && (n[s + 1] = _f(n[s + 1], i)),
                    (s = i);
              else
                (n[i + 1] = ed(l, 0)),
                  0 === s ? (s = i) : (n[l + 1] = _f(n[l + 1], i)),
                  (l = i);
              c && (n[i + 1] = gf(n[i + 1])),
                Nw(n, d, i, !0),
                Nw(n, d, i, !1),
                (function ZO(n, t, e, i, r) {
                  const o = r ? n.residualClasses : n.residualStyles;
                  null != o &&
                    'string' == typeof t &&
                    Fo(o, t) >= 0 &&
                    (e[i + 1] = vf(e[i + 1]));
                })(t, d, n, i, o),
                (a = ed(s, l)),
                o ? (t.classBindings = a) : (t.styleBindings = a);
            })(r, o, t, e, a, i);
        }
      }
      function yf(n, t, e, i, r) {
        let o = null;
        const a = e.directiveEnd;
        let s = e.directiveStylingLast;
        for (
          -1 === s ? (s = e.directiveStart) : s++;
          s < a && ((o = t[s]), (i = bs(i, o.hostAttrs, r)), o !== n);

        )
          s++;
        return null !== n && (e.directiveStylingLast = s), i;
      }
      function bs(n, t, e) {
        const i = e ? 1 : 2;
        let r = -1;
        if (null !== t)
          for (let o = 0; o < t.length; o++) {
            const a = t[o];
            'number' == typeof a
              ? (r = a)
              : r === i &&
                (Array.isArray(n) || (n = void 0 === n ? [] : ['', n]),
                un(n, a, !!e || t[++o]));
          }
        return void 0 === n ? null : n;
      }
      function Ww(n, t, e, i, r, o, a, s) {
        if (!(3 & t.type)) return;
        const l = n.data,
          c = l[s + 1],
          d = (function KO(n) {
            return 1 == (1 & n);
          })(c)
            ? Yw(l, t, e, r, Yr(c), a)
            : void 0;
        td(d) ||
          (td(o) ||
            ((function YO(n) {
              return 2 == (2 & n);
            })(c) &&
              (o = Yw(l, null, e, r, s, a))),
          (function dI(n, t, e, i, r) {
            if (t) r ? n.addClass(e, i) : n.removeClass(e, i);
            else {
              let o = -1 === i.indexOf('-') ? void 0 : Jt.DashCase;
              null == r
                ? n.removeStyle(e, i, o)
                : ('string' == typeof r &&
                    r.endsWith('!important') &&
                    ((r = r.slice(0, -10)), (o |= Jt.Important)),
                  n.setStyle(e, i, r, o));
            }
          })(i, a, vc($t(), e), r, o));
      }
      function Yw(n, t, e, i, r, o) {
        const a = null === t;
        let s;
        for (; r > 0; ) {
          const l = n[r],
            c = Array.isArray(l),
            d = c ? l[1] : l,
            u = null === d;
          let h = e[r + 1];
          h === le && (h = u ? Ie : void 0);
          let f = u ? um(h, i) : d === i ? h : void 0;
          if ((c && !td(f) && (f = um(l, i)), td(f) && ((s = f), a))) return s;
          const g = n[r + 1];
          r = a ? dr(g) : Yr(g);
        }
        if (null !== t) {
          let l = o ? t.residualClasses : t.residualStyles;
          null != l && (s = um(l, i));
        }
        return s;
      }
      function td(n) {
        return void 0 !== n;
      }
      function qw(n, t) {
        return 0 != (n.flags & (t ? 8 : 16));
      }
      function w(n, t = '') {
        const e = T(),
          i = xe(),
          r = n + 22,
          o = i.firstCreatePass ? zo(i, r, 1, t, null) : i.data[r],
          a = (e[r] = (function xm(n, t) {
            return n.createText(t);
          })(e[11], t));
        Fc(i, e, a, o), ni(o, !1);
      }
      function De(n) {
        return Ze('', n, ''), De;
      }
      function Ze(n, t, e) {
        const i = T(),
          r = Uo(i, n, t, e);
        return (
          r !== le &&
            (function Bi(n, t, e) {
              const i = vc(t, n);
              !(function Gb(n, t, e) {
                n.setValue(t, e);
              })(n[11], i, e);
            })(i, $t(), r),
          Ze
        );
      }
      function qr(n, t, e) {
        const i = T();
        return Nt(i, So(), t) && fn(xe(), et(), i, n, t, i[11], e, !0), qr;
      }
      function nd(n, t, e) {
        const i = T();
        if (Nt(i, So(), t)) {
          const o = xe(),
            a = et();
          fn(o, a, i, n, t, sw(Zh(o.data), a, i), e, !0);
        }
        return nd;
      }
      const Jo = 'en-US';
      let g0 = Jo;
      function xf(n, t, e, i, r) {
        if (((n = Q(n)), Array.isArray(n)))
          for (let o = 0; o < n.length; o++) xf(n[o], t, e, i, r);
        else {
          const o = xe(),
            a = T();
          let s = Hr(n) ? n : Q(n.provide),
            l = ky(n);
          const c = St(),
            d = 1048575 & c.providerIndexes,
            u = c.directiveStart,
            h = c.providerIndexes >> 20;
          if (Hr(n) || !n.multi) {
            const f = new ts(l, r, m),
              g = Mf(s, t, r ? d : d + h, u);
            -1 === g
              ? (sm(Ec(c, a), o, s),
                Df(o, n, t.length),
                t.push(s),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(f),
                a.push(f))
              : ((e[g] = f), (a[g] = f));
          } else {
            const f = Mf(s, t, d + h, u),
              g = Mf(s, t, d, d + h),
              y = g >= 0 && e[g];
            if ((r && !y) || (!r && !(f >= 0 && e[f]))) {
              sm(Ec(c, a), o, s);
              const x = (function AP(n, t, e, i, r) {
                const o = new ts(n, e, m);
                return (
                  (o.multi = []),
                  (o.index = t),
                  (o.componentProviders = 0),
                  z0(o, r, i && !e),
                  o
                );
              })(r ? kP : SP, e.length, r, i, l);
              !r && y && (e[g].providerFactory = x),
                Df(o, n, t.length, 0),
                t.push(s),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(x),
                a.push(x);
            } else Df(o, n, f > -1 ? f : g, z0(e[r ? g : f], l, !r && i));
            !r && i && y && e[g].componentProviders++;
          }
        }
      }
      function Df(n, t, e, i) {
        const r = Hr(t),
          o = (function GI(n) {
            return !!n.useClass;
          })(t);
        if (r || o) {
          const l = (o ? Q(t.useClass) : t).prototype.ngOnDestroy;
          if (l) {
            const c = n.destroyHooks || (n.destroyHooks = []);
            if (!r && t.multi) {
              const d = c.indexOf(e);
              -1 === d ? c.push(e, [i, l]) : c[d + 1].push(i, l);
            } else c.push(e, l);
          }
        }
      }
      function z0(n, t, e) {
        return e && n.componentProviders++, n.multi.push(t) - 1;
      }
      function Mf(n, t, e, i) {
        for (let r = e; r < i; r++) if (t[r] === n) return r;
        return -1;
      }
      function SP(n, t, e, i) {
        return Ef(this.multi, []);
      }
      function kP(n, t, e, i) {
        const r = this.multi;
        let o;
        if (this.providerFactory) {
          const a = this.providerFactory.componentProviders,
            s = Pr(e, e[1], this.providerFactory.index, i);
          (o = s.slice(0, a)), Ef(r, o);
          for (let l = a; l < s.length; l++) o.push(s[l]);
        } else (o = []), Ef(r, o);
        return o;
      }
      function Ef(n, t) {
        for (let e = 0; e < n.length; e++) t.push((0, n[e])());
        return t;
      }
      function X(n, t = []) {
        return (e) => {
          e.providersResolver = (i, r) =>
            (function EP(n, t, e) {
              const i = xe();
              if (i.firstCreatePass) {
                const r = Un(n);
                xf(e, i.data, i.blueprint, r, !0),
                  xf(t, i.data, i.blueprint, r, !1);
              }
            })(i, r ? r(n) : n, t);
        };
      }
      class ea {}
      class j0 {}
      class U0 extends ea {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new cw(this));
          const i = sn(t);
          (this._bootstrapComponents = Vi(i.bootstrap)),
            (this._r3Injector = jy(
              t,
              e,
              [
                { provide: ea, useValue: this },
                { provide: zr, useValue: this.componentFactoryResolver },
              ],
              Ue(t),
              new Set(['environment'])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class Sf extends j0 {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new U0(this.moduleType, t);
        }
      }
      class IP extends ea {
        constructor(t, e, i) {
          super(),
            (this.componentFactoryResolver = new cw(this)),
            (this.instance = null);
          const r = new Sy(
            [
              ...t,
              { provide: ea, useValue: this },
              { provide: zr, useValue: this.componentFactoryResolver },
            ],
            e || jc(),
            i,
            new Set(['environment'])
          );
          (this.injector = r), r.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function sd(n, t, e = null) {
        return new IP(n, t, e).injector;
      }
      let RP = (() => {
        class n {
          constructor(e) {
            (this._injector = e), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(e) {
            if (!e.standalone) return null;
            if (!this.cachedInjectors.has(e.id)) {
              const i = xy(0, e.type),
                r =
                  i.length > 0
                    ? sd([i], this._injector, `Standalone[${e.type.name}]`)
                    : null;
              this.cachedInjectors.set(e.id, r);
            }
            return this.cachedInjectors.get(e.id);
          }
          ngOnDestroy() {
            try {
              for (const e of this.cachedInjectors.values())
                null !== e && e.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
        }
        return (
          (n.ɵprov = I({
            token: n,
            providedIn: 'environment',
            factory: () => new n(C(si)),
          })),
          n
        );
      })();
      function kf(n) {
        n.getStandaloneInjector = (t) =>
          t.get(RP).getOrCreateStandaloneInjector(n);
      }
      function Ms(n, t, e) {
        const i =
            (function Ut() {
              const n = se.lFrame;
              let t = n.bindingRootIndex;
              return (
                -1 === t &&
                  (t = n.bindingRootIndex = n.tView.bindingStartIndex),
                t
              );
            })() + n,
          r = T();
        return r[i] === le
          ? (function ci(n, t, e) {
              return (n[t] = e);
            })(r, i, e ? t.call(e) : t())
          : (function _s(n, t) {
              return n[t];
            })(r, i);
      }
      function Tf(n) {
        return (t) => {
          setTimeout(n, void 0, t);
        };
      }
      const re = class iN extends z {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, i) {
          let r = t,
            o = e || (() => null),
            a = i;
          if (t && 'object' == typeof t) {
            const l = t;
            (r = l.next?.bind(l)),
              (o = l.error?.bind(l)),
              (a = l.complete?.bind(l));
          }
          this.__isAsync && ((o = Tf(o)), r && (r = Tf(r)), a && (a = Tf(a)));
          const s = super.subscribe({ next: r, error: o, complete: a });
          return t instanceof Oe && t.add(s), s;
        }
      };
      function rN() {
        return this._results[$r()]();
      }
      class Xr {
        get changes() {
          return this._changes || (this._changes = new re());
        }
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = $r(),
            i = Xr.prototype;
          i[e] || (i[e] = rN);
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, e) {
          const i = this;
          i.dirty = !1;
          const r = (function Dn(n) {
            return n.flat(Number.POSITIVE_INFINITY);
          })(t);
          (this._changesDetected = !(function fT(n, t, e) {
            if (n.length !== t.length) return !1;
            for (let i = 0; i < n.length; i++) {
              let r = n[i],
                o = t[i];
              if ((e && ((r = e(r)), (o = e(o))), o !== r)) return !1;
            }
            return !0;
          })(i._results, r, e)) &&
            ((i._results = r),
            (i.length = r.length),
            (i.last = r[this.length - 1]),
            (i.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let ut = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = sN), n;
      })();
      const oN = ut,
        aN = class extends oN {
          constructor(t, e, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = e),
              (this.elementRef = i);
          }
          createEmbeddedView(t, e) {
            const i = this._declarationTContainer.tViews,
              r = $c(
                this._declarationLView,
                i,
                t,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                e || null
              );
            r[17] = this._declarationLView[this._declarationTContainer.index];
            const a = this._declarationLView[19];
            return (
              null !== a && (r[19] = a.createEmbeddedView(i)),
              Qm(i, r, t),
              new ps(r)
            );
          }
        };
      function sN() {
        return ld(St(), T());
      }
      function ld(n, t) {
        return 4 & n.type ? new aN(t, n, Vo(n, t)) : null;
      }
      let ht = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = lN), n;
      })();
      function lN() {
        return iC(St(), T());
      }
      const cN = ht,
        tC = class extends cN {
          constructor(t, e, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = e),
              (this._hostLView = i);
          }
          get element() {
            return Vo(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Ao(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = am(this._hostTNode, this._hostLView);
            if (ub(t)) {
              const e = Dc(t, this._hostLView),
                i = xc(t);
              return new Ao(e[1].data[i + 8], e);
            }
            return new Ao(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const e = nC(this._lContainer);
            return (null !== e && e[t]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(t, e, i) {
            let r, o;
            'number' == typeof i
              ? (r = i)
              : null != i && ((r = i.index), (o = i.injector));
            const a = t.createEmbeddedView(e || {}, o);
            return this.insert(a, r), a;
          }
          createComponent(t, e, i, r, o) {
            const a =
              t &&
              !(function rs(n) {
                return 'function' == typeof n;
              })(t);
            let s;
            if (a) s = e;
            else {
              const u = e || {};
              (s = u.index),
                (i = u.injector),
                (r = u.projectableNodes),
                (o = u.environmentInjector || u.ngModuleRef);
            }
            const l = a ? t : new gs(Ve(t)),
              c = i || this.parentInjector;
            if (!o && null == l.ngModule) {
              const h = (a ? c : this.parentInjector).get(si, null);
              h && (o = h);
            }
            const d = l.create(c, r, void 0, o);
            return this.insert(d.hostView, s), d;
          }
          insert(t, e) {
            const i = t._lView,
              r = i[1];
            if (
              (function VA(n) {
                return jn(n[3]);
              })(i)
            ) {
              const d = this.indexOf(t);
              if (-1 !== d) this.detach(d);
              else {
                const u = i[3],
                  h = new tC(u, u[6], u[3]);
                h.detach(h.indexOf(t));
              }
            }
            const o = this._adjustIndex(e),
              a = this._lContainer;
            !(function nI(n, t, e, i) {
              const r = 10 + i,
                o = e.length;
              i > 0 && (e[r - 1][4] = t),
                i < o - 10
                  ? ((t[4] = e[r]), xb(e, 10 + i, t))
                  : (e.push(t), (t[4] = null)),
                (t[3] = e);
              const a = t[17];
              null !== a &&
                e !== a &&
                (function iI(n, t) {
                  const e = n[9];
                  t[16] !== t[3][3][16] && (n[2] = !0),
                    null === e ? (n[9] = [t]) : e.push(t);
                })(a, t);
              const s = t[19];
              null !== s && s.insertView(n), (t[2] |= 64);
            })(r, i, a, o);
            const s = km(o, a),
              l = i[11],
              c = Oc(l, a[7]);
            return (
              null !== c &&
                (function JT(n, t, e, i, r, o) {
                  (i[0] = r), (i[6] = t), ds(n, i, e, 1, r, o);
                })(r, a[6], l, i, c, s),
              t.attachToViewContainerRef(),
              xb(If(a), o, t),
              t
            );
          }
          move(t, e) {
            return this.insert(t, e);
          }
          indexOf(t) {
            const e = nC(this._lContainer);
            return null !== e ? e.indexOf(t) : -1;
          }
          remove(t) {
            const e = this._adjustIndex(t, -1),
              i = Mm(this._lContainer, e);
            i && (kc(If(this._lContainer), e), Yb(i[1], i));
          }
          detach(t) {
            const e = this._adjustIndex(t, -1),
              i = Mm(this._lContainer, e);
            return i && null != kc(If(this._lContainer), e) ? new ps(i) : null;
          }
          _adjustIndex(t, e = 0) {
            return t ?? this.length + e;
          }
        };
      function nC(n) {
        return n[8];
      }
      function If(n) {
        return n[8] || (n[8] = []);
      }
      function iC(n, t) {
        let e;
        const i = t[n.index];
        if (jn(i)) e = i;
        else {
          let r;
          if (8 & n.type) r = Et(i);
          else {
            const o = t[11];
            r = o.createComment('');
            const a = cn(n, t);
            Lr(
              o,
              Oc(o, a),
              r,
              (function sI(n, t) {
                return n.nextSibling(t);
              })(o, a),
              !1
            );
          }
          (t[n.index] = e = rw(i, t, r, n)), Wc(t, e);
        }
        return new tC(e, n, t);
      }
      class Rf {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new Rf(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Of {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : e.length,
              r = [];
            for (let o = 0; o < i; o++) {
              const a = e.getByIndex(o);
              r.push(this.queries[a.indexInDeclarationView].clone());
            }
            return new Of(r);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++)
            null !== lC(t, e).matches && this.queries[e].setDirty();
        }
      }
      class rC {
        constructor(t, e, i = null) {
          (this.predicate = t), (this.flags = e), (this.read = i);
        }
      }
      class Ff {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let i = 0; i < this.length; i++) {
            const r = null !== e ? e.length : 0,
              o = this.getByIndex(i).embeddedTView(t, r);
            o &&
              ((o.indexInDeclarationView = i),
              null !== e ? e.push(o) : (e = [o]));
          }
          return null !== e ? new Ff(e) : null;
        }
        template(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Pf {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, e),
              new Pf(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== e; ) i = i.parent;
            return e === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let r = 0; r < i.length; r++) {
              const o = i[r];
              this.matchTNodeWithReadOption(t, e, dN(e, o)),
                this.matchTNodeWithReadOption(t, e, Sc(e, t, o, !1, !1));
            }
          else
            i === ut
              ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, Sc(e, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, e, i) {
          if (null !== i) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === j || r === ht || (r === ut && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const o = Sc(e, t, r, !1, !1);
                null !== o && this.addMatch(e.index, o);
              }
            else this.addMatch(e.index, i);
          }
        }
        addMatch(t, e) {
          null === this.matches
            ? (this.matches = [t, e])
            : this.matches.push(t, e);
        }
      }
      function dN(n, t) {
        const e = n.localNames;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) if (e[i] === t) return e[i + 1];
        return null;
      }
      function hN(n, t, e, i) {
        return -1 === e
          ? (function uN(n, t) {
              return 11 & n.type ? Vo(n, t) : 4 & n.type ? ld(n, t) : null;
            })(t, n)
          : -2 === e
          ? (function mN(n, t, e) {
              return e === j
                ? Vo(t, n)
                : e === ut
                ? ld(t, n)
                : e === ht
                ? iC(t, n)
                : void 0;
            })(n, t, i)
          : Pr(n, n[1], e, t);
      }
      function oC(n, t, e, i) {
        const r = t[19].queries[i];
        if (null === r.matches) {
          const o = n.data,
            a = e.matches,
            s = [];
          for (let l = 0; l < a.length; l += 2) {
            const c = a[l];
            s.push(c < 0 ? null : hN(t, o[c], a[l + 1], e.metadata.read));
          }
          r.matches = s;
        }
        return r.matches;
      }
      function Nf(n, t, e, i) {
        const r = n.queries.getByIndex(e),
          o = r.matches;
        if (null !== o) {
          const a = oC(n, t, r, e);
          for (let s = 0; s < o.length; s += 2) {
            const l = o[s];
            if (l > 0) i.push(a[s / 2]);
            else {
              const c = o[s + 1],
                d = t[-l];
              for (let u = 10; u < d.length; u++) {
                const h = d[u];
                h[17] === h[3] && Nf(h[1], h, c, i);
              }
              if (null !== d[9]) {
                const u = d[9];
                for (let h = 0; h < u.length; h++) {
                  const f = u[h];
                  Nf(f[1], f, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function V(n) {
        const t = T(),
          e = xe(),
          i = tb();
        Qh(i + 1);
        const r = lC(e, i);
        if (
          n.dirty &&
          (function LA(n) {
            return 4 == (4 & n[2]);
          })(t) ===
            (2 == (2 & r.metadata.flags))
        ) {
          if (null === r.matches) n.reset([]);
          else {
            const o = r.crossesNgTemplate ? Nf(e, t, i, []) : oC(e, t, r, i);
            n.reset(o, nR), n.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Se(n, t, e) {
        const i = xe();
        i.firstCreatePass &&
          (sC(i, new rC(n, t, e), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          aC(i, T(), t);
      }
      function Me(n, t, e, i) {
        const r = xe();
        if (r.firstCreatePass) {
          const o = St();
          sC(r, new rC(t, e, i), o.index),
            (function pN(n, t) {
              const e = n.contentQueries || (n.contentQueries = []);
              t !== (e.length ? e[e.length - 1] : -1) &&
                e.push(n.queries.length - 1, t);
            })(r, n),
            2 == (2 & e) && (r.staticContentQueries = !0);
        }
        aC(r, T(), e);
      }
      function B() {
        return (function fN(n, t) {
          return n[19].queries[t].queryList;
        })(T(), tb());
      }
      function aC(n, t, e) {
        const i = new Xr(4 == (4 & e));
        Qy(n, t, i, i.destroy),
          null === t[19] && (t[19] = new Of()),
          t[19].queries.push(new Rf(i));
      }
      function sC(n, t, e) {
        null === n.queries && (n.queries = new Ff()),
          n.queries.track(new Pf(t, e));
      }
      function lC(n, t) {
        return n.queries.getByIndex(t);
      }
      function ks(n, t) {
        return ld(n, t);
      }
      function dd(...n) {}
      const ud = new A('Application Initializer');
      let hd = (() => {
        class n {
          constructor(e) {
            (this.appInits = e),
              (this.resolve = dd),
              (this.reject = dd),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, r) => {
                (this.resolve = i), (this.reject = r);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let r = 0; r < this.appInits.length; r++) {
                const o = this.appInits[r]();
                if (vs(o)) e.push(o);
                else if (pf(o)) {
                  const a = new Promise((s, l) => {
                    o.subscribe({ complete: s, error: l });
                  });
                  e.push(a);
                }
              }
            Promise.all(e)
              .then(() => {
                i();
              })
              .catch((r) => {
                this.reject(r);
              }),
              0 === e.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(ud, 8));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      const ia = new A('AppId', {
        providedIn: 'root',
        factory: function SC() {
          return `${zf()}${zf()}${zf()}`;
        },
      });
      function zf() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const kC = new A('Platform Initializer'),
        md = new A('Platform ID', {
          providedIn: 'platform',
          factory: () => 'unknown',
        }),
        AC = new A('appBootstrapListener'),
        Yt = new A('AnimationModuleType');
      let PN = (() => {
        class n {
          log(e) {
            console.log(e);
          }
          warn(e) {
            console.warn(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'platform' })),
          n
        );
      })();
      const pi = new A('LocaleId', {
        providedIn: 'root',
        factory: () =>
          ie(pi, J.Optional | J.SkipSelf) ||
          (function NN() {
            return (typeof $localize < 'u' && $localize.locale) || Jo;
          })(),
      });
      class VN {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      let TC = (() => {
        class n {
          compileModuleSync(e) {
            return new Sf(e);
          }
          compileModuleAsync(e) {
            return Promise.resolve(this.compileModuleSync(e));
          }
          compileModuleAndAllComponentsSync(e) {
            const i = this.compileModuleSync(e),
              o = Vi(sn(e).declarations).reduce((a, s) => {
                const l = Ve(s);
                return l && a.push(new gs(l)), a;
              }, []);
            return new VN(i, o);
          }
          compileModuleAndAllComponentsAsync(e) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(e));
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      const zN = (() => Promise.resolve(0))();
      function jf(n) {
        typeof Zone > 'u'
          ? zN.then(() => {
              n && n.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', n);
      }
      class U {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new re(!1)),
            (this.onMicrotaskEmpty = new re(!1)),
            (this.onStable = new re(!1)),
            (this.onError = new re(!1)),
            typeof Zone > 'u')
          )
            throw new k(908, !1);
          Zone.assertZonePatched();
          const r = this;
          (r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !i && e),
            (r.shouldCoalesceRunChangeDetection = i),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function jN() {
              let n = $e.requestAnimationFrame,
                t = $e.cancelAnimationFrame;
              if (typeof Zone < 'u' && n && t) {
                const e = n[Zone.__symbol__('OriginalDelegate')];
                e && (n = e);
                const i = t[Zone.__symbol__('OriginalDelegate')];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function GN(n) {
              const t = () => {
                !(function $N(n) {
                  n.isCheckStableRunning ||
                    -1 !== n.lastRequestAnimationFrameId ||
                    ((n.lastRequestAnimationFrameId =
                      n.nativeRequestAnimationFrame.call($e, () => {
                        n.fakeTopEventTask ||
                          (n.fakeTopEventTask = Zone.root.scheduleEventTask(
                            'fakeTopEventTask',
                            () => {
                              (n.lastRequestAnimationFrameId = -1),
                                $f(n),
                                (n.isCheckStableRunning = !0),
                                Uf(n),
                                (n.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          n.fakeTopEventTask.invoke();
                      })),
                    $f(n));
                })(n);
              };
              n._inner = n._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, i, r, o, a, s) => {
                  try {
                    return OC(n), e.invokeTask(r, o, a, s);
                  } finally {
                    ((n.shouldCoalesceEventChangeDetection &&
                      'eventTask' === o.type) ||
                      n.shouldCoalesceRunChangeDetection) &&
                      t(),
                      FC(n);
                  }
                },
                onInvoke: (e, i, r, o, a, s, l) => {
                  try {
                    return OC(n), e.invoke(r, o, a, s, l);
                  } finally {
                    n.shouldCoalesceRunChangeDetection && t(), FC(n);
                  }
                },
                onHasTask: (e, i, r, o) => {
                  e.hasTask(r, o),
                    i === r &&
                      ('microTask' == o.change
                        ? ((n._hasPendingMicrotasks = o.microTask),
                          $f(n),
                          Uf(n))
                        : 'macroTask' == o.change &&
                          (n.hasPendingMacrotasks = o.macroTask));
                },
                onHandleError: (e, i, r, o) => (
                  e.handleError(r, o),
                  n.runOutsideAngular(() => n.onError.emit(o)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return typeof Zone < 'u' && !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!U.isInAngularZone()) throw new k(909, !1);
        }
        static assertNotInAngularZone() {
          if (U.isInAngularZone()) throw new k(909, !1);
        }
        run(t, e, i) {
          return this._inner.run(t, e, i);
        }
        runTask(t, e, i, r) {
          const o = this._inner,
            a = o.scheduleEventTask('NgZoneEvent: ' + r, t, UN, dd, dd);
          try {
            return o.runTask(a, e, i);
          } finally {
            o.cancelTask(a);
          }
        }
        runGuarded(t, e, i) {
          return this._inner.runGuarded(t, e, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const UN = {};
      function Uf(n) {
        if (0 == n._nesting && !n.hasPendingMicrotasks && !n.isStable)
          try {
            n._nesting++, n.onMicrotaskEmpty.emit(null);
          } finally {
            if ((n._nesting--, !n.hasPendingMicrotasks))
              try {
                n.runOutsideAngular(() => n.onStable.emit(null));
              } finally {
                n.isStable = !0;
              }
          }
      }
      function $f(n) {
        n.hasPendingMicrotasks = !!(
          n._hasPendingMicrotasks ||
          ((n.shouldCoalesceEventChangeDetection ||
            n.shouldCoalesceRunChangeDetection) &&
            -1 !== n.lastRequestAnimationFrameId)
        );
      }
      function OC(n) {
        n._nesting++,
          n.isStable && ((n.isStable = !1), n.onUnstable.emit(null));
      }
      function FC(n) {
        n._nesting--, Uf(n);
      }
      class WN {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new re()),
            (this.onMicrotaskEmpty = new re()),
            (this.onStable = new re()),
            (this.onError = new re());
        }
        run(t, e, i) {
          return t.apply(e, i);
        }
        runGuarded(t, e, i) {
          return t.apply(e, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, i, r) {
          return t.apply(e, i);
        }
      }
      const PC = new A(''),
        fd = new A('');
      let Yf,
        Gf = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Yf ||
                  ((function YN(n) {
                    Yf = n;
                  })(r),
                  r.addToWindow(i)),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > 'u'
                      ? null
                      : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      U.assertNotInAngularZone(),
                        jf(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                jf(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(e) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, i, r) {
              let o = -1;
              i &&
                i > 0 &&
                (o = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (a) => a.timeoutId !== o
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: e, timeoutId: o, updateCb: r });
            }
            whenStable(e, i, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, i, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(e) {
              this.registry.registerApplication(e, this);
            }
            unregisterApplication(e) {
              this.registry.unregisterApplication(e);
            }
            findProviders(e, i, r) {
              return [];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(U), C(Wf), C(fd));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Wf = (() => {
          class n {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(e, i) {
              this._applications.set(e, i);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, i = !0) {
              return Yf?.findTestabilityInTree(this, e, i) ?? null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({
              token: n,
              factory: n.ɵfac,
              providedIn: 'platform',
            })),
            n
          );
        })(),
        ur = null;
      const NC = new A('AllowMultipleToken'),
        qf = new A('PlatformDestroyListeners');
      class LC {
        constructor(t, e) {
          (this.name = t), (this.token = e);
        }
      }
      function BC(n, t, e = []) {
        const i = `Platform: ${t}`,
          r = new A(i);
        return (o = []) => {
          let a = Kf();
          if (!a || a.injector.get(NC, !1)) {
            const s = [...e, ...o, { provide: r, useValue: !0 }];
            n
              ? n(s)
              : (function XN(n) {
                  if (ur && !ur.get(NC, !1)) throw new k(400, !1);
                  ur = n;
                  const t = n.get(zC);
                  (function VC(n) {
                    const t = n.get(kC, null);
                    t && t.forEach((e) => e());
                  })(n);
                })(
                  (function HC(n = [], t) {
                    return Dt.create({
                      name: t,
                      providers: [
                        { provide: Hm, useValue: 'platform' },
                        { provide: qf, useValue: new Set([() => (ur = null)]) },
                        ...n,
                      ],
                    });
                  })(s, i)
                );
          }
          return (function QN(n) {
            const t = Kf();
            if (!t) throw new k(401, !1);
            return t;
          })();
        };
      }
      function Kf() {
        return ur?.get(zC) ?? null;
      }
      let zC = (() => {
        class n {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, i) {
            const r = (function UC(n, t) {
                let e;
                return (
                  (e =
                    'noop' === n
                      ? new WN()
                      : ('zone.js' === n ? void 0 : n) || new U(t)),
                  e
                );
              })(
                i?.ngZone,
                (function jC(n) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!n || !n.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!n || !n.ngZoneRunCoalescing) || !1,
                  };
                })(i)
              ),
              o = [{ provide: U, useValue: r }];
            return r.run(() => {
              const a = Dt.create({
                  providers: o,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                s = e.create(a),
                l = s.injector.get(Li, null);
              if (!l) throw new k(402, !1);
              return (
                r.runOutsideAngular(() => {
                  const c = r.onError.subscribe({
                    next: (d) => {
                      l.handleError(d);
                    },
                  });
                  s.onDestroy(() => {
                    pd(this._modules, s), c.unsubscribe();
                  });
                }),
                (function $C(n, t, e) {
                  try {
                    const i = e();
                    return vs(i)
                      ? i.catch((r) => {
                          throw (
                            (t.runOutsideAngular(() => n.handleError(r)), r)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => n.handleError(i)), i);
                  }
                })(l, r, () => {
                  const c = s.injector.get(hd);
                  return (
                    c.runInitializers(),
                    c.donePromise.then(
                      () => (
                        (function _0(n) {
                          wn(n, 'Expected localeId to be defined'),
                            'string' == typeof n &&
                              (g0 = n.toLowerCase().replace(/_/g, '-'));
                        })(s.injector.get(pi, Jo) || Jo),
                        this._moduleDoBootstrap(s),
                        s
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, i = []) {
            const r = GC({}, i);
            return (function qN(n, t, e) {
              const i = new Sf(e);
              return Promise.resolve(i);
            })(0, 0, e).then((o) => this.bootstrapModuleFactory(o, r));
          }
          _moduleDoBootstrap(e) {
            const i = e.injector.get(ra);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((r) => i.bootstrap(r));
            else {
              if (!e.instance.ngDoBootstrap) throw new k(-403, !1);
              e.instance.ngDoBootstrap(i);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new k(404, !1);
            this._modules.slice().forEach((i) => i.destroy()),
              this._destroyListeners.forEach((i) => i());
            const e = this._injector.get(qf, null);
            e && (e.forEach((i) => i()), e.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(Dt));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'platform' })),
          n
        );
      })();
      function GC(n, t) {
        return Array.isArray(t) ? t.reduce(GC, n) : { ...n, ...t };
      }
      let ra = (() => {
        class n {
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          constructor(e, i, r) {
            (this._zone = e),
              (this._injector = i),
              (this._exceptionHandler = r),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const o = new Fe((s) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    s.next(this._stable), s.complete();
                  });
              }),
              a = new Fe((s) => {
                let l;
                this._zone.runOutsideAngular(() => {
                  l = this._zone.onStable.subscribe(() => {
                    U.assertNotInAngularZone(),
                      jf(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), s.next(!0));
                      });
                  });
                });
                const c = this._zone.onUnstable.subscribe(() => {
                  U.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        s.next(!1);
                      }));
                });
                return () => {
                  l.unsubscribe(), c.unsubscribe();
                };
              });
            this.isStable = on(o, a.pipe(Ev()));
          }
          bootstrap(e, i) {
            const r = e instanceof Ay;
            if (!this._injector.get(hd).done)
              throw (
                (!r &&
                  (function wo(n) {
                    const t = Ve(n) || Rt(n) || zt(n);
                    return null !== t && t.standalone;
                  })(e),
                new k(405, false))
              );
            let a;
            (a = r ? e : this._injector.get(zr).resolveComponentFactory(e)),
              this.componentTypes.push(a.componentType);
            const s = (function KN(n) {
                return n.isBoundToModule;
              })(a)
                ? void 0
                : this._injector.get(ea),
              c = a.create(Dt.NULL, [], i || a.selector, s),
              d = c.location.nativeElement,
              u = c.injector.get(PC, null);
            return (
              u?.registerApplication(d),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  pd(this.components, c),
                  u?.unregisterApplication(d);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new k(101, !1);
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const i = e;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(e) {
            const i = e;
            pd(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView), this.tick(), this.components.push(e);
            const i = this._injector.get(AC, []);
            i.push(...this._bootstrapListeners), i.forEach((r) => r(e));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((e) => e()),
                  this._views.slice().forEach((e) => e.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(e) {
            return (
              this._destroyListeners.push(e),
              () => pd(this._destroyListeners, e)
            );
          }
          destroy() {
            if (this._destroyed) throw new k(406, !1);
            const e = this._injector;
            e.destroy && !e.destroyed && e.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(U), C(si), C(Li));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      function pd(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      let mt = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = eL), n;
      })();
      function eL(n) {
        return (function tL(n, t, e) {
          if (Qa(n) && !e) {
            const i = dn(n.index, t);
            return new ps(i, i);
          }
          return 47 & n.type ? new ps(t[16], t) : null;
        })(St(), T(), 16 == (16 & n));
      }
      class XC {
        constructor() {}
        supports(t) {
          return Zc(t);
        }
        create(t) {
          return new sL(t);
        }
      }
      const aL = (n, t) => t;
      class sL {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || aL);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            i = this._removalsHead,
            r = 0,
            o = null;
          for (; e || i; ) {
            const a = !i || (e && e.currentIndex < QC(i, r, o)) ? e : i,
              s = QC(a, r, o),
              l = a.currentIndex;
            if (a === i) r--, (i = i._nextRemoved);
            else if (((e = e._next), null == a.previousIndex)) r++;
            else {
              o || (o = []);
              const c = s - r,
                d = l - r;
              if (c != d) {
                for (let h = 0; h < c; h++) {
                  const f = h < o.length ? o[h] : (o[h] = 0),
                    g = f + h;
                  d <= g && g < c && (o[h] = f + 1);
                }
                o[a.previousIndex] = d - c;
              }
            }
            s !== l && t(a, s, l);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !Zc(t))) throw new k(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let r,
            o,
            a,
            e = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let s = 0; s < this.length; s++)
              (o = t[s]),
                (a = this._trackByFn(s, o)),
                null !== e && Object.is(e.trackById, a)
                  ? (i && (e = this._verifyReinsertion(e, o, a, s)),
                    Object.is(e.item, o) || this._addIdentityChange(e, o))
                  : ((e = this._mismatch(e, o, a, s)), (i = !0)),
                (e = e._next);
          } else
            (r = 0),
              (function VO(n, t) {
                if (Array.isArray(n))
                  for (let e = 0; e < n.length; e++) t(n[e]);
                else {
                  const e = n[$r()]();
                  let i;
                  for (; !(i = e.next()).done; ) t(i.value);
                }
              })(t, (s) => {
                (a = this._trackByFn(r, s)),
                  null !== e && Object.is(e.trackById, a)
                    ? (i && (e = this._verifyReinsertion(e, s, a, r)),
                      Object.is(e.item, s) || this._addIdentityChange(e, s))
                    : ((e = this._mismatch(e, s, a, r)), (i = !0)),
                  (e = e._next),
                  r++;
              }),
              (this.length = r);
          return this._truncate(e), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, i, r) {
          let o;
          return (
            null === t ? (o = this._itTail) : ((o = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._reinsertAfter(t, o, r))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, r))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._moveAfter(t, o, r))
              : (t = this._addAfter(new lL(e, i), o, r)),
            t
          );
        }
        _verifyReinsertion(t, e, i, r) {
          let o =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== o
              ? (t = this._reinsertAfter(o, t._prev, r))
              : t.currentIndex != r &&
                ((t.currentIndex = r), this._addToMoves(t, r)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const r = t._prevRemoved,
            o = t._nextRemoved;
          return (
            null === r ? (this._removalsHead = o) : (r._nextRemoved = o),
            null === o ? (this._removalsTail = r) : (o._prevRemoved = r),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, e, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, e, i) {
          return (
            this._insertAfter(t, e, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, i) {
          const r = null === e ? this._itHead : e._next;
          return (
            (t._next = r),
            (t._prev = e),
            null === r ? (this._itTail = t) : (r._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new ZC()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            i = t._next;
          return (
            null === e ? (this._itHead = i) : (e._next = i),
            null === i ? (this._itTail = e) : (i._prev = e),
            t
          );
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new ZC()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class lL {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class cL {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, e) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === e || e <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            i = t._nextDup;
          return (
            null === e ? (this._head = i) : (e._nextDup = i),
            null === i ? (this._tail = e) : (i._prevDup = e),
            null === this._head
          );
        }
      }
      class ZC {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let i = this.map.get(e);
          i || ((i = new cL()), this.map.set(e, i)), i.add(t);
        }
        get(t, e) {
          const r = this.map.get(t);
          return r ? r.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function QC(n, t, e) {
        const i = n.previousIndex;
        if (null === i) return i;
        let r = 0;
        return e && i < e.length && (r = e[i]), i + t + r;
      }
      class JC {
        constructor() {}
        supports(t) {
          return t instanceof Map || mf(t);
        }
        create() {
          return new dL();
        }
      }
      class dL {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || mf(t))) throw new k(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, r) => {
              if (e && e.key === r)
                this._maybeAddToChanges(e, i),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const o = this._getOrCreateRecordForKey(r, i);
                e = this._insertBeforeOrAppend(e, o);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let i = e; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const i = t._prev;
            return (
              (e._next = t),
              (e._prev = i),
              (t._prev = e),
              i && (i._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const r = this._records.get(t);
            this._maybeAddToChanges(r, e);
            const o = r._prev,
              a = r._next;
            return (
              o && (o._next = a),
              a && (a._prev = o),
              (r._next = null),
              (r._prev = null),
              r
            );
          }
          const i = new uL(t);
          return (
            this._records.set(t, i),
            (i.currentValue = e),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Object.is(e, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = e),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map
            ? t.forEach(e)
            : Object.keys(t).forEach((i) => e(t[i], i));
        }
      }
      class uL {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function ex() {
        return new zi([new XC()]);
      }
      let zi = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (null != i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || ex()),
              deps: [[n, new oi(), new hn()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (null != i) return i;
            throw new k(901, !1);
          }
        }
        return (n.ɵprov = I({ token: n, providedIn: 'root', factory: ex })), n;
      })();
      function tx() {
        return new Ts([new JC()]);
      }
      let Ts = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || tx()),
              deps: [[n, new oi(), new hn()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (i) return i;
            throw new k(901, !1);
          }
        }
        return (n.ɵprov = I({ token: n, providedIn: 'root', factory: tx })), n;
      })();
      const fL = BC(null, 'core', []);
      let pL = (() => {
        class n {
          constructor(e) {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(ra));
          }),
          (n.ɵmod = he({ type: n })),
          (n.ɵinj = de({})),
          n
        );
      })();
      function oa(n) {
        return 'boolean' == typeof n ? n : null != n && 'false' !== n;
      }
      let ep = null;
      function gi() {
        return ep;
      }
      class vL {}
      const oe = new A('DocumentToken');
      let tp = (() => {
        class n {
          historyGo(e) {
            throw new Error('Not implemented');
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({
            token: n,
            factory: function () {
              return (function bL() {
                return C(nx);
              })();
            },
            providedIn: 'platform',
          })),
          n
        );
      })();
      const yL = new A('Location Initialized');
      let nx = (() => {
        class n extends tp {
          constructor(e) {
            super(),
              (this._doc = e),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return gi().getBaseHref(this._doc);
          }
          onPopState(e) {
            const i = gi().getGlobalEventTarget(this._doc, 'window');
            return (
              i.addEventListener('popstate', e, !1),
              () => i.removeEventListener('popstate', e)
            );
          }
          onHashChange(e) {
            const i = gi().getGlobalEventTarget(this._doc, 'window');
            return (
              i.addEventListener('hashchange', e, !1),
              () => i.removeEventListener('hashchange', e)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(e) {
            this._location.pathname = e;
          }
          pushState(e, i, r) {
            ix() ? this._history.pushState(e, i, r) : (this._location.hash = r);
          }
          replaceState(e, i, r) {
            ix()
              ? this._history.replaceState(e, i, r)
              : (this._location.hash = r);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(oe));
          }),
          (n.ɵprov = I({
            token: n,
            factory: function () {
              return (function wL() {
                return new nx(C(oe));
              })();
            },
            providedIn: 'platform',
          })),
          n
        );
      })();
      function ix() {
        return !!window.history.pushState;
      }
      function np(n, t) {
        if (0 == n.length) return t;
        if (0 == t.length) return n;
        let e = 0;
        return (
          n.endsWith('/') && e++,
          t.startsWith('/') && e++,
          2 == e ? n + t.substring(1) : 1 == e ? n + t : n + '/' + t
        );
      }
      function rx(n) {
        const t = n.match(/#|\?|$/),
          e = (t && t.index) || n.length;
        return n.slice(0, e - ('/' === n[e - 1] ? 1 : 0)) + n.slice(e);
      }
      function ji(n) {
        return n && '?' !== n[0] ? '?' + n : n;
      }
      let Qr = (() => {
        class n {
          historyGo(e) {
            throw new Error('Not implemented');
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({
            token: n,
            factory: function () {
              return ie(ax);
            },
            providedIn: 'root',
          })),
          n
        );
      })();
      const ox = new A('appBaseHref');
      let ax = (() => {
          class n extends Qr {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                (this._baseHref =
                  i ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  ie(oe).location?.origin ??
                  '');
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return np(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  ji(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && e ? `${i}${r}` : i;
            }
            pushState(e, i, r, o) {
              const a = this.prepareExternalUrl(r + ji(o));
              this._platformLocation.pushState(e, i, a);
            }
            replaceState(e, i, r, o) {
              const a = this.prepareExternalUrl(r + ji(o));
              this._platformLocation.replaceState(e, i, a);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(tp), C(ox, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        CL = (() => {
          class n extends Qr {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ''),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = '#'), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(e) {
              const i = np(this._baseHref, e);
              return i.length > 0 ? '#' + i : i;
            }
            pushState(e, i, r, o) {
              let a = this.prepareExternalUrl(r + ji(o));
              0 == a.length && (a = this._platformLocation.pathname),
                this._platformLocation.pushState(e, i, a);
            }
            replaceState(e, i, r, o) {
              let a = this.prepareExternalUrl(r + ji(o));
              0 == a.length && (a = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, i, a);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(tp), C(ox, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        vd = (() => {
          class n {
            constructor(e) {
              (this._subject = new re()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = e);
              const i = this._locationStrategy.getBaseHref();
              (this._basePath = (function ML(n) {
                if (new RegExp('^(https?:)?//').test(n)) {
                  const [, e] = n.split(/\/\/[^\/]+/);
                  return e;
                }
                return n;
              })(rx(sx(i)))),
                this._locationStrategy.onPopState((r) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: r.state,
                    type: r.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(e = !1) {
              return this.normalize(this._locationStrategy.path(e));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(e, i = '') {
              return this.path() == this.normalize(e + ji(i));
            }
            normalize(e) {
              return n.stripTrailingSlash(
                (function DL(n, t) {
                  return n && new RegExp(`^${n}([/;?#]|$)`).test(t)
                    ? t.substring(n.length)
                    : t;
                })(this._basePath, sx(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && '/' !== e[0] && (e = '/' + e),
                this._locationStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = '', r = null) {
              this._locationStrategy.pushState(r, '', e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + ji(i)),
                  r
                );
            }
            replaceState(e, i = '', r = null) {
              this._locationStrategy.replaceState(r, '', e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + ji(i)),
                  r
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(e = 0) {
              this._locationStrategy.historyGo?.(e);
            }
            onUrlChange(e) {
              return (
                this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  })),
                () => {
                  const i = this._urlChangeListeners.indexOf(e);
                  this._urlChangeListeners.splice(i, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(e = '', i) {
              this._urlChangeListeners.forEach((r) => r(e, i));
            }
            subscribe(e, i, r) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: r,
              });
            }
          }
          return (
            (n.normalizeQueryParams = ji),
            (n.joinWithSlash = np),
            (n.stripTrailingSlash = rx),
            (n.ɵfac = function (e) {
              return new (e || n)(C(Qr));
            }),
            (n.ɵprov = I({
              token: n,
              factory: function () {
                return (function xL() {
                  return new vd(C(Qr));
                })();
              },
              providedIn: 'root',
            })),
            n
          );
        })();
      function sx(n) {
        return n.replace(/\/index.html$/, '');
      }
      function gx(n, t) {
        t = encodeURIComponent(t);
        for (const e of n.split(';')) {
          const i = e.indexOf('='),
            [r, o] = -1 == i ? [e, ''] : [e.slice(0, i), e.slice(i + 1)];
          if (r.trim() === t) return decodeURIComponent(o);
        }
        return null;
      }
      const hp = /\s+/,
        _x = [];
      let kd = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = r),
              (this._renderer = o),
              (this.initialClasses = _x),
              (this.stateMap = new Map());
          }
          set klass(e) {
            this.initialClasses = null != e ? e.trim().split(hp) : _x;
          }
          set ngClass(e) {
            this.rawClass = 'string' == typeof e ? e.trim().split(hp) : e;
          }
          ngDoCheck() {
            for (const i of this.initialClasses) this._updateState(i, !0);
            const e = this.rawClass;
            if (Array.isArray(e) || e instanceof Set)
              for (const i of e) this._updateState(i, !0);
            else if (null != e)
              for (const i of Object.keys(e))
                this._updateState(i, Boolean(e[i]));
            this._applyStateDiff();
          }
          _updateState(e, i) {
            const r = this.stateMap.get(e);
            void 0 !== r
              ? (r.enabled !== i && ((r.changed = !0), (r.enabled = i)),
                (r.touched = !0))
              : this.stateMap.set(e, { enabled: i, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const e of this.stateMap) {
              const i = e[0],
                r = e[1];
              r.changed
                ? (this._toggleClass(i, r.enabled), (r.changed = !1))
                : r.touched ||
                  (r.enabled && this._toggleClass(i, !1),
                  this.stateMap.delete(i)),
                (r.touched = !1);
            }
          }
          _toggleClass(e, i) {
            (e = e.trim()).length > 0 &&
              e.split(hp).forEach((r) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, r)
                  : this._renderer.removeClass(this._ngEl.nativeElement, r);
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(zi), m(Ts), m(j), m(Ni));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['', 'ngClass', '']],
            inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
            standalone: !0,
          })),
          n
        );
      })();
      class d2 {
        constructor(t, e, i, r) {
          (this.$implicit = t),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Ad = (() => {
        class n {
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(e, i, r) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = r),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              !this._differ &&
                e &&
                (this._differ = this._differs
                  .find(e)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = this._viewContainer;
            e.forEachOperation((r, o, a) => {
              if (null == r.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new d2(r.item, this._ngForOf, -1, -1),
                  null === a ? void 0 : a
                );
              else if (null == a) i.remove(null === o ? void 0 : o);
              else if (null !== o) {
                const s = i.get(o);
                i.move(s, a), yx(s, r);
              }
            });
            for (let r = 0, o = i.length; r < o; r++) {
              const s = i.get(r).context;
              (s.index = r), (s.count = o), (s.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((r) => {
              yx(i.get(r.currentIndex), r);
            });
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(ht), m(ut), m(zi));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: {
              ngForOf: 'ngForOf',
              ngForTrackBy: 'ngForTrackBy',
              ngForTemplate: 'ngForTemplate',
            },
            standalone: !0,
          })),
          n
        );
      })();
      function yx(n, t) {
        n.context.$implicit = t.item;
      }
      let An = (() => {
        class n {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new h2()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            wx('ngIfThen', e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            wx('ngIfElse', e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(ht), m(ut));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['', 'ngIf', '']],
            inputs: {
              ngIf: 'ngIf',
              ngIfThen: 'ngIfThen',
              ngIfElse: 'ngIfElse',
            },
            standalone: !0,
          })),
          n
        );
      })();
      class h2 {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function wx(n, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${n} must be a TemplateRef, but received '${Ue(t)}'.`
          );
      }
      class mp {
        constructor(t, e) {
          (this._viewContainerRef = t),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created
            ? this.create()
            : !t && this._created && this.destroy();
        }
      }
      let Os = (() => {
          class n {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews.length > 0 && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (const i of this._defaultViews) i.enforceState(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'ngSwitch', '']],
              inputs: { ngSwitch: 'ngSwitch' },
              standalone: !0,
            })),
            n
          );
        })(),
        fp = (() => {
          class n {
            constructor(e, i, r) {
              (this.ngSwitch = r), r._addCase(), (this._view = new mp(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ht), m(ut), m(Os, 9));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'ngSwitchCase', '']],
              inputs: { ngSwitchCase: 'ngSwitchCase' },
              standalone: !0,
            })),
            n
          );
        })(),
        Cx = (() => {
          class n {
            constructor(e, i, r) {
              r._addDefault(new mp(e, i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ht), m(ut), m(Os, 9));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'ngSwitchDefault', '']],
              standalone: !0,
            })),
            n
          );
        })(),
        pp = (() => {
          class n {
            constructor(e) {
              (this._viewContainerRef = e),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(e) {
              if (e.ngTemplateOutlet || e.ngTemplateOutletInjector) {
                const i = this._viewContainerRef;
                if (
                  (this._viewRef && i.remove(i.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: r,
                    ngTemplateOutletContext: o,
                    ngTemplateOutletInjector: a,
                  } = this;
                  this._viewRef = i.createEmbeddedView(
                    r,
                    o,
                    a ? { injector: a } : void 0
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  e.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ht));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'ngTemplateOutlet', '']],
              inputs: {
                ngTemplateOutletContext: 'ngTemplateOutletContext',
                ngTemplateOutlet: 'ngTemplateOutlet',
                ngTemplateOutletInjector: 'ngTemplateOutletInjector',
              },
              standalone: !0,
              features: [dt],
            })),
            n
          );
        })(),
        Tn = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({})),
            n
          );
        })();
      const Mx = 'browser';
      let z2 = (() => {
        class n {}
        return (
          (n.ɵprov = I({
            token: n,
            providedIn: 'root',
            factory: () => new j2(C(oe), window),
          })),
          n
        );
      })();
      class j2 {
        constructor(t, e) {
          (this.document = t), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(t) {
          this.supportsScrolling() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (!this.supportsScrolling()) return;
          const e = (function U2(n, t) {
            const e = n.getElementById(t) || n.getElementsByName(t)[0];
            if (e) return e;
            if (
              'function' == typeof n.createTreeWalker &&
              n.body &&
              (n.body.createShadowRoot || n.body.attachShadow)
            ) {
              const i = n.createTreeWalker(n.body, NodeFilter.SHOW_ELEMENT);
              let r = i.currentNode;
              for (; r; ) {
                const o = r.shadowRoot;
                if (o) {
                  const a =
                    o.getElementById(t) || o.querySelector(`[name="${t}"]`);
                  if (a) return a;
                }
                r = i.nextNode();
              }
            }
            return null;
          })(this.document, t);
          e && (this.scrollToElement(e), e.focus());
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            i = e.left + this.window.pageXOffset,
            r = e.top + this.window.pageYOffset,
            o = this.offset();
          this.window.scrollTo(i - o[0], r - o[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const t =
              Ex(this.window.history) ||
              Ex(Object.getPrototypeOf(this.window.history));
            return !(!t || (!t.writable && !t.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              'pageXOffset' in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function Ex(n) {
        return Object.getOwnPropertyDescriptor(n, 'scrollRestoration');
      }
      class Sx {}
      class gV extends vL {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class wp extends gV {
        static makeCurrent() {
          !(function _L(n) {
            ep || (ep = n);
          })(new wp());
        }
        onAndCancel(t, e, i) {
          return (
            t.addEventListener(e, i, !1),
            () => {
              t.removeEventListener(e, i, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          t.parentNode && t.parentNode.removeChild(t);
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return 'window' === e
            ? window
            : 'document' === e
            ? t
            : 'body' === e
            ? t.body
            : null;
        }
        getBaseHref(t) {
          const e = (function _V() {
            return (
              (Ps = Ps || document.querySelector('base')),
              Ps ? Ps.getAttribute('href') : null
            );
          })();
          return null == e
            ? null
            : (function vV(n) {
                (Id = Id || document.createElement('a')),
                  Id.setAttribute('href', n);
                const t = Id.pathname;
                return '/' === t.charAt(0) ? t : `/${t}`;
              })(e);
        }
        resetBaseElement() {
          Ps = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(t) {
          return gx(document.cookie, t);
        }
      }
      let Id,
        Ps = null;
      const Rx = new A('TRANSITION_ID'),
        yV = [
          {
            provide: ud,
            useFactory: function bV(n, t, e) {
              return () => {
                e.get(hd).donePromise.then(() => {
                  const i = gi(),
                    r = t.querySelectorAll(`style[ng-transition="${n}"]`);
                  for (let o = 0; o < r.length; o++) i.remove(r[o]);
                });
              };
            },
            deps: [Rx, oe, Dt],
            multi: !0,
          },
        ];
      let CV = (() => {
        class n {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Rd = new A('EventManagerPlugins');
      let Od = (() => {
        class n {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((r) => (r.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, r) {
            return this._findPluginFor(i).addEventListener(e, i, r);
          }
          addGlobalEventListener(e, i, r) {
            return this._findPluginFor(i).addGlobalEventListener(e, i, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const i = this._eventNameToPlugin.get(e);
            if (i) return i;
            const r = this._plugins;
            for (let o = 0; o < r.length; o++) {
              const a = r[o];
              if (a.supports(e)) return this._eventNameToPlugin.set(e, a), a;
            }
            throw new Error(`No event manager plugin found for event ${e}`);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(Rd), C(U));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Ox {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, i) {
          const r = gi().getGlobalEventTarget(this._doc, t);
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${e}`);
          return this.addEventListener(r, e, i);
        }
      }
      let Fx = (() => {
          class n {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const i = new Set();
              e.forEach((r) => {
                this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r));
              }),
                this.onStylesAdded(i);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ns = (() => {
          class n extends Fx {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Map()),
                this._hostNodes.set(e.head, []);
            }
            _addStylesToHost(e, i, r) {
              e.forEach((o) => {
                const a = this._doc.createElement('style');
                (a.textContent = o), r.push(i.appendChild(a));
              });
            }
            addHost(e) {
              const i = [];
              this._addStylesToHost(this._stylesSet, e, i),
                this._hostNodes.set(e, i);
            }
            removeHost(e) {
              const i = this._hostNodes.get(e);
              i && i.forEach(Px), this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((i, r) => {
                this._addStylesToHost(e, r, i);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((e) => e.forEach(Px));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(oe));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function Px(n) {
        gi().remove(n);
      }
      const Cp = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
          math: 'http://www.w3.org/1998/MathML/',
        },
        xp = /%COMP%/g;
      function Dp(n, t) {
        return t.flat(100).map((e) => e.replace(xp, n));
      }
      function Vx(n) {
        return (t) => {
          if ('__ngUnwrap__' === t) return n;
          !1 === n(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let Fd = (() => {
        class n {
          constructor(e, i, r) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = r),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Mp(e));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            switch (i.encapsulation) {
              case Hn.Emulated: {
                let r = this.rendererByCompId.get(i.id);
                return (
                  r ||
                    ((r = new kV(
                      this.eventManager,
                      this.sharedStylesHost,
                      i,
                      this.appId
                    )),
                    this.rendererByCompId.set(i.id, r)),
                  r.applyToHost(e),
                  r
                );
              }
              case Hn.ShadowDom:
                return new AV(this.eventManager, this.sharedStylesHost, e, i);
              default:
                if (!this.rendererByCompId.has(i.id)) {
                  const r = Dp(i.id, i.styles);
                  this.sharedStylesHost.addStyles(r),
                    this.rendererByCompId.set(i.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(Od), C(Ns), C(ia));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Mp {
        constructor(t) {
          (this.eventManager = t),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(t, e) {
          return e
            ? document.createElementNS(Cp[e] || e, t)
            : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          (Hx(t) ? t.content : t).appendChild(e);
        }
        insertBefore(t, e, i) {
          t && (Hx(t) ? t.content : t).insertBefore(e, i);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let i = 'string' == typeof t ? document.querySelector(t) : t;
          if (!i)
            throw new Error(`The selector "${t}" did not match any elements`);
          return e || (i.textContent = ''), i;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, i, r) {
          if (r) {
            e = r + ':' + e;
            const o = Cp[r];
            o ? t.setAttributeNS(o, e, i) : t.setAttribute(e, i);
          } else t.setAttribute(e, i);
        }
        removeAttribute(t, e, i) {
          if (i) {
            const r = Cp[i];
            r ? t.removeAttributeNS(r, e) : t.removeAttribute(`${i}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, i, r) {
          r & (Jt.DashCase | Jt.Important)
            ? t.style.setProperty(e, i, r & Jt.Important ? 'important' : '')
            : (t.style[e] = i);
        }
        removeStyle(t, e, i) {
          i & Jt.DashCase ? t.style.removeProperty(e) : (t.style[e] = '');
        }
        setProperty(t, e, i) {
          t[e] = i;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, i) {
          return 'string' == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, Vx(i))
            : this.eventManager.addEventListener(t, e, Vx(i));
        }
      }
      function Hx(n) {
        return 'TEMPLATE' === n.tagName && void 0 !== n.content;
      }
      class kV extends Mp {
        constructor(t, e, i, r) {
          super(t), (this.component = i);
          const o = Dp(r + '-' + i.id, i.styles);
          e.addStyles(o),
            (this.contentAttr = (function MV(n) {
              return '_ngcontent-%COMP%'.replace(xp, n);
            })(r + '-' + i.id)),
            (this.hostAttr = (function EV(n) {
              return '_nghost-%COMP%'.replace(xp, n);
            })(r + '-' + i.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, '');
        }
        createElement(t, e) {
          const i = super.createElement(t, e);
          return super.setAttribute(i, this.contentAttr, ''), i;
        }
      }
      class AV extends Mp {
        constructor(t, e, i, r) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: 'open' })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const o = Dp(r.id, r.styles);
          for (let a = 0; a < o.length; a++) {
            const s = document.createElement('style');
            (s.textContent = o[a]), this.shadowRoot.appendChild(s);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, i);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(t))
          );
        }
      }
      let TV = (() => {
        class n extends Ox {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, r) {
            return (
              e.addEventListener(i, r, !1),
              () => this.removeEventListener(e, i, r)
            );
          }
          removeEventListener(e, i, r) {
            return e.removeEventListener(i, r);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(oe));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const zx = ['alt', 'control', 'meta', 'shift'],
        IV = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        RV = {
          alt: (n) => n.altKey,
          control: (n) => n.ctrlKey,
          meta: (n) => n.metaKey,
          shift: (n) => n.shiftKey,
        };
      let OV = (() => {
        class n extends Ox {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != n.parseEventName(e);
          }
          addEventListener(e, i, r) {
            const o = n.parseEventName(i),
              a = n.eventCallback(o.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => gi().onAndCancel(e, o.domEventName, a));
          }
          static parseEventName(e) {
            const i = e.toLowerCase().split('.'),
              r = i.shift();
            if (0 === i.length || ('keydown' !== r && 'keyup' !== r))
              return null;
            const o = n._normalizeKey(i.pop());
            let a = '',
              s = i.indexOf('code');
            if (
              (s > -1 && (i.splice(s, 1), (a = 'code.')),
              zx.forEach((c) => {
                const d = i.indexOf(c);
                d > -1 && (i.splice(d, 1), (a += c + '.'));
              }),
              (a += o),
              0 != i.length || 0 === o.length)
            )
              return null;
            const l = {};
            return (l.domEventName = r), (l.fullKey = a), l;
          }
          static matchEventFullKeyCode(e, i) {
            let r = IV[e.key] || e.key,
              o = '';
            return (
              i.indexOf('code.') > -1 && ((r = e.code), (o = 'code.')),
              !(null == r || !r) &&
                ((r = r.toLowerCase()),
                ' ' === r ? (r = 'space') : '.' === r && (r = 'dot'),
                zx.forEach((a) => {
                  a !== r && (0, RV[a])(e) && (o += a + '.');
                }),
                (o += r),
                o === i)
            );
          }
          static eventCallback(e, i, r) {
            return (o) => {
              n.matchEventFullKeyCode(o, e) && r.runGuarded(() => i(o));
            };
          }
          static _normalizeKey(e) {
            return 'esc' === e ? 'escape' : e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(oe));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const LV = BC(fL, 'browser', [
          { provide: md, useValue: Mx },
          {
            provide: kC,
            useValue: function FV() {
              wp.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: oe,
            useFactory: function NV() {
              return (
                (function pI(n) {
                  Rm = n;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        $x = new A(''),
        Gx = [
          {
            provide: fd,
            useClass: class wV {
              addToWindow(t) {
                ($e.getAngularTestability = (i, r = !0) => {
                  const o = t.findTestabilityInTree(i, r);
                  if (null == o)
                    throw new Error('Could not find testability for element.');
                  return o;
                }),
                  ($e.getAllAngularTestabilities = () =>
                    t.getAllTestabilities()),
                  ($e.getAllAngularRootElements = () => t.getAllRootElements()),
                  $e.frameworkStabilizers || ($e.frameworkStabilizers = []),
                  $e.frameworkStabilizers.push((i) => {
                    const r = $e.getAllAngularTestabilities();
                    let o = r.length,
                      a = !1;
                    const s = function (l) {
                      (a = a || l), o--, 0 == o && i(a);
                    };
                    r.forEach(function (l) {
                      l.whenStable(s);
                    });
                  });
              }
              findTestabilityInTree(t, e, i) {
                return null == e
                  ? null
                  : t.getTestability(e) ??
                      (i
                        ? gi().isShadowRoot(e)
                          ? this.findTestabilityInTree(t, e.host, !0)
                          : this.findTestabilityInTree(t, e.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: PC, useClass: Gf, deps: [U, Wf, fd] },
          { provide: Gf, useClass: Gf, deps: [U, Wf, fd] },
        ],
        Wx = [
          { provide: Hm, useValue: 'root' },
          {
            provide: Li,
            useFactory: function PV() {
              return new Li();
            },
            deps: [],
          },
          { provide: Rd, useClass: TV, multi: !0, deps: [oe, U, md] },
          { provide: Rd, useClass: OV, multi: !0, deps: [oe] },
          { provide: Fd, useClass: Fd, deps: [Od, Ns, ia] },
          { provide: ms, useExisting: Fd },
          { provide: Fx, useExisting: Ns },
          { provide: Ns, useClass: Ns, deps: [oe] },
          { provide: Od, useClass: Od, deps: [Rd, U] },
          { provide: Sx, useClass: CV, deps: [] },
          [],
        ];
      let Sp = (() => {
          class n {
            constructor(e) {}
            static withServerTransition(e) {
              return {
                ngModule: n,
                providers: [
                  { provide: ia, useValue: e.appId },
                  { provide: Rx, useExisting: ia },
                  yV,
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C($x, 12));
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ providers: [...Wx, ...Gx], imports: [Tn, pL] })),
            n
          );
        })(),
        Yx = (() => {
          class n {
            constructor(e) {
              this._doc = e;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(e) {
              this._doc.title = e || '';
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(oe));
            }),
            (n.ɵprov = I({
              token: n,
              factory: function (e) {
                let i = null;
                return (
                  (i = e
                    ? new e()
                    : (function BV() {
                        return new Yx(C(oe));
                      })()),
                  i
                );
              },
              providedIn: 'root',
            })),
            n
          );
        })();
      typeof window < 'u' && window;
      let Ap = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({
              token: n,
              factory: function (e) {
                let i = null;
                return (i = e ? new (e || n)() : C(Xx)), i;
              },
              providedIn: 'root',
            })),
            n
          );
        })(),
        Xx = (() => {
          class n extends Ap {
            constructor(e) {
              super(), (this._doc = e);
            }
            sanitize(e, i) {
              if (null == i) return null;
              switch (e) {
                case Re.NONE:
                  return i;
                case Re.HTML:
                  return ai(i, 'HTML')
                    ? mn(i)
                    : gy(this._doc, String(i)).toString();
                case Re.STYLE:
                  return ai(i, 'Style') ? mn(i) : i;
                case Re.SCRIPT:
                  if (ai(i, 'Script')) return mn(i);
                  throw new Error('unsafe value used in a script context');
                case Re.URL:
                  return ai(i, 'URL') ? mn(i) : Vc(String(i));
                case Re.RESOURCE_URL:
                  if (ai(i, 'ResourceURL')) return mn(i);
                  throw new Error(
                    `unsafe value used in a resource URL context (see ${oc})`
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${e} (see ${oc})`
                  );
              }
            }
            bypassSecurityTrustHtml(e) {
              return (function CI(n) {
                return new gI(n);
              })(e);
            }
            bypassSecurityTrustStyle(e) {
              return (function xI(n) {
                return new _I(n);
              })(e);
            }
            bypassSecurityTrustScript(e) {
              return (function DI(n) {
                return new vI(n);
              })(e);
            }
            bypassSecurityTrustUrl(e) {
              return (function MI(n) {
                return new bI(n);
              })(e);
            }
            bypassSecurityTrustResourceUrl(e) {
              return (function EI(n) {
                return new yI(n);
              })(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(oe));
            }),
            (n.ɵprov = I({
              token: n,
              factory: function (e) {
                let i = null;
                return (
                  (i = e
                    ? new e()
                    : (function WV(n) {
                        return new Xx(n.get(oe));
                      })(C(Dt))),
                  i
                );
              },
              providedIn: 'root',
            })),
            n
          );
        })();
      function H(...n) {
        return at(n, $a(n));
      }
      class Lt extends z {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return !e.closed && t.next(this._value), e;
        }
        getValue() {
          const { hasError: t, thrownError: e, _value: i } = this;
          if (t) throw e;
          return this._throwIfClosed(), i;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      const Pd = ja(
          (n) =>
            function () {
              n(this),
                (this.name = 'EmptyError'),
                (this.message = 'no elements in sequence');
            }
        ),
        { isArray: YV } = Array,
        { getPrototypeOf: qV, prototype: KV, keys: XV } = Object;
      function Zx(n) {
        if (1 === n.length) {
          const t = n[0];
          if (YV(t)) return { args: t, keys: null };
          if (
            (function ZV(n) {
              return n && 'object' == typeof n && qV(n) === KV;
            })(t)
          ) {
            const e = XV(t);
            return { args: e.map((i) => t[i]), keys: e };
          }
        }
        return { args: n, keys: null };
      }
      const { isArray: QV } = Array;
      function Tp(n) {
        return q((t) =>
          (function JV(n, t) {
            return QV(t) ? n(...t) : n(t);
          })(n, t)
        );
      }
      function Qx(n, t) {
        return n.reduce((e, i, r) => ((e[i] = t[r]), e), {});
      }
      function aa(...n) {
        const t = $a(n),
          e = Cv(n),
          { args: i, keys: r } = Zx(n);
        if (0 === i.length) return at([], t);
        const o = new Fe(
          (function eB(n, t, e = or) {
            return (i) => {
              Jx(
                t,
                () => {
                  const { length: r } = n,
                    o = new Array(r);
                  let a = r,
                    s = r;
                  for (let l = 0; l < r; l++)
                    Jx(
                      t,
                      () => {
                        const c = at(n[l], t);
                        let d = !1;
                        c.subscribe(
                          qe(
                            i,
                            (u) => {
                              (o[l] = u),
                                d || ((d = !0), s--),
                                s || i.next(e(o.slice()));
                            },
                            () => {
                              --a || i.complete();
                            }
                          )
                        );
                      },
                      i
                    );
                },
                i
              );
            };
          })(i, t, r ? (a) => Qx(r, a) : or)
        );
        return e ? o.pipe(Tp(e)) : o;
      }
      function Jx(n, t, e) {
        n ? Ai(e, n, t) : t();
      }
      function Ls(...n) {
        return (function tB() {
          return bo(1);
        })()(at(n, $a(n)));
      }
      function Ip(n) {
        return new Fe((t) => {
          It(n()).subscribe(t);
        });
      }
      function sa(n, t) {
        const e = Ce(n) ? n : () => n,
          i = (r) => r.error(e());
        return new Fe(t ? (r) => t.schedule(i, 0, r) : i);
      }
      function Rp() {
        return Je((n, t) => {
          let e = null;
          n._refCount++;
          const i = qe(t, void 0, void 0, void 0, () => {
            if (!n || n._refCount <= 0 || 0 < --n._refCount)
              return void (e = null);
            const r = n._connection,
              o = e;
            (e = null),
              r && (!o || r === o) && r.unsubscribe(),
              t.unsubscribe();
          });
          n.subscribe(i), i.closed || (e = n.connect());
        });
      }
      class Op extends Fe {
        constructor(t, e) {
          super(),
            (this.source = t),
            (this.subjectFactory = e),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            lv(t) && (this.lift = t.lift);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (
            (!t || t.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: t } = this;
          (this._subject = this._connection = null), t?.unsubscribe();
        }
        connect() {
          let t = this._connection;
          if (!t) {
            t = this._connection = new Oe();
            const e = this.getSubject();
            t.add(
              this.source.subscribe(
                qe(
                  e,
                  void 0,
                  () => {
                    this._teardown(), e.complete();
                  },
                  (i) => {
                    this._teardown(), e.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              t.closed && ((this._connection = null), (t = Oe.EMPTY));
          }
          return t;
        }
        refCount() {
          return Rp()(this);
        }
      }
      function nn(n, t) {
        return Je((e, i) => {
          let r = null,
            o = 0,
            a = !1;
          const s = () => a && !r && i.complete();
          e.subscribe(
            qe(
              i,
              (l) => {
                r?.unsubscribe();
                let c = 0;
                const d = o++;
                It(n(l, d)).subscribe(
                  (r = qe(
                    i,
                    (u) => i.next(t ? t(l, u, d, c++) : u),
                    () => {
                      (r = null), s();
                    }
                  ))
                );
              },
              () => {
                (a = !0), s();
              }
            )
          );
        });
      }
      function ot(n) {
        return n <= 0
          ? () => Vn
          : Je((t, e) => {
              let i = 0;
              t.subscribe(
                qe(e, (r) => {
                  ++i <= n && (e.next(r), n <= i && e.complete());
                })
              );
            });
      }
      function _i(...n) {
        const t = $a(n);
        return Je((e, i) => {
          (t ? Ls(n, e, t) : Ls(n, e)).subscribe(i);
        });
      }
      function Qe(n, t) {
        return Je((e, i) => {
          let r = 0;
          e.subscribe(qe(i, (o) => n.call(t, o, r++) && i.next(o)));
        });
      }
      function Nd(n) {
        return Je((t, e) => {
          let i = !1;
          t.subscribe(
            qe(
              e,
              (r) => {
                (i = !0), e.next(r);
              },
              () => {
                i || e.next(n), e.complete();
              }
            )
          );
        });
      }
      function eD(n = nB) {
        return Je((t, e) => {
          let i = !1;
          t.subscribe(
            qe(
              e,
              (r) => {
                (i = !0), e.next(r);
              },
              () => (i ? e.complete() : e.error(n()))
            )
          );
        });
      }
      function nB() {
        return new Pd();
      }
      function mr(n, t) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? Qe((r, o) => n(r, o, i)) : or,
            ot(1),
            e ? Nd(t) : eD(() => new Pd())
          );
      }
      function fr(n, t) {
        return Ce(t) ? yt(n, t, 1) : yt(n, 1);
      }
      function _t(n, t, e) {
        const i = Ce(n) || t || e ? { next: n, error: t, complete: e } : n;
        return i
          ? Je((r, o) => {
              var a;
              null === (a = i.subscribe) || void 0 === a || a.call(i);
              let s = !0;
              r.subscribe(
                qe(
                  o,
                  (l) => {
                    var c;
                    null === (c = i.next) || void 0 === c || c.call(i, l),
                      o.next(l);
                  },
                  () => {
                    var l;
                    (s = !1),
                      null === (l = i.complete) || void 0 === l || l.call(i),
                      o.complete();
                  },
                  (l) => {
                    var c;
                    (s = !1),
                      null === (c = i.error) || void 0 === c || c.call(i, l),
                      o.error(l);
                  },
                  () => {
                    var l, c;
                    s &&
                      (null === (l = i.unsubscribe) ||
                        void 0 === l ||
                        l.call(i)),
                      null === (c = i.finalize) || void 0 === c || c.call(i);
                  }
                )
              );
            })
          : or;
      }
      function $i(n) {
        return Je((t, e) => {
          let o,
            i = null,
            r = !1;
          (i = t.subscribe(
            qe(e, void 0, void 0, (a) => {
              (o = It(n(a, $i(n)(t)))),
                i ? (i.unsubscribe(), (i = null), o.subscribe(e)) : (r = !0);
            })
          )),
            r && (i.unsubscribe(), (i = null), o.subscribe(e));
        });
      }
      function iB(n, t, e, i, r) {
        return (o, a) => {
          let s = e,
            l = t,
            c = 0;
          o.subscribe(
            qe(
              a,
              (d) => {
                const u = c++;
                (l = s ? n(l, d, u) : ((s = !0), d)), i && a.next(l);
              },
              r &&
                (() => {
                  s && a.next(l), a.complete();
                })
            )
          );
        };
      }
      function tD(n, t) {
        return Je(iB(n, t, arguments.length >= 2, !0));
      }
      function Fp(n) {
        return n <= 0
          ? () => Vn
          : Je((t, e) => {
              let i = [];
              t.subscribe(
                qe(
                  e,
                  (r) => {
                    i.push(r), n < i.length && i.shift();
                  },
                  () => {
                    for (const r of i) e.next(r);
                    e.complete();
                  },
                  void 0,
                  () => {
                    i = null;
                  }
                )
              );
            });
      }
      function nD(n, t) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? Qe((r, o) => n(r, o, i)) : or,
            Fp(1),
            e ? Nd(t) : eD(() => new Pd())
          );
      }
      function iD(n, t = !1) {
        return Je((e, i) => {
          let r = 0;
          e.subscribe(
            qe(i, (o) => {
              const a = n(o, r++);
              (a || t) && i.next(o), !a && i.complete();
            })
          );
        });
      }
      function Ld(n) {
        return q(() => n);
      }
      function Vd(n) {
        return Je((t, e) => {
          try {
            t.subscribe(e);
          } finally {
            e.add(n);
          }
        });
      }
      const ue = 'primary',
        Vs = Symbol('RouteTitle');
      class rB {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return Object.prototype.hasOwnProperty.call(this.params, t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function la(n) {
        return new rB(n);
      }
      function oB(n, t, e) {
        const i = e.path.split('/');
        if (
          i.length > n.length ||
          ('full' === e.pathMatch && (t.hasChildren() || i.length < n.length))
        )
          return null;
        const r = {};
        for (let o = 0; o < i.length; o++) {
          const a = i[o],
            s = n[o];
          if (a.startsWith(':')) r[a.substring(1)] = s;
          else if (a !== s.path) return null;
        }
        return { consumed: n.slice(0, i.length), posParams: r };
      }
      function vi(n, t) {
        const e = n ? Object.keys(n) : void 0,
          i = t ? Object.keys(t) : void 0;
        if (!e || !i || e.length != i.length) return !1;
        let r;
        for (let o = 0; o < e.length; o++)
          if (((r = e[o]), !rD(n[r], t[r]))) return !1;
        return !0;
      }
      function rD(n, t) {
        if (Array.isArray(n) && Array.isArray(t)) {
          if (n.length !== t.length) return !1;
          const e = [...n].sort(),
            i = [...t].sort();
          return e.every((r, o) => i[o] === r);
        }
        return n === t;
      }
      function oD(n) {
        return Array.prototype.concat.apply([], n);
      }
      function aD(n) {
        return n.length > 0 ? n[n.length - 1] : null;
      }
      function kt(n, t) {
        for (const e in n) n.hasOwnProperty(e) && t(n[e], e);
      }
      function pr(n) {
        return pf(n) ? n : vs(n) ? at(Promise.resolve(n)) : H(n);
      }
      const Bd = !1,
        sB = {
          exact: function cD(n, t, e) {
            if (
              !eo(n.segments, t.segments) ||
              !Hd(n.segments, t.segments, e) ||
              n.numberOfChildren !== t.numberOfChildren
            )
              return !1;
            for (const i in t.children)
              if (!n.children[i] || !cD(n.children[i], t.children[i], e))
                return !1;
            return !0;
          },
          subset: dD,
        },
        sD = {
          exact: function lB(n, t) {
            return vi(n, t);
          },
          subset: function cB(n, t) {
            return (
              Object.keys(t).length <= Object.keys(n).length &&
              Object.keys(t).every((e) => rD(n[e], t[e]))
            );
          },
          ignored: () => !0,
        };
      function lD(n, t, e) {
        return (
          sB[e.paths](n.root, t.root, e.matrixParams) &&
          sD[e.queryParams](n.queryParams, t.queryParams) &&
          !('exact' === e.fragment && n.fragment !== t.fragment)
        );
      }
      function dD(n, t, e) {
        return uD(n, t, t.segments, e);
      }
      function uD(n, t, e, i) {
        if (n.segments.length > e.length) {
          const r = n.segments.slice(0, e.length);
          return !(!eo(r, e) || t.hasChildren() || !Hd(r, e, i));
        }
        if (n.segments.length === e.length) {
          if (!eo(n.segments, e) || !Hd(n.segments, e, i)) return !1;
          for (const r in t.children)
            if (!n.children[r] || !dD(n.children[r], t.children[r], i))
              return !1;
          return !0;
        }
        {
          const r = e.slice(0, n.segments.length),
            o = e.slice(n.segments.length);
          return (
            !!(eo(n.segments, r) && Hd(n.segments, r, i) && n.children[ue]) &&
            uD(n.children[ue], t, o, i)
          );
        }
      }
      function Hd(n, t, e) {
        return t.every((i, r) => sD[e](n[r].parameters, i.parameters));
      }
      class Jr {
        constructor(t = new ye([], {}), e = {}, i = null) {
          (this.root = t), (this.queryParams = e), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = la(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return hB.serialize(this);
        }
      }
      class ye {
        constructor(t, e) {
          (this.segments = t),
            (this.children = e),
            (this.parent = null),
            kt(e, (i, r) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return zd(this);
        }
      }
      class Bs {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = la(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return fD(this);
        }
      }
      function eo(n, t) {
        return n.length === t.length && n.every((e, i) => e.path === t[i].path);
      }
      let Hs = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({
            token: n,
            factory: function () {
              return new Pp();
            },
            providedIn: 'root',
          })),
          n
        );
      })();
      class Pp {
        parse(t) {
          const e = new wB(t);
          return new Jr(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(t) {
          const e = `/${zs(t.root, !0)}`,
            i = (function pB(n) {
              const t = Object.keys(n)
                .map((e) => {
                  const i = n[e];
                  return Array.isArray(i)
                    ? i.map((r) => `${jd(e)}=${jd(r)}`).join('&')
                    : `${jd(e)}=${jd(i)}`;
                })
                .filter((e) => !!e);
              return t.length ? `?${t.join('&')}` : '';
            })(t.queryParams);
          return `${e}${i}${
            'string' == typeof t.fragment
              ? `#${(function mB(n) {
                  return encodeURI(n);
                })(t.fragment)}`
              : ''
          }`;
        }
      }
      const hB = new Pp();
      function zd(n) {
        return n.segments.map((t) => fD(t)).join('/');
      }
      function zs(n, t) {
        if (!n.hasChildren()) return zd(n);
        if (t) {
          const e = n.children[ue] ? zs(n.children[ue], !1) : '',
            i = [];
          return (
            kt(n.children, (r, o) => {
              o !== ue && i.push(`${o}:${zs(r, !1)}`);
            }),
            i.length > 0 ? `${e}(${i.join('//')})` : e
          );
        }
        {
          const e = (function uB(n, t) {
            let e = [];
            return (
              kt(n.children, (i, r) => {
                r === ue && (e = e.concat(t(i, r)));
              }),
              kt(n.children, (i, r) => {
                r !== ue && (e = e.concat(t(i, r)));
              }),
              e
            );
          })(n, (i, r) =>
            r === ue ? [zs(n.children[ue], !1)] : [`${r}:${zs(i, !1)}`]
          );
          return 1 === Object.keys(n.children).length && null != n.children[ue]
            ? `${zd(n)}/${e[0]}`
            : `${zd(n)}/(${e.join('//')})`;
        }
      }
      function hD(n) {
        return encodeURIComponent(n)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function jd(n) {
        return hD(n).replace(/%3B/gi, ';');
      }
      function Np(n) {
        return hD(n)
          .replace(/\(/g, '%28')
          .replace(/\)/g, '%29')
          .replace(/%26/gi, '&');
      }
      function Ud(n) {
        return decodeURIComponent(n);
      }
      function mD(n) {
        return Ud(n.replace(/\+/g, '%20'));
      }
      function fD(n) {
        return `${Np(n.path)}${(function fB(n) {
          return Object.keys(n)
            .map((t) => `;${Np(t)}=${Np(n[t])}`)
            .join('');
        })(n.parameters)}`;
      }
      const gB = /^[^\/()?;=#]+/;
      function $d(n) {
        const t = n.match(gB);
        return t ? t[0] : '';
      }
      const _B = /^[^=?&#]+/,
        bB = /^[^&#]+/;
      class wB {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining ||
            this.peekStartsWith('?') ||
            this.peekStartsWith('#')
              ? new ye([], {})
              : new ye([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional('&'));
          return t;
        }
        parseFragment() {
          return this.consumeOptional('#')
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const t = [];
          for (
            this.peekStartsWith('(') || t.push(this.parseSegment());
            this.peekStartsWith('/') &&
            !this.peekStartsWith('//') &&
            !this.peekStartsWith('/(');

          )
            this.capture('/'), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith('/(') &&
            (this.capture('/'), (e = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith('(') && (i = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) &&
              (i[ue] = new ye(t, e)),
            i
          );
        }
        parseSegment() {
          const t = $d(this.remaining);
          if ('' === t && this.peekStartsWith(';')) throw new k(4009, Bd);
          return this.capture(t), new Bs(Ud(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(';'); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = $d(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = '';
          if (this.consumeOptional('=')) {
            const r = $d(this.remaining);
            r && ((i = r), this.capture(i));
          }
          t[Ud(e)] = Ud(i);
        }
        parseQueryParam(t) {
          const e = (function vB(n) {
            const t = n.match(_B);
            return t ? t[0] : '';
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = '';
          if (this.consumeOptional('=')) {
            const a = (function yB(n) {
              const t = n.match(bB);
              return t ? t[0] : '';
            })(this.remaining);
            a && ((i = a), this.capture(i));
          }
          const r = mD(e),
            o = mD(i);
          if (t.hasOwnProperty(r)) {
            let a = t[r];
            Array.isArray(a) || ((a = [a]), (t[r] = a)), a.push(o);
          } else t[r] = o;
        }
        parseParens(t) {
          const e = {};
          for (
            this.capture('(');
            !this.consumeOptional(')') && this.remaining.length > 0;

          ) {
            const i = $d(this.remaining),
              r = this.remaining[i.length];
            if ('/' !== r && ')' !== r && ';' !== r) throw new k(4010, Bd);
            let o;
            i.indexOf(':') > -1
              ? ((o = i.slice(0, i.indexOf(':'))),
                this.capture(o),
                this.capture(':'))
              : t && (o = ue);
            const a = this.parseChildren();
            (e[o] = 1 === Object.keys(a).length ? a[ue] : new ye([], a)),
              this.consumeOptional('//');
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return (
            !!this.peekStartsWith(t) &&
            ((this.remaining = this.remaining.substring(t.length)), !0)
          );
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new k(4011, Bd);
        }
      }
      function Lp(n) {
        return n.segments.length > 0 ? new ye([], { [ue]: n }) : n;
      }
      function Gd(n) {
        const t = {};
        for (const i of Object.keys(n.children)) {
          const o = Gd(n.children[i]);
          (o.segments.length > 0 || o.hasChildren()) && (t[i] = o);
        }
        return (function CB(n) {
          if (1 === n.numberOfChildren && n.children[ue]) {
            const t = n.children[ue];
            return new ye(n.segments.concat(t.segments), t.children);
          }
          return n;
        })(new ye(n.segments, t));
      }
      function to(n) {
        return n instanceof Jr;
      }
      function MB(n, t, e, i, r) {
        if (0 === e.length) return ca(t.root, t.root, t.root, i, r);
        const o = (function _D(n) {
          if ('string' == typeof n[0] && 1 === n.length && '/' === n[0])
            return new gD(!0, 0, n);
          let t = 0,
            e = !1;
          const i = n.reduce((r, o, a) => {
            if ('object' == typeof o && null != o) {
              if (o.outlets) {
                const s = {};
                return (
                  kt(o.outlets, (l, c) => {
                    s[c] = 'string' == typeof l ? l.split('/') : l;
                  }),
                  [...r, { outlets: s }]
                );
              }
              if (o.segmentPath) return [...r, o.segmentPath];
            }
            return 'string' != typeof o
              ? [...r, o]
              : 0 === a
              ? (o.split('/').forEach((s, l) => {
                  (0 == l && '.' === s) ||
                    (0 == l && '' === s
                      ? (e = !0)
                      : '..' === s
                      ? t++
                      : '' != s && r.push(s));
                }),
                r)
              : [...r, o];
          }, []);
          return new gD(e, t, i);
        })(e);
        return o.toRoot()
          ? ca(t.root, t.root, new ye([], {}), i, r)
          : (function a(l) {
              const c = (function SB(n, t, e, i) {
                  if (n.isAbsolute) return new da(t.root, !0, 0);
                  if (-1 === i) return new da(e, e === t.root, 0);
                  return (function vD(n, t, e) {
                    let i = n,
                      r = t,
                      o = e;
                    for (; o > r; ) {
                      if (((o -= r), (i = i.parent), !i)) throw new k(4005, !1);
                      r = i.segments.length;
                    }
                    return new da(i, !1, r - o);
                  })(e, i + (js(n.commands[0]) ? 0 : 1), n.numberOfDoubleDots);
                })(o, t, n.snapshot?._urlSegment, l),
                d = c.processChildren
                  ? ua(c.segmentGroup, c.index, o.commands)
                  : Bp(c.segmentGroup, c.index, o.commands);
              return ca(t.root, c.segmentGroup, d, i, r);
            })(n.snapshot?._lastPathIndex);
      }
      function js(n) {
        return (
          'object' == typeof n && null != n && !n.outlets && !n.segmentPath
        );
      }
      function Us(n) {
        return 'object' == typeof n && null != n && n.outlets;
      }
      function ca(n, t, e, i, r) {
        let a,
          o = {};
        i &&
          kt(i, (l, c) => {
            o[c] = Array.isArray(l) ? l.map((d) => `${d}`) : `${l}`;
          }),
          (a = n === t ? e : pD(n, t, e));
        const s = Lp(Gd(a));
        return new Jr(s, o, r);
      }
      function pD(n, t, e) {
        const i = {};
        return (
          kt(n.children, (r, o) => {
            i[o] = r === t ? e : pD(r, t, e);
          }),
          new ye(n.segments, i)
        );
      }
      class gD {
        constructor(t, e, i) {
          if (
            ((this.isAbsolute = t),
            (this.numberOfDoubleDots = e),
            (this.commands = i),
            t && i.length > 0 && js(i[0]))
          )
            throw new k(4003, !1);
          const r = i.find(Us);
          if (r && r !== aD(i)) throw new k(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            '/' == this.commands[0]
          );
        }
      }
      class da {
        constructor(t, e, i) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = i);
        }
      }
      function Bp(n, t, e) {
        if (
          (n || (n = new ye([], {})),
          0 === n.segments.length && n.hasChildren())
        )
          return ua(n, t, e);
        const i = (function AB(n, t, e) {
            let i = 0,
              r = t;
            const o = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < n.segments.length; ) {
              if (i >= e.length) return o;
              const a = n.segments[r],
                s = e[i];
              if (Us(s)) break;
              const l = `${s}`,
                c = i < e.length - 1 ? e[i + 1] : null;
              if (r > 0 && void 0 === l) break;
              if (l && c && 'object' == typeof c && void 0 === c.outlets) {
                if (!yD(l, c, a)) return o;
                i += 2;
              } else {
                if (!yD(l, {}, a)) return o;
                i++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: i };
          })(n, t, e),
          r = e.slice(i.commandIndex);
        if (i.match && i.pathIndex < n.segments.length) {
          const o = new ye(n.segments.slice(0, i.pathIndex), {});
          return (
            (o.children[ue] = new ye(
              n.segments.slice(i.pathIndex),
              n.children
            )),
            ua(o, 0, r)
          );
        }
        return i.match && 0 === r.length
          ? new ye(n.segments, {})
          : i.match && !n.hasChildren()
          ? Hp(n, t, e)
          : i.match
          ? ua(n, 0, r)
          : Hp(n, t, e);
      }
      function ua(n, t, e) {
        if (0 === e.length) return new ye(n.segments, {});
        {
          const i = (function kB(n) {
              return Us(n[0]) ? n[0].outlets : { [ue]: n };
            })(e),
            r = {};
          return !i[ue] &&
            n.children[ue] &&
            1 === n.numberOfChildren &&
            0 === n.children[ue].segments.length
            ? ua(n.children[ue], t, e)
            : (kt(i, (o, a) => {
                'string' == typeof o && (o = [o]),
                  null !== o && (r[a] = Bp(n.children[a], t, o));
              }),
              kt(n.children, (o, a) => {
                void 0 === i[a] && (r[a] = o);
              }),
              new ye(n.segments, r));
        }
      }
      function Hp(n, t, e) {
        const i = n.segments.slice(0, t);
        let r = 0;
        for (; r < e.length; ) {
          const o = e[r];
          if (Us(o)) {
            const l = TB(o.outlets);
            return new ye(i, l);
          }
          if (0 === r && js(e[0])) {
            i.push(new Bs(n.segments[t].path, bD(e[0]))), r++;
            continue;
          }
          const a = Us(o) ? o.outlets[ue] : `${o}`,
            s = r < e.length - 1 ? e[r + 1] : null;
          a && s && js(s)
            ? (i.push(new Bs(a, bD(s))), (r += 2))
            : (i.push(new Bs(a, {})), r++);
        }
        return new ye(i, {});
      }
      function TB(n) {
        const t = {};
        return (
          kt(n, (e, i) => {
            'string' == typeof e && (e = [e]),
              null !== e && (t[i] = Hp(new ye([], {}), 0, e));
          }),
          t
        );
      }
      function bD(n) {
        const t = {};
        return kt(n, (e, i) => (t[i] = `${e}`)), t;
      }
      function yD(n, t, e) {
        return n == e.path && vi(t, e.parameters);
      }
      const $s = 'imperative';
      class bi {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class zp extends bi {
        constructor(t, e, i = 'imperative', r = null) {
          super(t, e),
            (this.type = 0),
            (this.navigationTrigger = i),
            (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class no extends bi {
        constructor(t, e, i) {
          super(t, e), (this.urlAfterRedirects = i), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class Wd extends bi {
        constructor(t, e, i, r) {
          super(t, e), (this.reason = i), (this.code = r), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class wD extends bi {
        constructor(t, e, i, r) {
          super(t, e), (this.reason = i), (this.code = r), (this.type = 16);
        }
      }
      class CD extends bi {
        constructor(t, e, i, r) {
          super(t, e), (this.error = i), (this.target = r), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class IB extends bi {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class RB extends bi {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class OB extends bi {
        constructor(t, e, i, r, o) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.shouldActivate = o),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class FB extends bi {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class PB extends bi {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class NB {
        constructor(t) {
          (this.route = t), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class LB {
        constructor(t) {
          (this.route = t), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class VB {
        constructor(t) {
          (this.snapshot = t), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class BB {
        constructor(t) {
          (this.snapshot = t), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class HB {
        constructor(t) {
          (this.snapshot = t), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class zB {
        constructor(t) {
          (this.snapshot = t), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''
          }')`;
        }
      }
      class xD {
        constructor(t, e, i) {
          (this.routerEvent = t),
            (this.position = e),
            (this.anchor = i),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let UB = (() => {
          class n {
            createUrlTree(e, i, r, o, a, s) {
              return MB(e || i.root, r, o, a, s);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        $B = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({
              token: n,
              factory: function (t) {
                return UB.ɵfac(t);
              },
              providedIn: 'root',
            })),
            n
          );
        })();
      class DD {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = jp(t, this._root);
          return e ? e.children.map((i) => i.value) : [];
        }
        firstChild(t) {
          const e = jp(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = Up(t, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((r) => r.value)
                .filter((r) => r !== t);
        }
        pathFromRoot(t) {
          return Up(t, this._root).map((e) => e.value);
        }
      }
      function jp(n, t) {
        if (n === t.value) return t;
        for (const e of t.children) {
          const i = jp(n, e);
          if (i) return i;
        }
        return null;
      }
      function Up(n, t) {
        if (n === t.value) return [t];
        for (const e of t.children) {
          const i = Up(n, e);
          if (i.length) return i.unshift(t), i;
        }
        return [];
      }
      class Gi {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function ha(n) {
        const t = {};
        return n && n.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class MD extends DD {
        constructor(t, e) {
          super(t), (this.snapshot = e), $p(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function ED(n, t) {
        const e = (function GB(n, t) {
            const a = new Yd([], {}, {}, '', {}, ue, t, null, n.root, -1, {});
            return new kD('', new Gi(a, []));
          })(n, t),
          i = new Lt([new Bs('', {})]),
          r = new Lt({}),
          o = new Lt({}),
          a = new Lt({}),
          s = new Lt(''),
          l = new In(i, r, a, s, o, ue, t, e.root);
        return (l.snapshot = e.root), new MD(new Gi(l, []), e);
      }
      class In {
        constructor(t, e, i, r, o, a, s, l) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = o),
            (this.outlet = a),
            (this.component = s),
            (this.title = this.data?.pipe(q((c) => c[Vs])) ?? H(void 0)),
            (this._futureSnapshot = l);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(q((t) => la(t)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(q((t) => la(t)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function SD(n, t = 'emptyOnly') {
        const e = n.pathFromRoot;
        let i = 0;
        if ('always' !== t)
          for (i = e.length - 1; i >= 1; ) {
            const r = e[i],
              o = e[i - 1];
            if (r.routeConfig && '' === r.routeConfig.path) i--;
            else {
              if (o.component) break;
              i--;
            }
          }
        return (function WB(n) {
          return n.reduce(
            (t, e) => ({
              params: { ...t.params, ...e.params },
              data: { ...t.data, ...e.data },
              resolve: {
                ...e.data,
                ...t.resolve,
                ...e.routeConfig?.data,
                ...e._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(i));
      }
      class Yd {
        get title() {
          return this.data?.[Vs];
        }
        constructor(t, e, i, r, o, a, s, l, c, d, u) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = o),
            (this.outlet = a),
            (this.component = s),
            (this.routeConfig = l),
            (this._urlSegment = c),
            (this._lastPathIndex = d),
            (this._resolve = u);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = la(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = la(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class kD extends DD {
        constructor(t, e) {
          super(e), (this.url = t), $p(this, e);
        }
        toString() {
          return AD(this._root);
        }
      }
      function $p(n, t) {
        (t.value._routerState = n), t.children.forEach((e) => $p(n, e));
      }
      function AD(n) {
        const t =
          n.children.length > 0 ? ` { ${n.children.map(AD).join(', ')} } ` : '';
        return `${n.value}${t}`;
      }
      function Gp(n) {
        if (n.snapshot) {
          const t = n.snapshot,
            e = n._futureSnapshot;
          (n.snapshot = e),
            vi(t.queryParams, e.queryParams) ||
              n.queryParams.next(e.queryParams),
            t.fragment !== e.fragment && n.fragment.next(e.fragment),
            vi(t.params, e.params) || n.params.next(e.params),
            (function aB(n, t) {
              if (n.length !== t.length) return !1;
              for (let e = 0; e < n.length; ++e) if (!vi(n[e], t[e])) return !1;
              return !0;
            })(t.url, e.url) || n.url.next(e.url),
            vi(t.data, e.data) || n.data.next(e.data);
        } else
          (n.snapshot = n._futureSnapshot), n.data.next(n._futureSnapshot.data);
      }
      function Wp(n, t) {
        const e =
          vi(n.params, t.params) &&
          (function dB(n, t) {
            return (
              eo(n, t) && n.every((e, i) => vi(e.parameters, t[i].parameters))
            );
          })(n.url, t.url);
        return (
          e &&
          !(!n.parent != !t.parent) &&
          (!n.parent || Wp(n.parent, t.parent))
        );
      }
      function Gs(n, t, e) {
        if (e && n.shouldReuseRoute(t.value, e.value.snapshot)) {
          const i = e.value;
          i._futureSnapshot = t.value;
          const r = (function qB(n, t, e) {
            return t.children.map((i) => {
              for (const r of e.children)
                if (n.shouldReuseRoute(i.value, r.value.snapshot))
                  return Gs(n, i, r);
              return Gs(n, i);
            });
          })(n, t, e);
          return new Gi(i, r);
        }
        {
          if (n.shouldAttach(t.value)) {
            const o = n.retrieve(t.value);
            if (null !== o) {
              const a = o.route;
              return (
                (a.value._futureSnapshot = t.value),
                (a.children = t.children.map((s) => Gs(n, s))),
                a
              );
            }
          }
          const i = (function KB(n) {
              return new In(
                new Lt(n.url),
                new Lt(n.params),
                new Lt(n.queryParams),
                new Lt(n.fragment),
                new Lt(n.data),
                n.outlet,
                n.component,
                n
              );
            })(t.value),
            r = t.children.map((o) => Gs(n, o));
          return new Gi(i, r);
        }
      }
      const Yp = 'ngNavigationCancelingError';
      function TD(n, t) {
        const { redirectTo: e, navigationBehaviorOptions: i } = to(t)
            ? { redirectTo: t, navigationBehaviorOptions: void 0 }
            : t,
          r = ID(!1, 0, t);
        return (r.url = e), (r.navigationBehaviorOptions = i), r;
      }
      function ID(n, t, e) {
        const i = new Error('NavigationCancelingError: ' + (n || ''));
        return (i[Yp] = !0), (i.cancellationCode = t), e && (i.url = e), i;
      }
      function RD(n) {
        return OD(n) && to(n.url);
      }
      function OD(n) {
        return n && n[Yp];
      }
      class XB {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new Ws()),
            (this.attachRef = null);
        }
      }
      let Ws = (() => {
        class n {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(e, i) {
            const r = this.getOrCreateContext(e);
            (r.outlet = i), this.contexts.set(e, r);
          }
          onChildOutletDestroyed(e) {
            const i = this.getContext(e);
            i && ((i.outlet = null), (i.attachRef = null));
          }
          onOutletDeactivated() {
            const e = this.contexts;
            return (this.contexts = new Map()), e;
          }
          onOutletReAttached(e) {
            this.contexts = e;
          }
          getOrCreateContext(e) {
            let i = this.getContext(e);
            return i || ((i = new XB()), this.contexts.set(e, i)), i;
          }
          getContext(e) {
            return this.contexts.get(e) || null;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      const qd = !1;
      let qp = (() => {
        class n {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = ue),
              (this.activateEvents = new re()),
              (this.deactivateEvents = new re()),
              (this.attachEvents = new re()),
              (this.detachEvents = new re()),
              (this.parentContexts = ie(Ws)),
              (this.location = ie(ht)),
              (this.changeDetector = ie(mt)),
              (this.environmentInjector = ie(si));
          }
          ngOnChanges(e) {
            if (e.name) {
              const { firstChange: i, previousValue: r } = e.name;
              if (i) return;
              this.isTrackedInParentContexts(r) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(r)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          isTrackedInParentContexts(e) {
            return this.parentContexts.getContext(e)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const e = this.parentContexts.getContext(this.name);
            e?.route &&
              (e.attachRef
                ? this.attach(e.attachRef, e.route)
                : this.activateWith(e.route, e.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new k(4012, qd);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new k(4012, qd);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new k(4012, qd);
            this.location.detach();
            const e = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(e.instance),
              e
            );
          }
          attach(e, i) {
            (this.activated = e),
              (this._activatedRoute = i),
              this.location.insert(e.hostView),
              this.attachEvents.emit(e.instance);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, i) {
            if (this.isActivated) throw new k(4013, qd);
            this._activatedRoute = e;
            const r = this.location,
              a = e.snapshot.component,
              s = this.parentContexts.getOrCreateContext(this.name).children,
              l = new ZB(e, s, r.injector);
            if (
              i &&
              (function QB(n) {
                return !!n.resolveComponentFactory;
              })(i)
            ) {
              const c = i.resolveComponentFactory(a);
              this.activated = r.createComponent(c, r.length, l);
            } else
              this.activated = r.createComponent(a, {
                index: r.length,
                injector: l,
                environmentInjector: i ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['router-outlet']],
            inputs: { name: 'name' },
            outputs: {
              activateEvents: 'activate',
              deactivateEvents: 'deactivate',
              attachEvents: 'attach',
              detachEvents: 'detach',
            },
            exportAs: ['outlet'],
            standalone: !0,
            features: [dt],
          })),
          n
        );
      })();
      class ZB {
        constructor(t, e, i) {
          (this.route = t), (this.childContexts = e), (this.parent = i);
        }
        get(t, e) {
          return t === In
            ? this.route
            : t === Ws
            ? this.childContexts
            : this.parent.get(t, e);
        }
      }
      let Kp = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵcmp = W({
            type: n,
            selectors: [['ng-component']],
            standalone: !0,
            features: [kf],
            decls: 1,
            vars: 0,
            template: function (e, i) {
              1 & e && ne(0, 'router-outlet');
            },
            dependencies: [qp],
            encapsulation: 2,
          })),
          n
        );
      })();
      function FD(n, t) {
        return (
          n.providers &&
            !n._injector &&
            (n._injector = sd(n.providers, t, `Route: ${n.path}`)),
          n._injector ?? t
        );
      }
      function Zp(n) {
        const t = n.children && n.children.map(Zp),
          e = t ? { ...n, children: t } : { ...n };
        return (
          !e.component &&
            !e.loadComponent &&
            (t || e.loadChildren) &&
            e.outlet &&
            e.outlet !== ue &&
            (e.component = Kp),
          e
        );
      }
      function Rn(n) {
        return n.outlet || ue;
      }
      function PD(n, t) {
        const e = n.filter((i) => Rn(i) === t);
        return e.push(...n.filter((i) => Rn(i) !== t)), e;
      }
      function Ys(n) {
        if (!n) return null;
        if (n.routeConfig?._injector) return n.routeConfig._injector;
        for (let t = n.parent; t; t = t.parent) {
          const e = t.routeConfig;
          if (e?._loadedInjector) return e._loadedInjector;
          if (e?._injector) return e._injector;
        }
        return null;
      }
      class iH {
        constructor(t, e, i, r) {
          (this.routeReuseStrategy = t),
            (this.futureState = e),
            (this.currState = i),
            (this.forwardEvent = r);
        }
        activate(t) {
          const e = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, i, t),
            Gp(this.futureState.root),
            this.activateChildRoutes(e, i, t);
        }
        deactivateChildRoutes(t, e, i) {
          const r = ha(e);
          t.children.forEach((o) => {
            const a = o.value.outlet;
            this.deactivateRoutes(o, r[a], i), delete r[a];
          }),
            kt(r, (o, a) => {
              this.deactivateRouteAndItsChildren(o, i);
            });
        }
        deactivateRoutes(t, e, i) {
          const r = t.value,
            o = e ? e.value : null;
          if (r === o)
            if (r.component) {
              const a = i.getContext(r.outlet);
              a && this.deactivateChildRoutes(t, e, a.children);
            } else this.deactivateChildRoutes(t, e, i);
          else o && this.deactivateRouteAndItsChildren(e, i);
        }
        deactivateRouteAndItsChildren(t, e) {
          t.value.component &&
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const i = e.getContext(t.value.outlet),
            r = i && t.value.component ? i.children : e,
            o = ha(t);
          for (const a of Object.keys(o))
            this.deactivateRouteAndItsChildren(o[a], r);
          if (i && i.outlet) {
            const a = i.outlet.detach(),
              s = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, {
              componentRef: a,
              route: t,
              contexts: s,
            });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const i = e.getContext(t.value.outlet),
            r = i && t.value.component ? i.children : e,
            o = ha(t);
          for (const a of Object.keys(o))
            this.deactivateRouteAndItsChildren(o[a], r);
          i &&
            i.outlet &&
            (i.outlet.deactivate(),
            i.children.onOutletDeactivated(),
            (i.attachRef = null),
            (i.resolver = null),
            (i.route = null));
        }
        activateChildRoutes(t, e, i) {
          const r = ha(e);
          t.children.forEach((o) => {
            this.activateRoutes(o, r[o.value.outlet], i),
              this.forwardEvent(new zB(o.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new BB(t.value.snapshot));
        }
        activateRoutes(t, e, i) {
          const r = t.value,
            o = e ? e.value : null;
          if ((Gp(r), r === o))
            if (r.component) {
              const a = i.getOrCreateContext(r.outlet);
              this.activateChildRoutes(t, e, a.children);
            } else this.activateChildRoutes(t, e, i);
          else if (r.component) {
            const a = i.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const s = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                a.children.onOutletReAttached(s.contexts),
                (a.attachRef = s.componentRef),
                (a.route = s.route.value),
                a.outlet && a.outlet.attach(s.componentRef, s.route.value),
                Gp(s.route.value),
                this.activateChildRoutes(t, null, a.children);
            } else {
              const s = Ys(r.snapshot),
                l = s?.get(zr) ?? null;
              (a.attachRef = null),
                (a.route = r),
                (a.resolver = l),
                (a.injector = s),
                a.outlet && a.outlet.activateWith(r, a.injector),
                this.activateChildRoutes(t, null, a.children);
            }
          } else this.activateChildRoutes(t, null, i);
        }
      }
      class ND {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Kd {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function rH(n, t, e) {
        const i = n._root;
        return qs(i, t ? t._root : null, e, [i.value]);
      }
      function ma(n, t) {
        const e = Symbol(),
          i = t.get(n, e);
        return i === e
          ? 'function' != typeof n ||
            (function hA(n) {
              return null !== lc(n);
            })(n)
            ? t.get(n)
            : n
          : i;
      }
      function qs(
        n,
        t,
        e,
        i,
        r = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const o = ha(t);
        return (
          n.children.forEach((a) => {
            (function aH(
              n,
              t,
              e,
              i,
              r = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const o = n.value,
                a = t ? t.value : null,
                s = e ? e.getContext(n.value.outlet) : null;
              if (a && o.routeConfig === a.routeConfig) {
                const l = (function sH(n, t, e) {
                  if ('function' == typeof e) return e(n, t);
                  switch (e) {
                    case 'pathParamsChange':
                      return !eo(n.url, t.url);
                    case 'pathParamsOrQueryParamsChange':
                      return (
                        !eo(n.url, t.url) || !vi(n.queryParams, t.queryParams)
                      );
                    case 'always':
                      return !0;
                    case 'paramsOrQueryParamsChange':
                      return !Wp(n, t) || !vi(n.queryParams, t.queryParams);
                    default:
                      return !Wp(n, t);
                  }
                })(a, o, o.routeConfig.runGuardsAndResolvers);
                l
                  ? r.canActivateChecks.push(new ND(i))
                  : ((o.data = a.data), (o._resolvedData = a._resolvedData)),
                  qs(n, t, o.component ? (s ? s.children : null) : e, i, r),
                  l &&
                    s &&
                    s.outlet &&
                    s.outlet.isActivated &&
                    r.canDeactivateChecks.push(new Kd(s.outlet.component, a));
              } else
                a && Ks(t, s, r),
                  r.canActivateChecks.push(new ND(i)),
                  qs(n, null, o.component ? (s ? s.children : null) : e, i, r);
            })(a, o[a.value.outlet], e, i.concat([a.value]), r),
              delete o[a.value.outlet];
          }),
          kt(o, (a, s) => Ks(a, e.getContext(s), r)),
          r
        );
      }
      function Ks(n, t, e) {
        const i = ha(n),
          r = n.value;
        kt(i, (o, a) => {
          Ks(o, r.component ? (t ? t.children.getContext(a) : null) : t, e);
        }),
          e.canDeactivateChecks.push(
            new Kd(
              r.component && t && t.outlet && t.outlet.isActivated
                ? t.outlet.component
                : null,
              r
            )
          );
      }
      function Xs(n) {
        return 'function' == typeof n;
      }
      function Qp(n) {
        return n instanceof Pd || 'EmptyError' === n?.name;
      }
      const Xd = Symbol('INITIAL_VALUE');
      function fa() {
        return nn((n) =>
          aa(n.map((t) => t.pipe(ot(1), _i(Xd)))).pipe(
            q((t) => {
              for (const e of t)
                if (!0 !== e) {
                  if (e === Xd) return Xd;
                  if (!1 === e || e instanceof Jr) return e;
                }
              return !0;
            }),
            Qe((t) => t !== Xd),
            ot(1)
          )
        );
      }
      function LD(n) {
        return (function F1(...n) {
          return ov(n);
        })(
          _t((t) => {
            if (to(t)) throw TD(0, t);
          }),
          q((t) => !0 === t)
        );
      }
      const Jp = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function VD(n, t, e, i, r) {
        const o = eg(n, t, e);
        return o.matched
          ? (function DH(n, t, e, i) {
              const r = t.canMatch;
              return r && 0 !== r.length
                ? H(
                    r.map((a) => {
                      const s = ma(a, n);
                      return pr(
                        (function mH(n) {
                          return n && Xs(n.canMatch);
                        })(s)
                          ? s.canMatch(t, e)
                          : n.runInContext(() => s(t, e))
                      );
                    })
                  ).pipe(fa(), LD())
                : H(!0);
            })((i = FD(t, i)), t, e).pipe(q((a) => (!0 === a ? o : { ...Jp })))
          : H(o);
      }
      function eg(n, t, e) {
        if ('' === t.path)
          return 'full' === t.pathMatch && (n.hasChildren() || e.length > 0)
            ? { ...Jp }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: e,
                parameters: {},
                positionalParamSegments: {},
              };
        const r = (t.matcher || oB)(e, n, t);
        if (!r) return { ...Jp };
        const o = {};
        kt(r.posParams, (s, l) => {
          o[l] = s.path;
        });
        const a =
          r.consumed.length > 0
            ? { ...o, ...r.consumed[r.consumed.length - 1].parameters }
            : o;
        return {
          matched: !0,
          consumedSegments: r.consumed,
          remainingSegments: e.slice(r.consumed.length),
          parameters: a,
          positionalParamSegments: r.posParams ?? {},
        };
      }
      function Zd(n, t, e, i) {
        if (
          e.length > 0 &&
          (function SH(n, t, e) {
            return e.some((i) => Qd(n, t, i) && Rn(i) !== ue);
          })(n, e, i)
        ) {
          const o = new ye(
            t,
            (function EH(n, t, e, i) {
              const r = {};
              (r[ue] = i),
                (i._sourceSegment = n),
                (i._segmentIndexShift = t.length);
              for (const o of e)
                if ('' === o.path && Rn(o) !== ue) {
                  const a = new ye([], {});
                  (a._sourceSegment = n),
                    (a._segmentIndexShift = t.length),
                    (r[Rn(o)] = a);
                }
              return r;
            })(n, t, i, new ye(e, n.children))
          );
          return (
            (o._sourceSegment = n),
            (o._segmentIndexShift = t.length),
            { segmentGroup: o, slicedSegments: [] }
          );
        }
        if (
          0 === e.length &&
          (function kH(n, t, e) {
            return e.some((i) => Qd(n, t, i));
          })(n, e, i)
        ) {
          const o = new ye(
            n.segments,
            (function MH(n, t, e, i, r) {
              const o = {};
              for (const a of i)
                if (Qd(n, e, a) && !r[Rn(a)]) {
                  const s = new ye([], {});
                  (s._sourceSegment = n),
                    (s._segmentIndexShift = t.length),
                    (o[Rn(a)] = s);
                }
              return { ...r, ...o };
            })(n, t, e, i, n.children)
          );
          return (
            (o._sourceSegment = n),
            (o._segmentIndexShift = t.length),
            { segmentGroup: o, slicedSegments: e }
          );
        }
        const r = new ye(n.segments, n.children);
        return (
          (r._sourceSegment = n),
          (r._segmentIndexShift = t.length),
          { segmentGroup: r, slicedSegments: e }
        );
      }
      function Qd(n, t, e) {
        return (
          (!(n.hasChildren() || t.length > 0) || 'full' !== e.pathMatch) &&
          '' === e.path
        );
      }
      function BD(n, t, e, i) {
        return (
          !!(Rn(n) === i || (i !== ue && Qd(t, e, n))) &&
          ('**' === n.path || eg(t, n, e).matched)
        );
      }
      function HD(n, t, e) {
        return 0 === t.length && !n.children[e];
      }
      const Jd = !1;
      class eu {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class zD {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function Zs(n) {
        return sa(new eu(n));
      }
      function jD(n) {
        return sa(new zD(n));
      }
      class RH {
        constructor(t, e, i, r, o) {
          (this.injector = t),
            (this.configLoader = e),
            (this.urlSerializer = i),
            (this.urlTree = r),
            (this.config = o),
            (this.allowRedirects = !0);
        }
        apply() {
          const t = Zd(this.urlTree.root, [], [], this.config).segmentGroup,
            e = new ye(t.segments, t.children);
          return this.expandSegmentGroup(this.injector, this.config, e, ue)
            .pipe(
              q((o) =>
                this.createUrlTree(
                  Gd(o),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              $i((o) => {
                if (o instanceof zD)
                  return (this.allowRedirects = !1), this.match(o.urlTree);
                throw o instanceof eu ? this.noMatchError(o) : o;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.injector, this.config, t.root, ue)
            .pipe(
              q((r) => this.createUrlTree(Gd(r), t.queryParams, t.fragment))
            )
            .pipe(
              $i((r) => {
                throw r instanceof eu ? this.noMatchError(r) : r;
              })
            );
        }
        noMatchError(t) {
          return new k(4002, Jd);
        }
        createUrlTree(t, e, i) {
          const r = Lp(t);
          return new Jr(r, e, i);
        }
        expandSegmentGroup(t, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.expandChildren(t, e, i).pipe(q((o) => new ye([], o)))
            : this.expandSegment(t, i, e, i.segments, r, !0);
        }
        expandChildren(t, e, i) {
          const r = [];
          for (const o of Object.keys(i.children))
            'primary' === o ? r.unshift(o) : r.push(o);
          return at(r).pipe(
            fr((o) => {
              const a = i.children[o],
                s = PD(e, o);
              return this.expandSegmentGroup(t, s, a, o).pipe(
                q((l) => ({ segment: l, outlet: o }))
              );
            }),
            tD((o, a) => ((o[a.outlet] = a.segment), o), {}),
            nD()
          );
        }
        expandSegment(t, e, i, r, o, a) {
          return at(i).pipe(
            fr((s) =>
              this.expandSegmentAgainstRoute(t, e, i, s, r, o, a).pipe(
                $i((c) => {
                  if (c instanceof eu) return H(null);
                  throw c;
                })
              )
            ),
            mr((s) => !!s),
            $i((s, l) => {
              if (Qp(s)) return HD(e, r, o) ? H(new ye([], {})) : Zs(e);
              throw s;
            })
          );
        }
        expandSegmentAgainstRoute(t, e, i, r, o, a, s) {
          return BD(r, e, o, a)
            ? void 0 === r.redirectTo
              ? this.matchSegmentAgainstRoute(t, e, r, o, a)
              : s && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(t, e, i, r, o, a)
              : Zs(e)
            : Zs(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, i, r, o, a) {
          return '**' === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, i, r, a)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                t,
                e,
                i,
                r,
                o,
                a
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, i, r) {
          const o = this.applyRedirectCommands([], i.redirectTo, {});
          return i.redirectTo.startsWith('/')
            ? jD(o)
            : this.lineralizeSegments(i, o).pipe(
                yt((a) => {
                  const s = new ye(a, {});
                  return this.expandSegment(t, s, e, a, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, i, r, o, a) {
          const {
            matched: s,
            consumedSegments: l,
            remainingSegments: c,
            positionalParamSegments: d,
          } = eg(e, r, o);
          if (!s) return Zs(e);
          const u = this.applyRedirectCommands(l, r.redirectTo, d);
          return r.redirectTo.startsWith('/')
            ? jD(u)
            : this.lineralizeSegments(r, u).pipe(
                yt((h) => this.expandSegment(t, e, i, h.concat(c), a, !1))
              );
        }
        matchSegmentAgainstRoute(t, e, i, r, o) {
          return '**' === i.path
            ? ((t = FD(i, t)),
              i.loadChildren
                ? (i._loadedRoutes
                    ? H({
                        routes: i._loadedRoutes,
                        injector: i._loadedInjector,
                      })
                    : this.configLoader.loadChildren(t, i)
                  ).pipe(
                    q(
                      (s) => (
                        (i._loadedRoutes = s.routes),
                        (i._loadedInjector = s.injector),
                        new ye(r, {})
                      )
                    )
                  )
                : H(new ye(r, {})))
            : VD(e, i, r, t).pipe(
                nn(
                  ({ matched: a, consumedSegments: s, remainingSegments: l }) =>
                    a
                      ? this.getChildConfig((t = i._injector ?? t), i, r).pipe(
                          yt((d) => {
                            const u = d.injector ?? t,
                              h = d.routes,
                              { segmentGroup: f, slicedSegments: g } = Zd(
                                e,
                                s,
                                l,
                                h
                              ),
                              v = new ye(f.segments, f.children);
                            if (0 === g.length && v.hasChildren())
                              return this.expandChildren(u, h, v).pipe(
                                q((M) => new ye(s, M))
                              );
                            if (0 === h.length && 0 === g.length)
                              return H(new ye(s, {}));
                            const y = Rn(i) === o;
                            return this.expandSegment(
                              u,
                              v,
                              h,
                              g,
                              y ? ue : o,
                              !0
                            ).pipe(
                              q((R) => new ye(s.concat(R.segments), R.children))
                            );
                          })
                        )
                      : Zs(e)
                )
              );
        }
        getChildConfig(t, e, i) {
          return e.children
            ? H({ routes: e.children, injector: t })
            : e.loadChildren
            ? void 0 !== e._loadedRoutes
              ? H({ routes: e._loadedRoutes, injector: e._loadedInjector })
              : (function xH(n, t, e, i) {
                  const r = t.canLoad;
                  return void 0 === r || 0 === r.length
                    ? H(!0)
                    : H(
                        r.map((a) => {
                          const s = ma(a, n);
                          return pr(
                            (function cH(n) {
                              return n && Xs(n.canLoad);
                            })(s)
                              ? s.canLoad(t, e)
                              : n.runInContext(() => s(t, e))
                          );
                        })
                      ).pipe(fa(), LD());
                })(t, e, i).pipe(
                  yt((r) =>
                    r
                      ? this.configLoader.loadChildren(t, e).pipe(
                          _t((o) => {
                            (e._loadedRoutes = o.routes),
                              (e._loadedInjector = o.injector);
                          })
                        )
                      : (function TH(n) {
                          return sa(ID(Jd, 3));
                        })()
                  )
                )
            : H({ routes: [], injector: t });
        }
        lineralizeSegments(t, e) {
          let i = [],
            r = e.root;
          for (;;) {
            if (((i = i.concat(r.segments)), 0 === r.numberOfChildren))
              return H(i);
            if (r.numberOfChildren > 1 || !r.children[ue])
              return sa(new k(4e3, Jd));
            r = r.children[ue];
          }
        }
        applyRedirectCommands(t, e, i) {
          return this.applyRedirectCreateUrlTree(
            e,
            this.urlSerializer.parse(e),
            t,
            i
          );
        }
        applyRedirectCreateUrlTree(t, e, i, r) {
          const o = this.createSegmentGroup(t, e.root, i, r);
          return new Jr(
            o,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(t, e) {
          const i = {};
          return (
            kt(t, (r, o) => {
              if ('string' == typeof r && r.startsWith(':')) {
                const s = r.substring(1);
                i[o] = e[s];
              } else i[o] = r;
            }),
            i
          );
        }
        createSegmentGroup(t, e, i, r) {
          const o = this.createSegments(t, e.segments, i, r);
          let a = {};
          return (
            kt(e.children, (s, l) => {
              a[l] = this.createSegmentGroup(t, s, i, r);
            }),
            new ye(o, a)
          );
        }
        createSegments(t, e, i, r) {
          return e.map((o) =>
            o.path.startsWith(':')
              ? this.findPosParam(t, o, r)
              : this.findOrReturn(o, i)
          );
        }
        findPosParam(t, e, i) {
          const r = i[e.path.substring(1)];
          if (!r) throw new k(4001, Jd);
          return r;
        }
        findOrReturn(t, e) {
          let i = 0;
          for (const r of e) {
            if (r.path === t.path) return e.splice(i), r;
            i++;
          }
          return t;
        }
      }
      class FH {}
      class LH {
        constructor(t, e, i, r, o, a, s) {
          (this.injector = t),
            (this.rootComponentType = e),
            (this.config = i),
            (this.urlTree = r),
            (this.url = o),
            (this.paramsInheritanceStrategy = a),
            (this.urlSerializer = s);
        }
        recognize() {
          const t = Zd(
            this.urlTree.root,
            [],
            [],
            this.config.filter((e) => void 0 === e.redirectTo)
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            t,
            ue
          ).pipe(
            q((e) => {
              if (null === e) return null;
              const i = new Yd(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  ue,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {}
                ),
                r = new Gi(i, e),
                o = new kD(this.url, r);
              return this.inheritParamsAndData(o._root), o;
            })
          );
        }
        inheritParamsAndData(t) {
          const e = t.value,
            i = SD(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(i.params)),
            (e.data = Object.freeze(i.data)),
            t.children.forEach((r) => this.inheritParamsAndData(r));
        }
        processSegmentGroup(t, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.processChildren(t, e, i)
            : this.processSegment(t, e, i, i.segments, r);
        }
        processChildren(t, e, i) {
          return at(Object.keys(i.children)).pipe(
            fr((r) => {
              const o = i.children[r],
                a = PD(e, r);
              return this.processSegmentGroup(t, a, o, r);
            }),
            tD((r, o) => (r && o ? (r.push(...o), r) : null)),
            iD((r) => null !== r),
            Nd(null),
            nD(),
            q((r) => {
              if (null === r) return null;
              const o = $D(r);
              return (
                (function VH(n) {
                  n.sort((t, e) =>
                    t.value.outlet === ue
                      ? -1
                      : e.value.outlet === ue
                      ? 1
                      : t.value.outlet.localeCompare(e.value.outlet)
                  );
                })(o),
                o
              );
            })
          );
        }
        processSegment(t, e, i, r, o) {
          return at(e).pipe(
            fr((a) =>
              this.processSegmentAgainstRoute(a._injector ?? t, a, i, r, o)
            ),
            mr((a) => !!a),
            $i((a) => {
              if (Qp(a)) return HD(i, r, o) ? H([]) : H(null);
              throw a;
            })
          );
        }
        processSegmentAgainstRoute(t, e, i, r, o) {
          if (e.redirectTo || !BD(e, i, r, o)) return H(null);
          let a;
          if ('**' === e.path) {
            const s = r.length > 0 ? aD(r).parameters : {},
              l = WD(i) + r.length;
            a = H({
              snapshot: new Yd(
                r,
                s,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                YD(e),
                Rn(e),
                e.component ?? e._loadedComponent ?? null,
                e,
                GD(i),
                l,
                qD(e)
              ),
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            a = VD(i, e, r, t).pipe(
              q(
                ({
                  matched: s,
                  consumedSegments: l,
                  remainingSegments: c,
                  parameters: d,
                }) => {
                  if (!s) return null;
                  const u = WD(i) + l.length;
                  return {
                    snapshot: new Yd(
                      l,
                      d,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      YD(e),
                      Rn(e),
                      e.component ?? e._loadedComponent ?? null,
                      e,
                      GD(i),
                      u,
                      qD(e)
                    ),
                    consumedSegments: l,
                    remainingSegments: c,
                  };
                }
              )
            );
          return a.pipe(
            nn((s) => {
              if (null === s) return H(null);
              const {
                snapshot: l,
                consumedSegments: c,
                remainingSegments: d,
              } = s;
              t = e._injector ?? t;
              const u = e._loadedInjector ?? t,
                h = (function BH(n) {
                  return n.children
                    ? n.children
                    : n.loadChildren
                    ? n._loadedRoutes
                    : [];
                })(e),
                { segmentGroup: f, slicedSegments: g } = Zd(
                  i,
                  c,
                  d,
                  h.filter((y) => void 0 === y.redirectTo)
                );
              if (0 === g.length && f.hasChildren())
                return this.processChildren(u, h, f).pipe(
                  q((y) => (null === y ? null : [new Gi(l, y)]))
                );
              if (0 === h.length && 0 === g.length) return H([new Gi(l, [])]);
              const v = Rn(e) === o;
              return this.processSegment(u, h, f, g, v ? ue : o).pipe(
                q((y) => (null === y ? null : [new Gi(l, y)]))
              );
            })
          );
        }
      }
      function HH(n) {
        const t = n.value.routeConfig;
        return t && '' === t.path && void 0 === t.redirectTo;
      }
      function $D(n) {
        const t = [],
          e = new Set();
        for (const i of n) {
          if (!HH(i)) {
            t.push(i);
            continue;
          }
          const r = t.find((o) => i.value.routeConfig === o.value.routeConfig);
          void 0 !== r ? (r.children.push(...i.children), e.add(r)) : t.push(i);
        }
        for (const i of e) {
          const r = $D(i.children);
          t.push(new Gi(i.value, r));
        }
        return t.filter((i) => !e.has(i));
      }
      function GD(n) {
        let t = n;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function WD(n) {
        let t = n,
          e = t._segmentIndexShift ?? 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment), (e += t._segmentIndexShift ?? 0);
        return e - 1;
      }
      function YD(n) {
        return n.data || {};
      }
      function qD(n) {
        return n.resolve || {};
      }
      function KD(n) {
        return 'string' == typeof n.title || null === n.title;
      }
      function tg(n) {
        return nn((t) => {
          const e = n(t);
          return e ? at(e).pipe(q(() => t)) : H(t);
        });
      }
      const pa = new A('ROUTES');
      let ng = (() => {
        class n {
          constructor(e, i) {
            (this.injector = e),
              (this.compiler = i),
              (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap());
          }
          loadComponent(e) {
            if (this.componentLoaders.get(e))
              return this.componentLoaders.get(e);
            if (e._loadedComponent) return H(e._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(e);
            const i = pr(e.loadComponent()).pipe(
                q(ZD),
                _t((o) => {
                  this.onLoadEndListener && this.onLoadEndListener(e),
                    (e._loadedComponent = o);
                }),
                Vd(() => {
                  this.componentLoaders.delete(e);
                })
              ),
              r = new Op(i, () => new z()).pipe(Rp());
            return this.componentLoaders.set(e, r), r;
          }
          loadChildren(e, i) {
            if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
            if (i._loadedRoutes)
              return H({
                routes: i._loadedRoutes,
                injector: i._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(i);
            const o = this.loadModuleFactoryOrRoutes(i.loadChildren).pipe(
                q((s) => {
                  this.onLoadEndListener && this.onLoadEndListener(i);
                  let l,
                    c,
                    d = !1;
                  Array.isArray(s)
                    ? (c = s)
                    : ((l = s.create(e).injector),
                      (c = oD(l.get(pa, [], J.Self | J.Optional))));
                  return { routes: c.map(Zp), injector: l };
                }),
                Vd(() => {
                  this.childrenLoaders.delete(i);
                })
              ),
              a = new Op(o, () => new z()).pipe(Rp());
            return this.childrenLoaders.set(i, a), a;
          }
          loadModuleFactoryOrRoutes(e) {
            return pr(e()).pipe(
              q(ZD),
              yt((r) =>
                r instanceof j0 || Array.isArray(r)
                  ? H(r)
                  : at(this.compiler.compileModuleAsync(r))
              )
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(Dt), C(TC));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      function ZD(n) {
        return (function KH(n) {
          return n && 'object' == typeof n && 'default' in n;
        })(n)
          ? n.default
          : n;
      }
      let nu = (() => {
        class n {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new z()),
              (this.configLoader = ie(ng)),
              (this.environmentInjector = ie(si)),
              (this.urlSerializer = ie(Hs)),
              (this.rootContexts = ie(Ws)),
              (this.navigationId = 0),
              (this.afterPreactivation = () => H(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = (r) =>
                this.events.next(new LB(r))),
              (this.configLoader.onLoadStartListener = (r) =>
                this.events.next(new NB(r)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(e) {
            const i = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...e, id: i });
          }
          setupNavigations(e) {
            return (
              (this.transitions = new Lt({
                id: 0,
                targetPageId: 0,
                currentUrlTree: e.currentUrlTree,
                currentRawUrl: e.currentUrlTree,
                extractedUrl: e.urlHandlingStrategy.extract(e.currentUrlTree),
                urlAfterRedirects: e.urlHandlingStrategy.extract(
                  e.currentUrlTree
                ),
                rawUrl: e.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: $s,
                restoredState: null,
                currentSnapshot: e.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: e.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                Qe((i) => 0 !== i.id),
                q((i) => ({
                  ...i,
                  extractedUrl: e.urlHandlingStrategy.extract(i.rawUrl),
                })),
                nn((i) => {
                  let r = !1,
                    o = !1;
                  return H(i).pipe(
                    _t((a) => {
                      this.currentNavigation = {
                        id: a.id,
                        initialUrl: a.rawUrl,
                        extractedUrl: a.extractedUrl,
                        trigger: a.source,
                        extras: a.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    nn((a) => {
                      const s = e.browserUrlTree.toString(),
                        l =
                          !e.navigated ||
                          a.extractedUrl.toString() !== s ||
                          s !== e.currentUrlTree.toString();
                      if (
                        !l &&
                        'reload' !==
                          (a.extras.onSameUrlNavigation ??
                            e.onSameUrlNavigation)
                      ) {
                        const d = '';
                        return (
                          this.events.next(
                            new wD(a.id, e.serializeUrl(i.rawUrl), d, 0)
                          ),
                          (e.rawUrlTree = a.rawUrl),
                          a.resolve(null),
                          Vn
                        );
                      }
                      if (e.urlHandlingStrategy.shouldProcessUrl(a.rawUrl))
                        return (
                          QD(a.source) && (e.browserUrlTree = a.extractedUrl),
                          H(a).pipe(
                            nn((d) => {
                              const u = this.transitions?.getValue();
                              return (
                                this.events.next(
                                  new zp(
                                    d.id,
                                    this.urlSerializer.serialize(
                                      d.extractedUrl
                                    ),
                                    d.source,
                                    d.restoredState
                                  )
                                ),
                                u !== this.transitions?.getValue()
                                  ? Vn
                                  : Promise.resolve(d)
                              );
                            }),
                            (function OH(n, t, e, i) {
                              return nn((r) =>
                                (function IH(n, t, e, i, r) {
                                  return new RH(n, t, e, i, r).apply();
                                })(n, t, e, r.extractedUrl, i).pipe(
                                  q((o) => ({ ...r, urlAfterRedirects: o }))
                                )
                              );
                            })(
                              this.environmentInjector,
                              this.configLoader,
                              this.urlSerializer,
                              e.config
                            ),
                            _t((d) => {
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: d.urlAfterRedirects,
                              }),
                                (i.urlAfterRedirects = d.urlAfterRedirects);
                            }),
                            (function jH(n, t, e, i, r) {
                              return yt((o) =>
                                (function NH(
                                  n,
                                  t,
                                  e,
                                  i,
                                  r,
                                  o,
                                  a = 'emptyOnly'
                                ) {
                                  return new LH(n, t, e, i, r, a, o)
                                    .recognize()
                                    .pipe(
                                      nn((s) =>
                                        null === s
                                          ? (function PH(n) {
                                              return new Fe((t) => t.error(n));
                                            })(new FH())
                                          : H(s)
                                      )
                                    );
                                })(
                                  n,
                                  t,
                                  e,
                                  o.urlAfterRedirects,
                                  i.serialize(o.urlAfterRedirects),
                                  i,
                                  r
                                ).pipe(q((a) => ({ ...o, targetSnapshot: a })))
                              );
                            })(
                              this.environmentInjector,
                              this.rootComponentType,
                              e.config,
                              this.urlSerializer,
                              e.paramsInheritanceStrategy
                            ),
                            _t((d) => {
                              if (
                                ((i.targetSnapshot = d.targetSnapshot),
                                'eager' === e.urlUpdateStrategy)
                              ) {
                                if (!d.extras.skipLocationChange) {
                                  const h = e.urlHandlingStrategy.merge(
                                    d.urlAfterRedirects,
                                    d.rawUrl
                                  );
                                  e.setBrowserUrl(h, d);
                                }
                                e.browserUrlTree = d.urlAfterRedirects;
                              }
                              const u = new IB(
                                d.id,
                                this.urlSerializer.serialize(d.extractedUrl),
                                this.urlSerializer.serialize(
                                  d.urlAfterRedirects
                                ),
                                d.targetSnapshot
                              );
                              this.events.next(u);
                            })
                          )
                        );
                      if (
                        l &&
                        e.urlHandlingStrategy.shouldProcessUrl(e.rawUrlTree)
                      ) {
                        const {
                            id: d,
                            extractedUrl: u,
                            source: h,
                            restoredState: f,
                            extras: g,
                          } = a,
                          v = new zp(d, this.urlSerializer.serialize(u), h, f);
                        this.events.next(v);
                        const y = ED(u, this.rootComponentType).snapshot;
                        return H(
                          (i = {
                            ...a,
                            targetSnapshot: y,
                            urlAfterRedirects: u,
                            extras: {
                              ...g,
                              skipLocationChange: !1,
                              replaceUrl: !1,
                            },
                          })
                        );
                      }
                      {
                        const d = '';
                        return (
                          this.events.next(
                            new wD(a.id, e.serializeUrl(i.extractedUrl), d, 1)
                          ),
                          (e.rawUrlTree = a.rawUrl),
                          a.resolve(null),
                          Vn
                        );
                      }
                    }),
                    _t((a) => {
                      const s = new RB(
                        a.id,
                        this.urlSerializer.serialize(a.extractedUrl),
                        this.urlSerializer.serialize(a.urlAfterRedirects),
                        a.targetSnapshot
                      );
                      this.events.next(s);
                    }),
                    q(
                      (a) =>
                        (i = {
                          ...a,
                          guards: rH(
                            a.targetSnapshot,
                            a.currentSnapshot,
                            this.rootContexts
                          ),
                        })
                    ),
                    (function pH(n, t) {
                      return yt((e) => {
                        const {
                          targetSnapshot: i,
                          currentSnapshot: r,
                          guards: {
                            canActivateChecks: o,
                            canDeactivateChecks: a,
                          },
                        } = e;
                        return 0 === a.length && 0 === o.length
                          ? H({ ...e, guardsResult: !0 })
                          : (function gH(n, t, e, i) {
                              return at(n).pipe(
                                yt((r) =>
                                  (function CH(n, t, e, i, r) {
                                    const o =
                                      t && t.routeConfig
                                        ? t.routeConfig.canDeactivate
                                        : null;
                                    return o && 0 !== o.length
                                      ? H(
                                          o.map((s) => {
                                            const l = Ys(t) ?? r,
                                              c = ma(s, l);
                                            return pr(
                                              (function hH(n) {
                                                return n && Xs(n.canDeactivate);
                                              })(c)
                                                ? c.canDeactivate(n, t, e, i)
                                                : l.runInContext(() =>
                                                    c(n, t, e, i)
                                                  )
                                            ).pipe(mr());
                                          })
                                        ).pipe(fa())
                                      : H(!0);
                                  })(r.component, r.route, e, t, i)
                                ),
                                mr((r) => !0 !== r, !0)
                              );
                            })(a, i, r, n).pipe(
                              yt((s) =>
                                s &&
                                (function lH(n) {
                                  return 'boolean' == typeof n;
                                })(s)
                                  ? (function _H(n, t, e, i) {
                                      return at(t).pipe(
                                        fr((r) =>
                                          Ls(
                                            (function bH(n, t) {
                                              return (
                                                null !== n && t && t(new VB(n)),
                                                H(!0)
                                              );
                                            })(r.route.parent, i),
                                            (function vH(n, t) {
                                              return (
                                                null !== n && t && t(new HB(n)),
                                                H(!0)
                                              );
                                            })(r.route, i),
                                            (function wH(n, t, e) {
                                              const i = t[t.length - 1],
                                                o = t
                                                  .slice(0, t.length - 1)
                                                  .reverse()
                                                  .map((a) =>
                                                    (function oH(n) {
                                                      const t = n.routeConfig
                                                        ? n.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return t && 0 !== t.length
                                                        ? { node: n, guards: t }
                                                        : null;
                                                    })(a)
                                                  )
                                                  .filter((a) => null !== a)
                                                  .map((a) =>
                                                    Ip(() =>
                                                      H(
                                                        a.guards.map((l) => {
                                                          const c =
                                                              Ys(a.node) ?? e,
                                                            d = ma(l, c);
                                                          return pr(
                                                            (function uH(n) {
                                                              return (
                                                                n &&
                                                                Xs(
                                                                  n.canActivateChild
                                                                )
                                                              );
                                                            })(d)
                                                              ? d.canActivateChild(
                                                                  i,
                                                                  n
                                                                )
                                                              : c.runInContext(
                                                                  () => d(i, n)
                                                                )
                                                          ).pipe(mr());
                                                        })
                                                      ).pipe(fa())
                                                    )
                                                  );
                                              return H(o).pipe(fa());
                                            })(n, r.path, e),
                                            (function yH(n, t, e) {
                                              const i = t.routeConfig
                                                ? t.routeConfig.canActivate
                                                : null;
                                              if (!i || 0 === i.length)
                                                return H(!0);
                                              const r = i.map((o) =>
                                                Ip(() => {
                                                  const a = Ys(t) ?? e,
                                                    s = ma(o, a);
                                                  return pr(
                                                    (function dH(n) {
                                                      return (
                                                        n && Xs(n.canActivate)
                                                      );
                                                    })(s)
                                                      ? s.canActivate(t, n)
                                                      : a.runInContext(() =>
                                                          s(t, n)
                                                        )
                                                  ).pipe(mr());
                                                })
                                              );
                                              return H(r).pipe(fa());
                                            })(n, r.route, e)
                                          )
                                        ),
                                        mr((r) => !0 !== r, !0)
                                      );
                                    })(i, o, n, t)
                                  : H(s)
                              ),
                              q((s) => ({ ...e, guardsResult: s }))
                            );
                      });
                    })(this.environmentInjector, (a) => this.events.next(a)),
                    _t((a) => {
                      if (
                        ((i.guardsResult = a.guardsResult), to(a.guardsResult))
                      )
                        throw TD(0, a.guardsResult);
                      const s = new OB(
                        a.id,
                        this.urlSerializer.serialize(a.extractedUrl),
                        this.urlSerializer.serialize(a.urlAfterRedirects),
                        a.targetSnapshot,
                        !!a.guardsResult
                      );
                      this.events.next(s);
                    }),
                    Qe(
                      (a) =>
                        !!a.guardsResult ||
                        (e.restoreHistory(a),
                        this.cancelNavigationTransition(a, '', 3),
                        !1)
                    ),
                    tg((a) => {
                      if (a.guards.canActivateChecks.length)
                        return H(a).pipe(
                          _t((s) => {
                            const l = new FB(
                              s.id,
                              this.urlSerializer.serialize(s.extractedUrl),
                              this.urlSerializer.serialize(s.urlAfterRedirects),
                              s.targetSnapshot
                            );
                            this.events.next(l);
                          }),
                          nn((s) => {
                            let l = !1;
                            return H(s).pipe(
                              (function UH(n, t) {
                                return yt((e) => {
                                  const {
                                    targetSnapshot: i,
                                    guards: { canActivateChecks: r },
                                  } = e;
                                  if (!r.length) return H(e);
                                  let o = 0;
                                  return at(r).pipe(
                                    fr((a) =>
                                      (function $H(n, t, e, i) {
                                        const r = n.routeConfig,
                                          o = n._resolve;
                                        return (
                                          void 0 !== r?.title &&
                                            !KD(r) &&
                                            (o[Vs] = r.title),
                                          (function GH(n, t, e, i) {
                                            const r = (function WH(n) {
                                              return [
                                                ...Object.keys(n),
                                                ...Object.getOwnPropertySymbols(
                                                  n
                                                ),
                                              ];
                                            })(n);
                                            if (0 === r.length) return H({});
                                            const o = {};
                                            return at(r).pipe(
                                              yt((a) =>
                                                (function YH(n, t, e, i) {
                                                  const r = Ys(t) ?? i,
                                                    o = ma(n, r);
                                                  return pr(
                                                    o.resolve
                                                      ? o.resolve(t, e)
                                                      : r.runInContext(() =>
                                                          o(t, e)
                                                        )
                                                  );
                                                })(n[a], t, e, i).pipe(
                                                  mr(),
                                                  _t((s) => {
                                                    o[a] = s;
                                                  })
                                                )
                                              ),
                                              Fp(1),
                                              Ld(o),
                                              $i((a) => (Qp(a) ? Vn : sa(a)))
                                            );
                                          })(o, n, t, i).pipe(
                                            q(
                                              (a) => (
                                                (n._resolvedData = a),
                                                (n.data = SD(n, e).resolve),
                                                r &&
                                                  KD(r) &&
                                                  (n.data[Vs] = r.title),
                                                null
                                              )
                                            )
                                          )
                                        );
                                      })(a.route, i, n, t)
                                    ),
                                    _t(() => o++),
                                    Fp(1),
                                    yt((a) => (o === r.length ? H(e) : Vn))
                                  );
                                });
                              })(
                                e.paramsInheritanceStrategy,
                                this.environmentInjector
                              ),
                              _t({
                                next: () => (l = !0),
                                complete: () => {
                                  l ||
                                    (e.restoreHistory(s),
                                    this.cancelNavigationTransition(s, '', 2));
                                },
                              })
                            );
                          }),
                          _t((s) => {
                            const l = new PB(
                              s.id,
                              this.urlSerializer.serialize(s.extractedUrl),
                              this.urlSerializer.serialize(s.urlAfterRedirects),
                              s.targetSnapshot
                            );
                            this.events.next(l);
                          })
                        );
                    }),
                    tg((a) => {
                      const s = (l) => {
                        const c = [];
                        l.routeConfig?.loadComponent &&
                          !l.routeConfig._loadedComponent &&
                          c.push(
                            this.configLoader.loadComponent(l.routeConfig).pipe(
                              _t((d) => {
                                l.component = d;
                              }),
                              q(() => {})
                            )
                          );
                        for (const d of l.children) c.push(...s(d));
                        return c;
                      };
                      return aa(s(a.targetSnapshot.root)).pipe(Nd(), ot(1));
                    }),
                    tg(() => this.afterPreactivation()),
                    q((a) => {
                      const s = (function YB(n, t, e) {
                        const i = Gs(n, t._root, e ? e._root : void 0);
                        return new MD(i, t);
                      })(
                        e.routeReuseStrategy,
                        a.targetSnapshot,
                        a.currentRouterState
                      );
                      return (i = { ...a, targetRouterState: s });
                    }),
                    _t((a) => {
                      (e.currentUrlTree = a.urlAfterRedirects),
                        (e.rawUrlTree = e.urlHandlingStrategy.merge(
                          a.urlAfterRedirects,
                          a.rawUrl
                        )),
                        (e.routerState = a.targetRouterState),
                        'deferred' === e.urlUpdateStrategy &&
                          (a.extras.skipLocationChange ||
                            e.setBrowserUrl(e.rawUrlTree, a),
                          (e.browserUrlTree = a.urlAfterRedirects));
                    }),
                    ((n, t, e) =>
                      q(
                        (i) => (
                          new iH(
                            t,
                            i.targetRouterState,
                            i.currentRouterState,
                            e
                          ).activate(n),
                          i
                        )
                      ))(this.rootContexts, e.routeReuseStrategy, (a) =>
                      this.events.next(a)
                    ),
                    _t({
                      next: (a) => {
                        (r = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          (e.navigated = !0),
                          this.events.next(
                            new no(
                              a.id,
                              this.urlSerializer.serialize(a.extractedUrl),
                              this.urlSerializer.serialize(e.currentUrlTree)
                            )
                          ),
                          e.titleStrategy?.updateTitle(
                            a.targetRouterState.snapshot
                          ),
                          a.resolve(!0);
                      },
                      complete: () => {
                        r = !0;
                      },
                    }),
                    Vd(() => {
                      r || o || this.cancelNavigationTransition(i, '', 1),
                        this.currentNavigation?.id === i.id &&
                          (this.currentNavigation = null);
                    }),
                    $i((a) => {
                      if (((o = !0), OD(a))) {
                        RD(a) || ((e.navigated = !0), e.restoreHistory(i, !0));
                        const s = new Wd(
                          i.id,
                          this.urlSerializer.serialize(i.extractedUrl),
                          a.message,
                          a.cancellationCode
                        );
                        if ((this.events.next(s), RD(a))) {
                          const l = e.urlHandlingStrategy.merge(
                              a.url,
                              e.rawUrlTree
                            ),
                            c = {
                              skipLocationChange: i.extras.skipLocationChange,
                              replaceUrl:
                                'eager' === e.urlUpdateStrategy || QD(i.source),
                            };
                          e.scheduleNavigation(l, $s, null, c, {
                            resolve: i.resolve,
                            reject: i.reject,
                            promise: i.promise,
                          });
                        } else i.resolve(!1);
                      } else {
                        e.restoreHistory(i, !0);
                        const s = new CD(
                          i.id,
                          this.urlSerializer.serialize(i.extractedUrl),
                          a,
                          i.targetSnapshot ?? void 0
                        );
                        this.events.next(s);
                        try {
                          i.resolve(e.errorHandler(a));
                        } catch (l) {
                          i.reject(l);
                        }
                      }
                      return Vn;
                    })
                  );
                })
              )
            );
          }
          cancelNavigationTransition(e, i, r) {
            const o = new Wd(
              e.id,
              this.urlSerializer.serialize(e.extractedUrl),
              i,
              r
            );
            this.events.next(o), e.resolve(!1);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      function QD(n) {
        return n !== $s;
      }
      let JD = (() => {
          class n {
            buildTitle(e) {
              let i,
                r = e.root;
              for (; void 0 !== r; )
                (i = this.getResolvedTitleForRoute(r) ?? i),
                  (r = r.children.find((o) => o.outlet === ue));
              return i;
            }
            getResolvedTitleForRoute(e) {
              return e.data[Vs];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({
              token: n,
              factory: function () {
                return ie(XH);
              },
              providedIn: 'root',
            })),
            n
          );
        })(),
        XH = (() => {
          class n extends JD {
            constructor(e) {
              super(), (this.title = e);
            }
            updateTitle(e) {
              const i = this.buildTitle(e);
              void 0 !== i && this.title.setTitle(i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(Yx));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        ZH = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({
              token: n,
              factory: function () {
                return ie(JH);
              },
              providedIn: 'root',
            })),
            n
          );
        })();
      class QH {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      }
      let JH = (() => {
        class n extends QH {}
        return (
          (n.ɵfac = (function () {
            let t;
            return function (i) {
              return (t || (t = _e(n)))(i || n);
            };
          })()),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      const iu = new A('', { providedIn: 'root', factory: () => ({}) });
      let t3 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({
              token: n,
              factory: function () {
                return ie(n3);
              },
              providedIn: 'root',
            })),
            n
          );
        })(),
        n3 = (() => {
          class n {
            shouldProcessUrl(e) {
              return !0;
            }
            extract(e) {
              return e;
            }
            merge(e, i) {
              return e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      function r3(n) {
        throw n;
      }
      function o3(n, t, e) {
        return t.parse('/');
      }
      const a3 = {
          paths: 'exact',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'exact',
        },
        s3 = {
          paths: 'subset',
          fragment: 'ignored',
          matrixParams: 'ignored',
          queryParams: 'subset',
        };
      let We = (() => {
          class n {
            get navigationId() {
              return this.navigationTransitions.navigationId;
            }
            get browserPageId() {
              return this.location.getState()?.ɵrouterPageId;
            }
            get events() {
              return this.navigationTransitions.events;
            }
            constructor() {
              (this.disposed = !1),
                (this.currentPageId = 0),
                (this.console = ie(PN)),
                (this.isNgZoneEnabled = !1),
                (this.options = ie(iu, { optional: !0 }) || {}),
                (this.errorHandler = this.options.errorHandler || r3),
                (this.malformedUriErrorHandler =
                  this.options.malformedUriErrorHandler || o3),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.urlHandlingStrategy = ie(t3)),
                (this.routeReuseStrategy = ie(ZH)),
                (this.urlCreationStrategy = ie($B)),
                (this.titleStrategy = ie(JD)),
                (this.onSameUrlNavigation =
                  this.options.onSameUrlNavigation || 'ignore'),
                (this.paramsInheritanceStrategy =
                  this.options.paramsInheritanceStrategy || 'emptyOnly'),
                (this.urlUpdateStrategy =
                  this.options.urlUpdateStrategy || 'deferred'),
                (this.canceledNavigationResolution =
                  this.options.canceledNavigationResolution || 'replace'),
                (this.config = oD(ie(pa, { optional: !0 }) ?? [])),
                (this.navigationTransitions = ie(nu)),
                (this.urlSerializer = ie(Hs)),
                (this.location = ie(vd)),
                (this.isNgZoneEnabled =
                  ie(U) instanceof U && U.isInAngularZone()),
                this.resetConfig(this.config),
                (this.currentUrlTree = new Jr()),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.routerState = ED(this.currentUrlTree, null)),
                this.navigationTransitions.setupNavigations(this).subscribe(
                  (e) => {
                    (this.lastSuccessfulId = e.id),
                      (this.currentPageId = e.targetPageId);
                  },
                  (e) => {
                    this.console.warn(`Unhandled Navigation Error: ${e}`);
                  }
                );
            }
            resetRootComponentType(e) {
              (this.routerState.root.component = e),
                (this.navigationTransitions.rootComponentType = e);
            }
            initialNavigation() {
              if (
                (this.setUpLocationChangeListener(),
                !this.navigationTransitions.hasRequestedNavigation)
              ) {
                const e = this.location.getState();
                this.navigateToSyncWithBrowser(this.location.path(!0), $s, e);
              }
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe((e) => {
                  const i = 'popstate' === e.type ? 'popstate' : 'hashchange';
                  'popstate' === i &&
                    setTimeout(() => {
                      this.navigateToSyncWithBrowser(e.url, i, e.state);
                    }, 0);
                }));
            }
            navigateToSyncWithBrowser(e, i, r) {
              const o = { replaceUrl: !0 },
                a = r?.navigationId ? r : null;
              if (r) {
                const l = { ...r };
                delete l.navigationId,
                  delete l.ɵrouterPageId,
                  0 !== Object.keys(l).length && (o.state = l);
              }
              const s = this.parseUrl(e);
              this.scheduleNavigation(s, i, a, o);
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.navigationTransitions.currentNavigation;
            }
            resetConfig(e) {
              (this.config = e.map(Zp)),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.navigationTransitions.complete(),
                this.locationSubscription &&
                  (this.locationSubscription.unsubscribe(),
                  (this.locationSubscription = void 0)),
                (this.disposed = !0);
            }
            createUrlTree(e, i = {}) {
              const {
                  relativeTo: r,
                  queryParams: o,
                  fragment: a,
                  queryParamsHandling: s,
                  preserveFragment: l,
                } = i,
                c = l ? this.currentUrlTree.fragment : a;
              let d = null;
              switch (s) {
                case 'merge':
                  d = { ...this.currentUrlTree.queryParams, ...o };
                  break;
                case 'preserve':
                  d = this.currentUrlTree.queryParams;
                  break;
                default:
                  d = o || null;
              }
              return (
                null !== d && (d = this.removeEmptyProps(d)),
                this.urlCreationStrategy.createUrlTree(
                  r,
                  this.routerState,
                  this.currentUrlTree,
                  e,
                  d,
                  c ?? null
                )
              );
            }
            navigateByUrl(e, i = { skipLocationChange: !1 }) {
              const r = to(e) ? e : this.parseUrl(e),
                o = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
              return this.scheduleNavigation(o, $s, null, i);
            }
            navigate(e, i = { skipLocationChange: !1 }) {
              return (
                (function l3(n) {
                  for (let t = 0; t < n.length; t++) {
                    if (null == n[t]) throw new k(4008, !1);
                  }
                })(e),
                this.navigateByUrl(this.createUrlTree(e, i), i)
              );
            }
            serializeUrl(e) {
              return this.urlSerializer.serialize(e);
            }
            parseUrl(e) {
              let i;
              try {
                i = this.urlSerializer.parse(e);
              } catch (r) {
                i = this.malformedUriErrorHandler(r, this.urlSerializer, e);
              }
              return i;
            }
            isActive(e, i) {
              let r;
              if (
                ((r = !0 === i ? { ...a3 } : !1 === i ? { ...s3 } : i), to(e))
              )
                return lD(this.currentUrlTree, e, r);
              const o = this.parseUrl(e);
              return lD(this.currentUrlTree, o, r);
            }
            removeEmptyProps(e) {
              return Object.keys(e).reduce((i, r) => {
                const o = e[r];
                return null != o && (i[r] = o), i;
              }, {});
            }
            scheduleNavigation(e, i, r, o, a) {
              if (this.disposed) return Promise.resolve(!1);
              let s, l, c, d;
              return (
                a
                  ? ((s = a.resolve), (l = a.reject), (c = a.promise))
                  : (c = new Promise((u, h) => {
                      (s = u), (l = h);
                    })),
                (d =
                  'computed' === this.canceledNavigationResolution
                    ? r && r.ɵrouterPageId
                      ? r.ɵrouterPageId
                      : o.replaceUrl || o.skipLocationChange
                      ? this.browserPageId ?? 0
                      : (this.browserPageId ?? 0) + 1
                    : 0),
                this.navigationTransitions.handleNavigationRequest({
                  targetPageId: d,
                  source: i,
                  restoredState: r,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  rawUrl: e,
                  extras: o,
                  resolve: s,
                  reject: l,
                  promise: c,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                c.catch((u) => Promise.reject(u))
              );
            }
            setBrowserUrl(e, i) {
              const r = this.urlSerializer.serialize(e),
                o = {
                  ...i.extras.state,
                  ...this.generateNgRouterState(i.id, i.targetPageId),
                };
              this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl
                ? this.location.replaceState(r, '', o)
                : this.location.go(r, '', o);
            }
            restoreHistory(e, i = !1) {
              if ('computed' === this.canceledNavigationResolution) {
                const r = this.currentPageId - e.targetPageId;
                ('popstate' !== e.source &&
                  'eager' !== this.urlUpdateStrategy &&
                  this.currentUrlTree !==
                    this.getCurrentNavigation()?.finalUrl) ||
                0 === r
                  ? this.currentUrlTree ===
                      this.getCurrentNavigation()?.finalUrl &&
                    0 === r &&
                    (this.resetState(e),
                    (this.browserUrlTree = e.currentUrlTree),
                    this.resetUrlToCurrentUrlTree())
                  : this.location.historyGo(r);
              } else
                'replace' === this.canceledNavigationResolution &&
                  (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
            }
            resetState(e) {
              (this.routerState = e.currentRouterState),
                (this.currentUrlTree = e.currentUrlTree),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(
                  this.currentUrlTree,
                  e.rawUrl
                ));
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(
                this.urlSerializer.serialize(this.rawUrlTree),
                '',
                this.generateNgRouterState(
                  this.lastSuccessfulId,
                  this.currentPageId
                )
              );
            }
            generateNgRouterState(e, i) {
              return 'computed' === this.canceledNavigationResolution
                ? { navigationId: e, ɵrouterPageId: i }
                : { navigationId: e };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        gr = (() => {
          class n {
            constructor(e, i, r, o, a, s) {
              (this.router = e),
                (this.route = i),
                (this.tabIndexAttribute = r),
                (this.renderer = o),
                (this.el = a),
                (this.locationStrategy = s),
                (this._preserveFragment = !1),
                (this._skipLocationChange = !1),
                (this._replaceUrl = !1),
                (this.href = null),
                (this.commands = null),
                (this.onChanges = new z());
              const l = a.nativeElement.tagName?.toLowerCase();
              (this.isAnchorElement = 'a' === l || 'area' === l),
                this.isAnchorElement
                  ? (this.subscription = e.events.subscribe((c) => {
                      c instanceof no && this.updateHref();
                    }))
                  : this.setTabIndexIfNotOnNativeEl('0');
            }
            set preserveFragment(e) {
              this._preserveFragment = oa(e);
            }
            get preserveFragment() {
              return this._preserveFragment;
            }
            set skipLocationChange(e) {
              this._skipLocationChange = oa(e);
            }
            get skipLocationChange() {
              return this._skipLocationChange;
            }
            set replaceUrl(e) {
              this._replaceUrl = oa(e);
            }
            get replaceUrl() {
              return this._replaceUrl;
            }
            setTabIndexIfNotOnNativeEl(e) {
              null != this.tabIndexAttribute ||
                this.isAnchorElement ||
                this.applyAttributeValue('tabindex', e);
            }
            ngOnChanges(e) {
              this.isAnchorElement && this.updateHref(),
                this.onChanges.next(this);
            }
            set routerLink(e) {
              null != e
                ? ((this.commands = Array.isArray(e) ? e : [e]),
                  this.setTabIndexIfNotOnNativeEl('0'))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick(e, i, r, o, a) {
              return (
                !!(
                  null === this.urlTree ||
                  (this.isAnchorElement &&
                    (0 !== e ||
                      i ||
                      r ||
                      o ||
                      a ||
                      ('string' == typeof this.target &&
                        '_self' != this.target)))
                ) ||
                (this.router.navigateByUrl(this.urlTree, {
                  skipLocationChange: this.skipLocationChange,
                  replaceUrl: this.replaceUrl,
                  state: this.state,
                }),
                !this.isAnchorElement)
              );
            }
            ngOnDestroy() {
              this.subscription?.unsubscribe();
            }
            updateHref() {
              this.href =
                null !== this.urlTree && this.locationStrategy
                  ? this.locationStrategy?.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree)
                    )
                  : null;
              const e =
                null === this.href
                  ? null
                  : (function by(n, t, e) {
                      return (function zI(n, t) {
                        return ('src' === t &&
                          ('embed' === n ||
                            'frame' === n ||
                            'iframe' === n ||
                            'media' === n ||
                            'script' === n)) ||
                          ('href' === t && ('base' === n || 'link' === n))
                          ? vy
                          : _y;
                      })(
                        t,
                        e
                      )(n);
                    })(
                      this.href,
                      this.el.nativeElement.tagName.toLowerCase(),
                      'href'
                    );
              this.applyAttributeValue('href', e);
            }
            applyAttributeValue(e, i) {
              const r = this.renderer,
                o = this.el.nativeElement;
              null !== i ? r.setAttribute(o, e, i) : r.removeAttribute(o, e);
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: this.preserveFragment,
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(We),
                m(In),
                cr('tabindex'),
                m(Ni),
                m(j),
                m(Qr)
              );
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'routerLink', '']],
              hostVars: 1,
              hostBindings: function (e, i) {
                1 & e &&
                  O('click', function (o) {
                    return i.onClick(
                      o.button,
                      o.ctrlKey,
                      o.shiftKey,
                      o.altKey,
                      o.metaKey
                    );
                  }),
                  2 & e && ve('target', i.target);
              },
              inputs: {
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                state: 'state',
                relativeTo: 'relativeTo',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                routerLink: 'routerLink',
              },
              standalone: !0,
              features: [dt],
            })),
            n
          );
        })();
      class tM {}
      let u3 = (() => {
        class n {
          constructor(e, i, r, o, a) {
            (this.router = e),
              (this.injector = r),
              (this.preloadingStrategy = o),
              (this.loader = a);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                Qe((e) => e instanceof no),
                fr(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(e, i) {
            const r = [];
            for (const o of i) {
              o.providers &&
                !o._injector &&
                (o._injector = sd(o.providers, e, `Route: ${o.path}`));
              const a = o._injector ?? e,
                s = o._loadedInjector ?? a;
              (o.loadChildren && !o._loadedRoutes && void 0 === o.canLoad) ||
              (o.loadComponent && !o._loadedComponent)
                ? r.push(this.preloadConfig(a, o))
                : (o.children || o._loadedRoutes) &&
                  r.push(this.processRoutes(s, o.children ?? o._loadedRoutes));
            }
            return at(r).pipe(bo());
          }
          preloadConfig(e, i) {
            return this.preloadingStrategy.preload(i, () => {
              let r;
              r =
                i.loadChildren && void 0 === i.canLoad
                  ? this.loader.loadChildren(e, i)
                  : H(null);
              const o = r.pipe(
                yt((a) =>
                  null === a
                    ? H(void 0)
                    : ((i._loadedRoutes = a.routes),
                      (i._loadedInjector = a.injector),
                      this.processRoutes(a.injector ?? e, a.routes))
                )
              );
              return i.loadComponent && !i._loadedComponent
                ? at([o, this.loader.loadComponent(i)]).pipe(bo())
                : o;
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(We), C(TC), C(si), C(tM), C(ng));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      const ig = new A('');
      let nM = (() => {
        class n {
          constructor(e, i, r, o, a = {}) {
            (this.urlSerializer = e),
              (this.transitions = i),
              (this.viewportScroller = r),
              (this.zone = o),
              (this.options = a),
              (this.lastId = 0),
              (this.lastSource = 'imperative'),
              (this.restoredId = 0),
              (this.store = {}),
              (a.scrollPositionRestoration =
                a.scrollPositionRestoration || 'disabled'),
              (a.anchorScrolling = a.anchorScrolling || 'disabled');
          }
          init() {
            'disabled' !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration('manual'),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe((e) => {
              e instanceof zp
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = e.navigationTrigger),
                  (this.restoredId = e.restoredState
                    ? e.restoredState.navigationId
                    : 0))
                : e instanceof no &&
                  ((this.lastId = e.id),
                  this.scheduleScrollEvent(
                    e,
                    this.urlSerializer.parse(e.urlAfterRedirects).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe((e) => {
              e instanceof xD &&
                (e.position
                  ? 'top' === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : 'enabled' === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(e.position)
                  : e.anchor && 'enabled' === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(e.anchor)
                  : 'disabled' !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(e, i) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new xD(
                      e,
                      'popstate' === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      i
                    )
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
        }
        return (
          (n.ɵfac = function (e) {
            Ur();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function io(n, t) {
        return { ɵkind: n, ɵproviders: t };
      }
      function rM() {
        const n = ie(Dt);
        return (t) => {
          const e = n.get(ra);
          if (t !== e.components[0]) return;
          const i = n.get(We),
            r = n.get(oM);
          1 === n.get(og) && i.initialNavigation(),
            n.get(aM, null, J.Optional)?.setUpPreloading(),
            n.get(ig, null, J.Optional)?.init(),
            i.resetRootComponentType(e.componentTypes[0]),
            r.closed || (r.next(), r.unsubscribe());
        };
      }
      const oM = new A('', { factory: () => new z() }),
        og = new A('', { providedIn: 'root', factory: () => 1 });
      const aM = new A('');
      function g3(n) {
        return io(0, [
          { provide: aM, useExisting: u3 },
          { provide: tM, useExisting: n },
        ]);
      }
      const sM = new A('ROUTER_FORROOT_GUARD'),
        _3 = [
          vd,
          { provide: Hs, useClass: Pp },
          We,
          Ws,
          {
            provide: In,
            useFactory: function iM(n) {
              return n.routerState.root;
            },
            deps: [We],
          },
          ng,
          [],
        ];
      function v3() {
        return new LC('Router', We);
      }
      let lM = (() => {
        class n {
          constructor(e) {}
          static forRoot(e, i) {
            return {
              ngModule: n,
              providers: [
                _3,
                [],
                { provide: pa, multi: !0, useValue: e },
                {
                  provide: sM,
                  useFactory: C3,
                  deps: [[We, new hn(), new oi()]],
                },
                { provide: iu, useValue: i || {} },
                i?.useHash
                  ? { provide: Qr, useClass: CL }
                  : { provide: Qr, useClass: ax },
                {
                  provide: ig,
                  useFactory: () => {
                    const n = ie(z2),
                      t = ie(U),
                      e = ie(iu),
                      i = ie(nu),
                      r = ie(Hs);
                    return (
                      e.scrollOffset && n.setOffset(e.scrollOffset),
                      new nM(r, i, n, t, e)
                    );
                  },
                },
                i?.preloadingStrategy
                  ? g3(i.preloadingStrategy).ɵproviders
                  : [],
                { provide: LC, multi: !0, useFactory: v3 },
                i?.initialNavigation ? x3(i) : [],
                [
                  { provide: cM, useFactory: rM },
                  { provide: AC, multi: !0, useExisting: cM },
                ],
              ],
            };
          }
          static forChild(e) {
            return {
              ngModule: n,
              providers: [{ provide: pa, multi: !0, useValue: e }],
            };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(sM, 8));
          }),
          (n.ɵmod = he({ type: n })),
          (n.ɵinj = de({ imports: [Kp] })),
          n
        );
      })();
      function C3(n) {
        return 'guarded';
      }
      function x3(n) {
        return [
          'disabled' === n.initialNavigation
            ? io(3, [
                {
                  provide: ud,
                  multi: !0,
                  useFactory: () => {
                    const t = ie(We);
                    return () => {
                      t.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: og, useValue: 2 },
              ]).ɵproviders
            : [],
          'enabledBlocking' === n.initialNavigation
            ? io(2, [
                { provide: og, useValue: 0 },
                {
                  provide: ud,
                  multi: !0,
                  deps: [Dt],
                  useFactory: (t) => {
                    const e = t.get(yL, Promise.resolve());
                    return () =>
                      e.then(
                        () =>
                          new Promise((r) => {
                            const o = t.get(We),
                              a = t.get(oM);
                            (function i(r) {
                              t.get(We)
                                .events.pipe(
                                  Qe(
                                    (a) =>
                                      a instanceof no ||
                                      a instanceof Wd ||
                                      a instanceof CD
                                  ),
                                  q(
                                    (a) =>
                                      a instanceof no ||
                                      (a instanceof Wd &&
                                        (0 === a.code || 1 === a.code) &&
                                        null)
                                  ),
                                  Qe((a) => null !== a),
                                  ot(1)
                                )
                                .subscribe(() => {
                                  r();
                                });
                            })(() => {
                              r(!0);
                            }),
                              (t.get(nu).afterPreactivation = () => (
                                r(!0), a.closed ? H(void 0) : a
                              )),
                              o.initialNavigation();
                          })
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const cM = new A('');
      let ag;
      try {
        ag = typeof Intl < 'u' && Intl.v8BreakIterator;
      } catch {
        ag = !1;
      }
      let _a,
        je = (() => {
          class n {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? (function H2(n) {
                      return n === Mx;
                    })(this._platformId)
                  : 'object' == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !ag) &&
                  typeof CSS < 'u' &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !('MSStream' in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(md));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      const dM = [
        'color',
        'button',
        'checkbox',
        'date',
        'datetime-local',
        'email',
        'file',
        'hidden',
        'image',
        'month',
        'number',
        'password',
        'radio',
        'range',
        'reset',
        'search',
        'submit',
        'tel',
        'text',
        'time',
        'url',
        'week',
      ];
      function uM() {
        if (_a) return _a;
        if ('object' != typeof document || !document)
          return (_a = new Set(dM)), _a;
        let n = document.createElement('input');
        return (
          (_a = new Set(
            dM.filter((t) => (n.setAttribute('type', t), n.type === t))
          )),
          _a
        );
      }
      let Js, ru, oo, sg;
      function ro(n) {
        return (function M3() {
          if (null == Js && typeof window < 'u')
            try {
              window.addEventListener(
                'test',
                null,
                Object.defineProperty({}, 'passive', { get: () => (Js = !0) })
              );
            } finally {
              Js = Js || !1;
            }
          return Js;
        })()
          ? n
          : !!n.capture;
      }
      function hM() {
        if (null == oo) {
          if (
            'object' != typeof document ||
            !document ||
            'function' != typeof Element ||
            !Element
          )
            return (oo = !1), oo;
          if ('scrollBehavior' in document.documentElement.style) oo = !0;
          else {
            const n = Element.prototype.scrollTo;
            oo = !!n && !/\{\s*\[native code\]\s*\}/.test(n.toString());
          }
        }
        return oo;
      }
      function el() {
        if ('object' != typeof document || !document) return 0;
        if (null == ru) {
          const n = document.createElement('div'),
            t = n.style;
          (n.dir = 'rtl'),
            (t.width = '1px'),
            (t.overflow = 'auto'),
            (t.visibility = 'hidden'),
            (t.pointerEvents = 'none'),
            (t.position = 'absolute');
          const e = document.createElement('div'),
            i = e.style;
          (i.width = '2px'),
            (i.height = '1px'),
            n.appendChild(e),
            document.body.appendChild(n),
            (ru = 0),
            0 === n.scrollLeft &&
              ((n.scrollLeft = 1), (ru = 0 === n.scrollLeft ? 1 : 2)),
            n.remove();
        }
        return ru;
      }
      function _r(n) {
        return n.composedPath ? n.composedPath()[0] : n.target;
      }
      function lg() {
        return (
          (typeof __karma__ < 'u' && !!__karma__) ||
          (typeof jasmine < 'u' && !!jasmine) ||
          (typeof jest < 'u' && !!jest) ||
          (typeof Mocha < 'u' && !!Mocha)
        );
      }
      function Zn(n, ...t) {
        return t.length
          ? t.some((e) => n[e])
          : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
      }
      class j3 extends Oe {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      const cu = {
        setInterval(n, t, ...e) {
          const { delegate: i } = cu;
          return i?.setInterval
            ? i.setInterval(n, t, ...e)
            : setInterval(n, t, ...e);
        },
        clearInterval(n) {
          const { delegate: t } = cu;
          return (t?.clearInterval || clearInterval)(n);
        },
        delegate: void 0,
      };
      class dg extends j3 {
        constructor(t, e) {
          super(t, e),
            (this.scheduler = t),
            (this.work = e),
            (this.pending = !1);
        }
        schedule(t, e = 0) {
          var i;
          if (this.closed) return this;
          this.state = t;
          const r = this.id,
            o = this.scheduler;
          return (
            null != r && (this.id = this.recycleAsyncId(o, r, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id =
              null !== (i = this.id) && void 0 !== i
                ? i
                : this.requestAsyncId(o, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, i = 0) {
          return cu.setInterval(t.flush.bind(t, this), i);
        }
        recycleAsyncId(t, e, i = 0) {
          if (null != i && this.delay === i && !1 === this.pending) return e;
          null != e && cu.clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const i = this._execute(t, e);
          if (i) return i;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let r,
            i = !1;
          try {
            this.work(t);
          } catch (o) {
            (i = !0),
              (r = o || new Error('Scheduled action threw falsy error'));
          }
          if (i) return this.unsubscribe(), r;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: t, scheduler: e } = this,
              { actions: i } = e;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              vo(i, this),
              null != t && (this.id = this.recycleAsyncId(e, t, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      const mM = { now: () => (mM.delegate || Date).now(), delegate: void 0 };
      class rl {
        constructor(t, e = rl.now) {
          (this.schedulerActionCtor = t), (this.now = e);
        }
        schedule(t, e = 0, i) {
          return new this.schedulerActionCtor(this, t).schedule(i, e);
        }
      }
      rl.now = mM.now;
      class ug extends rl {
        constructor(t, e = rl.now) {
          super(t, e), (this.actions = []), (this._active = !1);
        }
        flush(t) {
          const { actions: e } = this;
          if (this._active) return void e.push(t);
          let i;
          this._active = !0;
          do {
            if ((i = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this._active = !1), i)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw i;
          }
        }
      }
      const du = new ug(dg),
        U3 = du;
      function uu(n, t = du) {
        return Je((e, i) => {
          let r = null,
            o = null,
            a = null;
          const s = () => {
            if (r) {
              r.unsubscribe(), (r = null);
              const c = o;
              (o = null), i.next(c);
            }
          };
          function l() {
            const c = a + n,
              d = t.now();
            if (d < c) return (r = this.schedule(void 0, c - d)), void i.add(r);
            s();
          }
          e.subscribe(
            qe(
              i,
              (c) => {
                (o = c), (a = t.now()), r || ((r = t.schedule(l, n)), i.add(r));
              },
              () => {
                s(), i.complete();
              },
              void 0,
              () => {
                o = r = null;
              }
            )
          );
        });
      }
      function fM(n) {
        return Qe((t, e) => n <= e);
      }
      function hg(n, t = or) {
        return (
          (n = n ?? $3),
          Je((e, i) => {
            let r,
              o = !0;
            e.subscribe(
              qe(i, (a) => {
                const s = t(a);
                (o || !n(r, s)) && ((o = !1), (r = s), i.next(a));
              })
            );
          })
        );
      }
      function $3(n, t) {
        return n === t;
      }
      function me(n) {
        return Je((t, e) => {
          It(n).subscribe(qe(e, () => e.complete(), nc)),
            !e.closed && t.subscribe(e);
        });
      }
      function ce(n) {
        return null != n && 'false' != `${n}`;
      }
      function yi(n, t = 0) {
        return pM(n) ? Number(n) : t;
      }
      function pM(n) {
        return !isNaN(parseFloat(n)) && !isNaN(Number(n));
      }
      function hu(n) {
        return Array.isArray(n) ? n : [n];
      }
      function vt(n) {
        return null == n ? '' : 'string' == typeof n ? n : `${n}px`;
      }
      function Wi(n) {
        return n instanceof j ? n.nativeElement : n;
      }
      let gM = (() => {
          class n {
            create(e) {
              return typeof MutationObserver > 'u'
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        G3 = (() => {
          class n {
            constructor(e) {
              (this._mutationObserverFactory = e),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((e, i) =>
                this._cleanupObserver(i)
              );
            }
            observe(e) {
              const i = Wi(e);
              return new Fe((r) => {
                const a = this._observeElement(i).subscribe(r);
                return () => {
                  a.unsubscribe(), this._unobserveElement(i);
                };
              });
            }
            _observeElement(e) {
              if (this._observedElements.has(e))
                this._observedElements.get(e).count++;
              else {
                const i = new z(),
                  r = this._mutationObserverFactory.create((o) => i.next(o));
                r &&
                  r.observe(e, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(e, {
                    observer: r,
                    stream: i,
                    count: 1,
                  });
              }
              return this._observedElements.get(e).stream;
            }
            _unobserveElement(e) {
              this._observedElements.has(e) &&
                (this._observedElements.get(e).count--,
                this._observedElements.get(e).count ||
                  this._cleanupObserver(e));
            }
            _cleanupObserver(e) {
              if (this._observedElements.has(e)) {
                const { observer: i, stream: r } =
                  this._observedElements.get(e);
                i && i.disconnect(),
                  r.complete(),
                  this._observedElements.delete(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(gM));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        mg = (() => {
          class n {
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ce(e)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(e) {
              (this._debounce = yi(e)), this._subscribe();
            }
            constructor(e, i, r) {
              (this._contentObserver = e),
                (this._elementRef = i),
                (this._ngZone = r),
                (this.event = new re()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const e = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? e.pipe(uu(this.debounce)) : e
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(G3), m(j), m(U));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'cdkObserveContent', '']],
              inputs: {
                disabled: ['cdkObserveContentDisabled', 'disabled'],
                debounce: 'debounce',
              },
              outputs: { event: 'cdkObserveContent' },
              exportAs: ['cdkObserveContent'],
            })),
            n
          );
        })(),
        fg = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ providers: [gM] })),
            n
          );
        })();
      const _M = new Set();
      let va,
        W3 = (() => {
          class n {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : q3);
            }
            matchMedia(e) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function Y3(n) {
                    if (!_M.has(n))
                      try {
                        va ||
                          ((va = document.createElement('style')),
                          va.setAttribute('type', 'text/css'),
                          document.head.appendChild(va)),
                          va.sheet &&
                            (va.sheet.insertRule(`@media ${n} {body{ }}`, 0),
                            _M.add(n));
                      } catch (t) {
                        console.error(t);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(je));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      function q3(n) {
        return {
          matches: 'all' === n || '' === n,
          media: n,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let pg = (() => {
        class n {
          constructor(e, i) {
            (this._mediaMatcher = e),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new z());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return vM(hu(e)).some((r) => this._registerQuery(r).mql.matches);
          }
          observe(e) {
            let o = aa(vM(hu(e)).map((a) => this._registerQuery(a).observable));
            return (
              (o = Ls(o.pipe(ot(1)), o.pipe(fM(1), uu(0)))),
              o.pipe(
                q((a) => {
                  const s = { matches: !1, breakpoints: {} };
                  return (
                    a.forEach(({ matches: l, query: c }) => {
                      (s.matches = s.matches || l), (s.breakpoints[c] = l);
                    }),
                    s
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const i = this._mediaMatcher.matchMedia(e),
              o = {
                observable: new Fe((a) => {
                  const s = (l) => this._zone.run(() => a.next(l));
                  return (
                    i.addListener(s),
                    () => {
                      i.removeListener(s);
                    }
                  );
                }).pipe(
                  _i(i),
                  q(({ matches: a }) => ({ query: e, matches: a })),
                  me(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(e, o), o;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(W3), C(U));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      function vM(n) {
        return n
          .map((t) => t.split(','))
          .reduce((t, e) => t.concat(e))
          .map((t) => t.trim());
      }
      function mu(n, t) {
        return (n.getAttribute(t) || '').match(/\S+/g) || [];
      }
      const yM = 'cdk-describedby-message',
        fu = 'cdk-describedby-host';
      let gg = 0,
        Q3 = (() => {
          class n {
            constructor(e, i) {
              (this._platform = i),
                (this._messageRegistry = new Map()),
                (this._messagesContainer = null),
                (this._id = '' + gg++),
                (this._document = e),
                (this._id = ie(ia) + '-' + gg++);
            }
            describe(e, i, r) {
              if (!this._canBeDescribed(e, i)) return;
              const o = _g(i, r);
              'string' != typeof i
                ? (wM(i, this._id),
                  this._messageRegistry.set(o, {
                    messageElement: i,
                    referenceCount: 0,
                  }))
                : this._messageRegistry.has(o) ||
                  this._createMessageElement(i, r),
                this._isElementDescribedByMessage(e, o) ||
                  this._addMessageReference(e, o);
            }
            removeDescription(e, i, r) {
              if (!i || !this._isElementNode(e)) return;
              const o = _g(i, r);
              if (
                (this._isElementDescribedByMessage(e, o) &&
                  this._removeMessageReference(e, o),
                'string' == typeof i)
              ) {
                const a = this._messageRegistry.get(o);
                a && 0 === a.referenceCount && this._deleteMessageElement(o);
              }
              0 === this._messagesContainer?.childNodes.length &&
                (this._messagesContainer.remove(),
                (this._messagesContainer = null));
            }
            ngOnDestroy() {
              const e = this._document.querySelectorAll(
                `[${fu}="${this._id}"]`
              );
              for (let i = 0; i < e.length; i++)
                this._removeCdkDescribedByReferenceIds(e[i]),
                  e[i].removeAttribute(fu);
              this._messagesContainer?.remove(),
                (this._messagesContainer = null),
                this._messageRegistry.clear();
            }
            _createMessageElement(e, i) {
              const r = this._document.createElement('div');
              wM(r, this._id),
                (r.textContent = e),
                i && r.setAttribute('role', i),
                this._createMessagesContainer(),
                this._messagesContainer.appendChild(r),
                this._messageRegistry.set(_g(e, i), {
                  messageElement: r,
                  referenceCount: 0,
                });
            }
            _deleteMessageElement(e) {
              this._messageRegistry.get(e)?.messageElement?.remove(),
                this._messageRegistry.delete(e);
            }
            _createMessagesContainer() {
              if (this._messagesContainer) return;
              const e = 'cdk-describedby-message-container',
                i = this._document.querySelectorAll(`.${e}[platform="server"]`);
              for (let o = 0; o < i.length; o++) i[o].remove();
              const r = this._document.createElement('div');
              (r.style.visibility = 'hidden'),
                r.classList.add(e),
                r.classList.add('cdk-visually-hidden'),
                this._platform &&
                  !this._platform.isBrowser &&
                  r.setAttribute('platform', 'server'),
                this._document.body.appendChild(r),
                (this._messagesContainer = r);
            }
            _removeCdkDescribedByReferenceIds(e) {
              const i = mu(e, 'aria-describedby').filter(
                (r) => 0 != r.indexOf(yM)
              );
              e.setAttribute('aria-describedby', i.join(' '));
            }
            _addMessageReference(e, i) {
              const r = this._messageRegistry.get(i);
              (function X3(n, t, e) {
                const i = mu(n, t);
                i.some((r) => r.trim() == e.trim()) ||
                  (i.push(e.trim()), n.setAttribute(t, i.join(' ')));
              })(e, 'aria-describedby', r.messageElement.id),
                e.setAttribute(fu, this._id),
                r.referenceCount++;
            }
            _removeMessageReference(e, i) {
              const r = this._messageRegistry.get(i);
              r.referenceCount--,
                (function Z3(n, t, e) {
                  const r = mu(n, t).filter((o) => o != e.trim());
                  r.length
                    ? n.setAttribute(t, r.join(' '))
                    : n.removeAttribute(t);
                })(e, 'aria-describedby', r.messageElement.id),
                e.removeAttribute(fu);
            }
            _isElementDescribedByMessage(e, i) {
              const r = mu(e, 'aria-describedby'),
                o = this._messageRegistry.get(i),
                a = o && o.messageElement.id;
              return !!a && -1 != r.indexOf(a);
            }
            _canBeDescribed(e, i) {
              if (!this._isElementNode(e)) return !1;
              if (i && 'object' == typeof i) return !0;
              const r = null == i ? '' : `${i}`.trim(),
                o = e.getAttribute('aria-label');
              return !(!r || (o && o.trim() === r));
            }
            _isElementNode(e) {
              return e.nodeType === this._document.ELEMENT_NODE;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(oe), C(je));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      function _g(n, t) {
        return 'string' == typeof n ? `${t || ''}/${n}` : n;
      }
      function wM(n, t) {
        n.id || (n.id = `${yM}-${t}-${gg++}`);
      }
      class CM {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new z()),
            (this._typeaheadSubscription = Oe.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._pageUpAndDown = { enabled: !1, delta: 10 }),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new z()),
            (this.change = new z()),
            t instanceof Xr &&
              (this._itemChangesSubscription = t.changes.subscribe((e) => {
                if (this._activeItem) {
                  const r = e.toArray().indexOf(this._activeItem);
                  r > -1 &&
                    r !== this._activeItemIndex &&
                    (this._activeItemIndex = r);
                }
              }));
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                _t((e) => this._pressedLetters.push(e)),
                uu(t),
                Qe(() => this._pressedLetters.length > 0),
                q(() => this._pressedLetters.join(''))
              )
              .subscribe((e) => {
                const i = this._getItemsArray();
                for (let r = 1; r < i.length + 1; r++) {
                  const o = (this._activeItemIndex + r) % i.length,
                    a = i[o];
                  if (
                    !this._skipPredicateFn(a) &&
                    0 === a.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(o);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        cancelTypeahead() {
          return (this._pressedLetters = []), this;
        }
        withHomeAndEnd(t = !0) {
          return (this._homeAndEnd = t), this;
        }
        withPageUpDown(t = !0, e = 10) {
          return (this._pageUpAndDown = { enabled: t, delta: e }), this;
        }
        setActiveItem(t) {
          const e = this._activeItem;
          this.updateActiveItem(t),
            this._activeItem !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            r = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              (o) => !t[o] || this._allowedModifierKeys.indexOf(o) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && r) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && r) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && r) {
                'rtl' === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && r) {
                'rtl' === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && r) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && r) {
                this.setLastItemActive();
                break;
              }
              return;
            case 33:
              if (this._pageUpAndDown.enabled && r) {
                const o = this._activeItemIndex - this._pageUpAndDown.delta;
                this._setActiveItemByIndex(o > 0 ? o : 0, 1);
                break;
              }
              return;
            case 34:
              if (this._pageUpAndDown.enabled && r) {
                const o = this._activeItemIndex + this._pageUpAndDown.delta,
                  a = this._getItemsArray().length;
                this._setActiveItemByIndex(o < a ? o : a - 1, -1);
                break;
              }
              return;
            default:
              return void (
                (r || Zn(t, 'shiftKey')) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            i = 'number' == typeof t ? t : e.indexOf(t);
          (this._activeItem = e[i] ?? null), (this._activeItemIndex = i);
        }
        destroy() {
          this._typeaheadSubscription.unsubscribe(),
            this._itemChangesSubscription?.unsubscribe(),
            this._letterKeyStream.complete(),
            this.tabOut.complete(),
            this.change.complete(),
            (this._pressedLetters = []);
        }
        _setActiveItemByDelta(t) {
          this._wrap
            ? this._setActiveInWrapMode(t)
            : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let i = 1; i <= e.length; i++) {
            const r = (this._activeItemIndex + t * i + e.length) % e.length;
            if (!this._skipPredicateFn(e[r])) return void this.setActiveItem(r);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const i = this._getItemsArray();
          if (i[t]) {
            for (; this._skipPredicateFn(i[t]); ) if (!i[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof Xr
            ? this._items.toArray()
            : this._items;
        }
      }
      class J3 extends CM {
        setActiveItem(t) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(t),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class xM extends CM {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(t) {
          return (this._origin = t), this;
        }
        setActiveItem(t) {
          super.setActiveItem(t),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let DM = (() => {
        class n {
          constructor(e) {
            this._platform = e;
          }
          isDisabled(e) {
            return e.hasAttribute('disabled');
          }
          isVisible(e) {
            return (
              (function t4(n) {
                return !!(
                  n.offsetWidth ||
                  n.offsetHeight ||
                  ('function' == typeof n.getClientRects &&
                    n.getClientRects().length)
                );
              })(e) && 'visible' === getComputedStyle(e).visibility
            );
          }
          isTabbable(e) {
            if (!this._platform.isBrowser) return !1;
            const i = (function e4(n) {
              try {
                return n.frameElement;
              } catch {
                return null;
              }
            })(
              (function c4(n) {
                return (
                  (n.ownerDocument && n.ownerDocument.defaultView) || window
                );
              })(e)
            );
            if (i && (-1 === EM(i) || !this.isVisible(i))) return !1;
            let r = e.nodeName.toLowerCase(),
              o = EM(e);
            return e.hasAttribute('contenteditable')
              ? -1 !== o
              : !(
                  'iframe' === r ||
                  'object' === r ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function s4(n) {
                      let t = n.nodeName.toLowerCase(),
                        e = 'input' === t && n.type;
                      return (
                        'text' === e ||
                        'password' === e ||
                        'select' === t ||
                        'textarea' === t
                      );
                    })(e))
                ) &&
                  ('audio' === r
                    ? !!e.hasAttribute('controls') && -1 !== o
                    : 'video' === r
                    ? -1 !== o &&
                      (null !== o ||
                        this._platform.FIREFOX ||
                        e.hasAttribute('controls'))
                    : e.tabIndex >= 0);
          }
          isFocusable(e, i) {
            return (
              (function l4(n) {
                return (
                  !(function i4(n) {
                    return (
                      (function o4(n) {
                        return 'input' == n.nodeName.toLowerCase();
                      })(n) && 'hidden' == n.type
                    );
                  })(n) &&
                  ((function n4(n) {
                    let t = n.nodeName.toLowerCase();
                    return (
                      'input' === t ||
                      'select' === t ||
                      'button' === t ||
                      'textarea' === t
                    );
                  })(n) ||
                    (function r4(n) {
                      return (
                        (function a4(n) {
                          return 'a' == n.nodeName.toLowerCase();
                        })(n) && n.hasAttribute('href')
                      );
                    })(n) ||
                    n.hasAttribute('contenteditable') ||
                    MM(n))
                );
              })(e) &&
              !this.isDisabled(e) &&
              (i?.ignoreVisibility || this.isVisible(e))
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(je));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      function MM(n) {
        if (!n.hasAttribute('tabindex') || void 0 === n.tabIndex) return !1;
        let t = n.getAttribute('tabindex');
        return !(!t || isNaN(parseInt(t, 10)));
      }
      function EM(n) {
        if (!MM(n)) return null;
        const t = parseInt(n.getAttribute('tabindex') || '', 10);
        return isNaN(t) ? -1 : t;
      }
      class d4 {
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor),
              this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        constructor(t, e, i, r, o = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = i),
            (this._document = r),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            o || this.attachAnchors();
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t &&
            (t.removeEventListener('focus', this.startAnchorListener),
            t.remove()),
            e &&
              (e.removeEventListener('focus', this.endAnchorListener),
              e.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  'focus',
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    'focus',
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement(t)));
          });
        }
        focusFirstTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement(t)));
          });
        }
        focusLastTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement(t)));
          });
        }
        _getRegionBoundary(t) {
          const e = this._element.querySelectorAll(
            `[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`
          );
          return 'start' == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(t) {
          const e = this._element.querySelector(
            '[cdk-focus-initial], [cdkFocusInitial]'
          );
          if (e) {
            if (!this._checker.isFocusable(e)) {
              const i = this._getFirstTabbableElement(e);
              return i?.focus(t), !!i;
            }
            return e.focus(t), !0;
          }
          return this.focusFirstTabbableElement(t);
        }
        focusFirstTabbableElement(t) {
          const e = this._getRegionBoundary('start');
          return e && e.focus(t), !!e;
        }
        focusLastTabbableElement(t) {
          const e = this._getRegionBoundary('end');
          return e && e.focus(t), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          const e = t.children;
          for (let i = 0; i < e.length; i++) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          const e = t.children;
          for (let i = e.length - 1; i >= 0; i--) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add('cdk-visually-hidden'),
            t.classList.add('cdk-focus-trap-anchor'),
            t.setAttribute('aria-hidden', 'true'),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute('tabindex', '0') : e.removeAttribute('tabindex');
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor),
            this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable
            ? t()
            : this._ngZone.onStable.pipe(ot(1)).subscribe(t);
        }
      }
      let u4 = (() => {
        class n {
          constructor(e, i, r) {
            (this._checker = e), (this._ngZone = i), (this._document = r);
          }
          create(e, i = !1) {
            return new d4(e, this._checker, this._ngZone, this._document, i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(DM), C(U), C(oe));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      function vg(n) {
        return 0 === n.buttons || (0 === n.offsetX && 0 === n.offsetY);
      }
      function bg(n) {
        const t =
          (n.touches && n.touches[0]) ||
          (n.changedTouches && n.changedTouches[0]);
        return !(
          !t ||
          -1 !== t.identifier ||
          (null != t.radiusX && 1 !== t.radiusX) ||
          (null != t.radiusY && 1 !== t.radiusY)
        );
      }
      const h4 = new A('cdk-input-modality-detector-options'),
        m4 = { ignoreKeys: [18, 17, 224, 91, 16] },
        ba = ro({ passive: !0, capture: !0 });
      let f4 = (() => {
        class n {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(e, i, r, o) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new Lt(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (a) => {
                this._options?.ignoreKeys?.some((s) => s === a.keyCode) ||
                  (this._modality.next('keyboard'),
                  (this._mostRecentTarget = _r(a)));
              }),
              (this._onMousedown = (a) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(vg(a) ? 'keyboard' : 'mouse'),
                  (this._mostRecentTarget = _r(a)));
              }),
              (this._onTouchstart = (a) => {
                bg(a)
                  ? this._modality.next('keyboard')
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next('touch'),
                    (this._mostRecentTarget = _r(a)));
              }),
              (this._options = { ...m4, ...o }),
              (this.modalityDetected = this._modality.pipe(fM(1))),
              (this.modalityChanged = this.modalityDetected.pipe(hg())),
              e.isBrowser &&
                i.runOutsideAngular(() => {
                  r.addEventListener('keydown', this._onKeydown, ba),
                    r.addEventListener('mousedown', this._onMousedown, ba),
                    r.addEventListener('touchstart', this._onTouchstart, ba);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener('keydown', this._onKeydown, ba),
                document.removeEventListener(
                  'mousedown',
                  this._onMousedown,
                  ba
                ),
                document.removeEventListener(
                  'touchstart',
                  this._onTouchstart,
                  ba
                ));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(je), C(U), C(oe), C(h4, 8));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      const p4 = new A('liveAnnouncerElement', {
          providedIn: 'root',
          factory: function g4() {
            return null;
          },
        }),
        _4 = new A('LIVE_ANNOUNCER_DEFAULT_OPTIONS');
      let v4 = 0,
        yg = (() => {
          class n {
            constructor(e, i, r, o) {
              (this._ngZone = i),
                (this._defaultOptions = o),
                (this._document = r),
                (this._liveElement = e || this._createLiveElement());
            }
            announce(e, ...i) {
              const r = this._defaultOptions;
              let o, a;
              return (
                1 === i.length && 'number' == typeof i[0]
                  ? (a = i[0])
                  : ([o, a] = i),
                this.clear(),
                clearTimeout(this._previousTimeout),
                o || (o = r && r.politeness ? r.politeness : 'polite'),
                null == a && r && (a = r.duration),
                this._liveElement.setAttribute('aria-live', o),
                this._liveElement.id &&
                  this._exposeAnnouncerToModals(this._liveElement.id),
                this._ngZone.runOutsideAngular(
                  () => (
                    this._currentPromise ||
                      (this._currentPromise = new Promise(
                        (s) => (this._currentResolve = s)
                      )),
                    clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = e),
                        'number' == typeof a &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            a
                          )),
                        this._currentResolve(),
                        (this._currentPromise = this._currentResolve = void 0);
                    }, 100)),
                    this._currentPromise
                  )
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = '');
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement?.remove(),
                (this._liveElement = null),
                this._currentResolve?.(),
                (this._currentPromise = this._currentResolve = void 0);
            }
            _createLiveElement() {
              const e = 'cdk-live-announcer-element',
                i = this._document.getElementsByClassName(e),
                r = this._document.createElement('div');
              for (let o = 0; o < i.length; o++) i[o].remove();
              return (
                r.classList.add(e),
                r.classList.add('cdk-visually-hidden'),
                r.setAttribute('aria-atomic', 'true'),
                r.setAttribute('aria-live', 'polite'),
                (r.id = 'cdk-live-announcer-' + v4++),
                this._document.body.appendChild(r),
                r
              );
            }
            _exposeAnnouncerToModals(e) {
              const i = this._document.querySelectorAll(
                'body > .cdk-overlay-container [aria-modal="true"]'
              );
              for (let r = 0; r < i.length; r++) {
                const o = i[r],
                  a = o.getAttribute('aria-owns');
                a
                  ? -1 === a.indexOf(e) &&
                    o.setAttribute('aria-owns', a + ' ' + e)
                  : o.setAttribute('aria-owns', e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(p4, 8), C(U), C(oe), C(_4, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      const b4 = new A('cdk-focus-monitor-default-options'),
        pu = ro({ passive: !0, capture: !0 });
      let ol = (() => {
        class n {
          constructor(e, i, r, o, a) {
            (this._ngZone = e),
              (this._platform = i),
              (this._inputModalityDetector = r),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new z()),
              (this._rootNodeFocusAndBlurListener = (s) => {
                for (let c = _r(s); c; c = c.parentElement)
                  'focus' === s.type ? this._onFocus(s, c) : this._onBlur(s, c);
              }),
              (this._document = o),
              (this._detectionMode = a?.detectionMode || 0);
          }
          monitor(e, i = !1) {
            const r = Wi(e);
            if (!this._platform.isBrowser || 1 !== r.nodeType) return H(null);
            const o =
                (function S3(n) {
                  if (
                    (function E3() {
                      if (null == sg) {
                        const n = typeof document < 'u' ? document.head : null;
                        sg = !(!n || (!n.createShadowRoot && !n.attachShadow));
                      }
                      return sg;
                    })()
                  ) {
                    const t = n.getRootNode ? n.getRootNode() : null;
                    if (
                      typeof ShadowRoot < 'u' &&
                      ShadowRoot &&
                      t instanceof ShadowRoot
                    )
                      return t;
                  }
                  return null;
                })(r) || this._getDocument(),
              a = this._elementInfo.get(r);
            if (a) return i && (a.checkChildren = !0), a.subject;
            const s = { checkChildren: i, subject: new z(), rootNode: o };
            return (
              this._elementInfo.set(r, s),
              this._registerGlobalListeners(s),
              s.subject
            );
          }
          stopMonitoring(e) {
            const i = Wi(e),
              r = this._elementInfo.get(i);
            r &&
              (r.subject.complete(),
              this._setClasses(i),
              this._elementInfo.delete(i),
              this._removeGlobalListeners(r));
          }
          focusVia(e, i, r) {
            const o = Wi(e);
            o === this._getDocument().activeElement
              ? this._getClosestElementsInfo(o).forEach(([s, l]) =>
                  this._originChanged(s, i, l)
                )
              : (this._setOrigin(i),
                'function' == typeof o.focus && o.focus(r));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? 'touch'
                  : 'program'
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : e && this._isLastInteractionFromInputLabel(e)
              ? 'mouse'
              : 'program';
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!e?.contains(this._inputModalityDetector._mostRecentTarget)
            );
          }
          _setClasses(e, i) {
            e.classList.toggle('cdk-focused', !!i),
              e.classList.toggle('cdk-touch-focused', 'touch' === i),
              e.classList.toggle('cdk-keyboard-focused', 'keyboard' === i),
              e.classList.toggle('cdk-mouse-focused', 'mouse' === i),
              e.classList.toggle('cdk-program-focused', 'program' === i);
          }
          _setOrigin(e, i = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = 'touch' === e && i),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, i) {
            const r = this._elementInfo.get(i),
              o = _r(e);
            !r ||
              (!r.checkChildren && i !== o) ||
              this._originChanged(i, this._getFocusOrigin(o), r);
          }
          _onBlur(e, i) {
            const r = this._elementInfo.get(i);
            !r ||
              (r.checkChildren &&
                e.relatedTarget instanceof Node &&
                i.contains(e.relatedTarget)) ||
              (this._setClasses(i), this._emitOrigin(r, null));
          }
          _emitOrigin(e, i) {
            e.subject.observers.length &&
              this._ngZone.run(() => e.subject.next(i));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const i = e.rootNode,
              r = this._rootNodeFocusListenerCount.get(i) || 0;
            r ||
              this._ngZone.runOutsideAngular(() => {
                i.addEventListener(
                  'focus',
                  this._rootNodeFocusAndBlurListener,
                  pu
                ),
                  i.addEventListener(
                    'blur',
                    this._rootNodeFocusAndBlurListener,
                    pu
                  );
              }),
              this._rootNodeFocusListenerCount.set(i, r + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    'focus',
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(me(this._stopInputModalityDetector))
                  .subscribe((o) => {
                    this._setOrigin(o, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const i = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(i)) {
              const r = this._rootNodeFocusListenerCount.get(i);
              r > 1
                ? this._rootNodeFocusListenerCount.set(i, r - 1)
                : (i.removeEventListener(
                    'focus',
                    this._rootNodeFocusAndBlurListener,
                    pu
                  ),
                  i.removeEventListener(
                    'blur',
                    this._rootNodeFocusAndBlurListener,
                    pu
                  ),
                  this._rootNodeFocusListenerCount.delete(i));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                'focus',
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, i, r) {
            this._setClasses(e, i),
              this._emitOrigin(r, i),
              (this._lastFocusOrigin = i);
          }
          _getClosestElementsInfo(e) {
            const i = [];
            return (
              this._elementInfo.forEach((r, o) => {
                (o === e || (r.checkChildren && o.contains(e))) &&
                  i.push([o, r]);
              }),
              i
            );
          }
          _isLastInteractionFromInputLabel(e) {
            const { _mostRecentTarget: i, mostRecentModality: r } =
              this._inputModalityDetector;
            if (
              'mouse' !== r ||
              !i ||
              i === e ||
              ('INPUT' !== e.nodeName && 'TEXTAREA' !== e.nodeName) ||
              e.disabled
            )
              return !1;
            const o = e.labels;
            if (o)
              for (let a = 0; a < o.length; a++)
                if (o[a].contains(i)) return !0;
            return !1;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(U), C(je), C(f4), C(oe, 8), C(b4, 8));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      const kM = 'cdk-high-contrast-black-on-white',
        AM = 'cdk-high-contrast-white-on-black',
        wg = 'cdk-high-contrast-active';
      let TM = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._document = i),
                (this._breakpointSubscription = ie(pg)
                  .observe('(forced-colors: active)')
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement('div');
              (e.style.backgroundColor = 'rgb(1,2,3)'),
                (e.style.position = 'absolute'),
                this._document.body.appendChild(e);
              const i = this._document.defaultView || window,
                r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                o = ((r && r.backgroundColor) || '').replace(/ /g, '');
              switch ((e.remove(), o)) {
                case 'rgb(0,0,0)':
                case 'rgb(45,50,54)':
                case 'rgb(32,32,32)':
                  return 2;
                case 'rgb(255,255,255)':
                case 'rgb(255,250,239)':
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const e = this._document.body.classList;
                e.remove(wg, kM, AM), (this._hasCheckedHighContrastMode = !0);
                const i = this.getHighContrastMode();
                1 === i ? e.add(wg, kM) : 2 === i && e.add(wg, AM);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(je), C(oe));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        IM = (() => {
          class n {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(TM));
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [fg] })),
            n
          );
        })();
      const y4 = new A('cdk-dir-doc', {
          providedIn: 'root',
          factory: function w4() {
            return ie(oe);
          },
        }),
        C4 =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let Qn = (() => {
          class n {
            constructor(e) {
              (this.value = 'ltr'),
                (this.change = new re()),
                e &&
                  (this.value = (function x4(n) {
                    const t = n?.toLowerCase() || '';
                    return 'auto' === t &&
                      typeof navigator < 'u' &&
                      navigator?.language
                      ? C4.test(navigator.language)
                        ? 'rtl'
                        : 'ltr'
                      : 'rtl' === t
                      ? 'rtl'
                      : 'ltr';
                  })(
                    (e.body ? e.body.dir : null) ||
                      (e.documentElement ? e.documentElement.dir : null) ||
                      'ltr'
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(y4, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        al = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({})),
            n
          );
        })();
      const D4 = ['text'];
      function M4(n, t) {
        if ((1 & n && ne(0, 'mat-pseudo-checkbox', 5), 2 & n)) {
          const e = G();
          D('state', e.selected ? 'checked' : 'unchecked')(
            'disabled',
            e.disabled
          );
        }
      }
      function E4(n, t) {
        if ((1 & n && (_(0, 'span', 6), w(1), p()), 2 & n)) {
          const e = G();
          b(1), Ze('(', e.group.label, ')');
        }
      }
      const S4 = [[['mat-icon']], '*'],
        k4 = ['mat-icon', '*'],
        T4 = new A('mat-sanity-checks', {
          providedIn: 'root',
          factory: function A4() {
            return !0;
          },
        });
      let Ae = (() => {
        class n {
          constructor(e, i, r) {
            (this._sanityChecks = i),
              (this._document = r),
              (this._hasDoneGlobalChecks = !1),
              e._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(e) {
            return (
              !lg() &&
              ('boolean' == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[e])
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(TM), C(T4, 8), C(oe));
          }),
          (n.ɵmod = he({ type: n })),
          (n.ɵinj = de({ imports: [al, al] })),
          n
        );
      })();
      function gu(n) {
        return class extends n {
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = ce(t);
          }
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
        };
      }
      function Cg(n, t) {
        return class extends n {
          get color() {
            return this._color;
          }
          set color(e) {
            const i = e || this.defaultColor;
            i !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              i && this._elementRef.nativeElement.classList.add(`mat-${i}`),
              (this._color = i));
          }
          constructor(...e) {
            super(...e), (this.defaultColor = t), (this.color = t);
          }
        };
      }
      function xg(n) {
        return class extends n {
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = ce(t);
          }
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
        };
      }
      function I4(n, t = 0) {
        return class extends n {
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(e) {
            this._tabIndex = null != e ? yi(e) : this.defaultTabIndex;
          }
          constructor(...e) {
            super(...e), (this._tabIndex = t), (this.defaultTabIndex = t);
          }
        };
      }
      function FM(n) {
        return class extends n {
          updateErrorState() {
            const t = this.errorState,
              o = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            o !== t && ((this.errorState = o), this.stateChanges.next());
          }
          constructor(...t) {
            super(...t), (this.errorState = !1);
          }
        };
      }
      function R4(n) {
        return class extends n {
          constructor(...t) {
            super(...t),
              (this._isInitialized = !1),
              (this._pendingSubscribers = []),
              (this.initialized = new Fe((e) => {
                this._isInitialized
                  ? this._notifySubscriber(e)
                  : this._pendingSubscribers.push(e);
              }));
          }
          _markInitialized() {
            (this._isInitialized = !0),
              this._pendingSubscribers.forEach(this._notifySubscriber),
              (this._pendingSubscribers = null);
          }
          _notifySubscriber(t) {
            t.next(), t.complete();
          }
        };
      }
      let NM = (() => {
        class n {
          isErrorState(e, i) {
            return !!(e && e.invalid && (e.touched || (i && i.submitted)));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      class F4 {
        constructor(t, e, i, r = !1) {
          (this._renderer = t),
            (this.element = e),
            (this.config = i),
            (this._animationForciblyDisabledThroughCss = r),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const LM = ro({ passive: !0, capture: !0 });
      class P4 {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = (t) => {
              const e = _r(t);
              e &&
                this._events.get(t.type)?.forEach((i, r) => {
                  (r === e || r.contains(e)) &&
                    i.forEach((o) => o.handleEvent(t));
                });
            });
        }
        addHandler(t, e, i, r) {
          const o = this._events.get(e);
          if (o) {
            const a = o.get(i);
            a ? a.add(r) : o.set(i, new Set([r]));
          } else
            this._events.set(e, new Map([[i, new Set([r])]])),
              t.runOutsideAngular(() => {
                document.addEventListener(e, this._delegateEventHandler, LM);
              });
        }
        removeHandler(t, e, i) {
          const r = this._events.get(t);
          if (!r) return;
          const o = r.get(e);
          o &&
            (o.delete(i),
            0 === o.size && r.delete(e),
            0 === r.size &&
              (this._events.delete(t),
              document.removeEventListener(t, this._delegateEventHandler, LM)));
        }
      }
      const VM = { enterDuration: 225, exitDuration: 150 },
        BM = ro({ passive: !0, capture: !0 }),
        HM = ['mousedown', 'touchstart'],
        zM = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class ya {
        constructor(t, e, i, r) {
          (this._target = t),
            (this._ngZone = e),
            (this._platform = r),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = Wi(i));
        }
        fadeInRipple(t, e, i = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            o = { ...VM, ...i.animation };
          i.centered &&
            ((t = r.left + r.width / 2), (e = r.top + r.height / 2));
          const a =
              i.radius ||
              (function L4(n, t, e) {
                const i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
                  r = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
                return Math.sqrt(i * i + r * r);
              })(t, e, r),
            s = t - r.left,
            l = e - r.top,
            c = o.enterDuration,
            d = document.createElement('div');
          d.classList.add('mat-ripple-element'),
            (d.style.left = s - a + 'px'),
            (d.style.top = l - a + 'px'),
            (d.style.height = 2 * a + 'px'),
            (d.style.width = 2 * a + 'px'),
            null != i.color && (d.style.backgroundColor = i.color),
            (d.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(d);
          const u = window.getComputedStyle(d),
            f = u.transitionDuration,
            g =
              'none' === u.transitionProperty ||
              '0s' === f ||
              '0s, 0s' === f ||
              (0 === r.width && 0 === r.height),
            v = new F4(this, d, i, g);
          (d.style.transform = 'scale3d(1, 1, 1)'),
            (v.state = 0),
            i.persistent || (this._mostRecentTransientRipple = v);
          let y = null;
          return (
            !g &&
              (c || o.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const x = () => this._finishRippleTransition(v),
                  R = () => this._destroyRipple(v);
                d.addEventListener('transitionend', x),
                  d.addEventListener('transitioncancel', R),
                  (y = { onTransitionEnd: x, onTransitionCancel: R });
              }),
            this._activeRipples.set(v, y),
            (g || !c) && this._finishRippleTransition(v),
            v
          );
        }
        fadeOutRipple(t) {
          if (2 === t.state || 3 === t.state) return;
          const e = t.element,
            i = { ...VM, ...t.config.animation };
          (e.style.transitionDuration = `${i.exitDuration}ms`),
            (e.style.opacity = '0'),
            (t.state = 2),
            (t._animationForciblyDisabledThroughCss || !i.exitDuration) &&
              this._finishRippleTransition(t);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach((t) => t.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach((t) => {
            t.config.persistent || t.fadeOut();
          });
        }
        setupTriggerEvents(t) {
          const e = Wi(t);
          !this._platform.isBrowser ||
            !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            HM.forEach((i) => {
              ya._eventManager.addHandler(this._ngZone, i, e, this);
            }));
        }
        handleEvent(t) {
          'mousedown' === t.type
            ? this._onMousedown(t)
            : 'touchstart' === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                zM.forEach((e) => {
                  this._triggerElement.addEventListener(e, this, BM);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(t) {
          0 === t.state
            ? this._startFadeOutTransition(t)
            : 2 === t.state && this._destroyRipple(t);
        }
        _startFadeOutTransition(t) {
          const e = t === this._mostRecentTransientRipple,
            { persistent: i } = t.config;
          (t.state = 1), !i && (!e || !this._isPointerDown) && t.fadeOut();
        }
        _destroyRipple(t) {
          const e = this._activeRipples.get(t) ?? null;
          this._activeRipples.delete(t),
            this._activeRipples.size || (this._containerRect = null),
            t === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (t.state = 3),
            null !== e &&
              (t.element.removeEventListener(
                'transitionend',
                e.onTransitionEnd
              ),
              t.element.removeEventListener(
                'transitioncancel',
                e.onTransitionCancel
              )),
            t.element.remove();
        }
        _onMousedown(t) {
          const e = vg(t),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled && !bg(t)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let i = 0; i < e.length; i++)
              this.fadeInRipple(
                e[i].clientX,
                e[i].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach((t) => {
              !t.config.persistent &&
                (1 === t.state ||
                  (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const t = this._triggerElement;
          t &&
            (HM.forEach((e) => ya._eventManager.removeHandler(e, t, this)),
            this._pointerUpEventsRegistered &&
              zM.forEach((e) => t.removeEventListener(e, this, BM)));
        }
      }
      ya._eventManager = new P4();
      const _u = new A('mat-ripple-global-options');
      let wa = (() => {
          class n {
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && this.fadeOutAllNonPersistent(),
                (this._disabled = e),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            constructor(e, i, r, o, a) {
              (this._elementRef = e),
                (this._animationMode = a),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = o || {}),
                (this._rippleRenderer = new ya(this, i, e, r));
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...('NoopAnimations' === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, i = 0, r) {
              return 'number' == typeof e
                ? this._rippleRenderer.fadeInRipple(e, i, {
                    ...this.rippleConfig,
                    ...r,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...e,
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(U), m(je), m(_u, 8), m(Yt, 8));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && be('mat-ripple-unbounded', i.unbounded);
              },
              inputs: {
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                radius: ['matRippleRadius', 'radius'],
                animation: ['matRippleAnimation', 'animation'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
              },
              exportAs: ['matRipple'],
            })),
            n
          );
        })(),
        vu = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, Ae] })),
            n
          );
        })(),
        V4 = (() => {
          class n {
            constructor(e) {
              (this._animationMode = e),
                (this.state = 'unchecked'),
                (this.disabled = !1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Yt, 8));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-pseudo-checkbox']],
              hostAttrs: [1, 'mat-pseudo-checkbox'],
              hostVars: 8,
              hostBindings: function (e, i) {
                2 & e &&
                  be(
                    'mat-pseudo-checkbox-indeterminate',
                    'indeterminate' === i.state
                  )('mat-pseudo-checkbox-checked', 'checked' === i.state)(
                    'mat-pseudo-checkbox-disabled',
                    i.disabled
                  )(
                    '_mat-animation-noopable',
                    'NoopAnimations' === i._animationMode
                  );
              },
              inputs: { state: 'state', disabled: 'disabled' },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              styles: [
                '.mat-pseudo-checkbox{border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}.mat-pseudo-checkbox-checked::after{top:2.7px;width:10px;height:4px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        jM = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae] })),
            n
          );
        })();
      const UM = new A('MAT_OPTION_PARENT_COMPONENT'),
        $M = new A('MatOptgroup');
      let B4 = 0;
      class H4 {
        constructor(t, e = !1) {
          (this.source = t), (this.isUserInput = e);
        }
      }
      let z4 = (() => {
          class n {
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(e) {
              this._disabled = ce(e);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            constructor(e, i, r, o) {
              (this._element = e),
                (this._changeDetectorRef = i),
                (this._parent = r),
                (this.group = o),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ''),
                (this.id = 'mat-option-' + B4++),
                (this.onSelectionChange = new re()),
                (this._stateChanges = new z());
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._text?.nativeElement.textContent || '').trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(e, i) {
              const r = this._getHostElement();
              'function' == typeof r.focus && r.focus(i);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(e) {
              (13 === e.keyCode || 32 === e.keyCode) &&
                !Zn(e) &&
                (this._selectViaInteraction(), e.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getAriaSelected() {
              return this.selected || (!this.multiple && null);
            }
            _getTabIndex() {
              return this.disabled ? '-1' : '0';
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const e = this.viewValue;
                e !== this._mostRecentViewValue &&
                  (this._mostRecentViewValue && this._stateChanges.next(),
                  (this._mostRecentViewValue = e));
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(e = !1) {
              this.onSelectionChange.emit(new H4(this, e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              Ur();
            }),
            (n.ɵdir = S({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && Se(D4, 7), 2 & e)) {
                  let r;
                  V((r = B())) && (i._text = r.first);
                }
              },
              inputs: { value: 'value', id: 'id', disabled: 'disabled' },
              outputs: { onSelectionChange: 'onSelectionChange' },
            })),
            n
          );
        })(),
        bu = (() => {
          class n extends z4 {
            constructor(e, i, r, o) {
              super(e, i, r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(mt), m(UM, 8), m($M, 8));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-option']],
              hostAttrs: [
                'role',
                'option',
                1,
                'mat-mdc-option',
                'mat-mdc-focus-indicator',
                'mdc-list-item',
              ],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  O('click', function () {
                    return i._selectViaInteraction();
                  })('keydown', function (o) {
                    return i._handleKeydown(o);
                  }),
                  2 & e &&
                    (qr('id', i.id),
                    ve('tabindex', i._getTabIndex())(
                      'aria-selected',
                      i._getAriaSelected()
                    )('aria-disabled', i.disabled.toString()),
                    be('mdc-list-item--selected', i.selected)(
                      'mat-mdc-option-multiple',
                      i.multiple
                    )('mat-mdc-option-active', i.active)(
                      'mdc-list-item--disabled',
                      i.disabled
                    ));
              },
              exportAs: ['matOption'],
              features: [F],
              ngContentSelectors: k4,
              decls: 7,
              vars: 4,
              consts: [
                [
                  'class',
                  'mat-mdc-option-pseudo-checkbox',
                  3,
                  'state',
                  'disabled',
                  4,
                  'ngIf',
                ],
                [1, 'mdc-list-item__primary-text'],
                ['text', ''],
                ['class', 'cdk-visually-hidden', 4, 'ngIf'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-mdc-option-ripple',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                ],
                [1, 'mat-mdc-option-pseudo-checkbox', 3, 'state', 'disabled'],
                [1, 'cdk-visually-hidden'],
              ],
              template: function (e, i) {
                1 & e &&
                  (Xe(S4),
                  E(0, M4, 1, 2, 'mat-pseudo-checkbox', 0),
                  Y(1),
                  _(2, 'span', 1, 2),
                  Y(4, 1),
                  p(),
                  E(5, E4, 2, 1, 'span', 3),
                  ne(6, 'div', 4)),
                  2 & e &&
                    (D('ngIf', i.multiple),
                    b(5),
                    D('ngIf', i.group && i.group._inert),
                    b(1),
                    D('matRippleTrigger', i._getHostElement())(
                      'matRippleDisabled',
                      i.disabled || i.disableRipple
                    ));
              },
              dependencies: [wa, An, V4],
              styles: [
                '.mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox{margin-right:0;margin-left:16px}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        GM = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [vu, Tn, Ae, jM] })),
            n
          );
        })();
      const $4 = ['*'],
        Y4 = [
          [
            ['', 'mat-card-avatar', ''],
            ['', 'matCardAvatar', ''],
          ],
          [
            ['mat-card-title'],
            ['mat-card-subtitle'],
            ['', 'mat-card-title', ''],
            ['', 'mat-card-subtitle', ''],
            ['', 'matCardTitle', ''],
            ['', 'matCardSubtitle', ''],
          ],
          '*',
        ],
        q4 = [
          '[mat-card-avatar], [matCardAvatar]',
          'mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]',
          '*',
        ],
        K4 = new A('MAT_CARD_CONFIG');
      let Dg = (() => {
          class n {
            constructor(e) {
              this.appearance = e?.appearance || 'raised';
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(K4, 8));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-card']],
              hostAttrs: [1, 'mat-mdc-card', 'mdc-card'],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  be('mat-mdc-card-outlined', 'outlined' === i.appearance)(
                    'mdc-card--outlined',
                    'outlined' === i.appearance
                  );
              },
              inputs: { appearance: 'appearance' },
              exportAs: ['matCard'],
              ngContentSelectors: $4,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Xe(), Y(0));
              },
              styles: [
                '.mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:""}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mat-mdc-card{position:relative;border-radius:var(--mdc-elevated-card-container-shape, var(--mdc-shape-medium, 4px));background-color:var(--mdc-elevated-card-container-color, transparent);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color, transparent)}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width, 1px);border-style:solid;border-color:var(--mdc-outlined-card-outline-color, transparent)}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        WM = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['mat-card-title'],
                ['', 'mat-card-title', ''],
                ['', 'matCardTitle', ''],
              ],
              hostAttrs: [1, 'mat-mdc-card-title'],
            })),
            n
          );
        })(),
        YM = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['mat-card-subtitle'],
                ['', 'mat-card-subtitle', ''],
                ['', 'matCardSubtitle', ''],
              ],
              hostAttrs: [1, 'mat-mdc-card-subtitle'],
            })),
            n
          );
        })(),
        qM = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-card-header']],
              hostAttrs: [1, 'mat-mdc-card-header'],
              ngContentSelectors: q4,
              decls: 4,
              vars: 0,
              consts: [[1, 'mat-mdc-card-header-text']],
              template: function (e, i) {
                1 & e && (Xe(Y4), Y(0), _(1, 'div', 0), Y(2, 1), p(), Y(3, 2));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        az = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, Tn, Ae] })),
            n
          );
        })();
      class ll {}
      (ll.ɵfac = function (t) {
        return new (t || ll)();
      }),
        (ll.ɵcmp = W({
          type: ll,
          selectors: [['app-home']],
          decls: 7,
          vars: 0,
          consts: [
            [1, 'mat-elevation-z8'],
            ['src', 'assets/img/work.png', 'alt', ''],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'mat-card', 0)(1, 'mat-card-header')(2, 'mat-card-title'),
              w(3, 'OS System'),
              p(),
              _(4, 'mat-card-subtitle'),
              w(
                5,
                'Sistema de Ordens de Servi\xe7o desenvolvido no curso Full Stack Developer'
              ),
              p(),
              ne(6, 'img', 1),
              p()());
          },
          dependencies: [Dg, qM, YM, WM],
          styles: [
            'mat-card[_ngcontent-%COMP%]{width:80%;height:50%;margin:1rem auto 0}',
          ],
        }));
      const sz = ['mat-button', ''],
        KM = [
          [
            ['', 8, 'material-icons', 3, 'iconPositionEnd', ''],
            ['mat-icon', 3, 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 3, 'iconPositionEnd', ''],
          ],
          '*',
          [
            ['', 'iconPositionEnd', '', 8, 'material-icons'],
            ['mat-icon', 'iconPositionEnd', ''],
            ['', 'matButtonIcon', '', 'iconPositionEnd', ''],
          ],
        ],
        XM = [
          '.material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])',
          '*',
          '.material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]',
        ],
        cz = ['mat-fab', ''],
        dz = ['mat-icon-button', ''],
        uz = ['*'],
        hz = [
          {
            selector: 'mat-button',
            mdcClasses: ['mdc-button', 'mat-mdc-button'],
          },
          {
            selector: 'mat-flat-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--unelevated',
              'mat-mdc-unelevated-button',
            ],
          },
          {
            selector: 'mat-raised-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--raised',
              'mat-mdc-raised-button',
            ],
          },
          {
            selector: 'mat-stroked-button',
            mdcClasses: [
              'mdc-button',
              'mdc-button--outlined',
              'mat-mdc-outlined-button',
            ],
          },
          { selector: 'mat-fab', mdcClasses: ['mdc-fab', 'mat-mdc-fab'] },
          {
            selector: 'mat-mini-fab',
            mdcClasses: ['mdc-fab', 'mdc-fab--mini', 'mat-mdc-mini-fab'],
          },
          {
            selector: 'mat-icon-button',
            mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button'],
          },
        ],
        mz = Cg(
          gu(
            xg(
              class {
                constructor(n) {
                  this._elementRef = n;
                }
              }
            )
          )
        );
      let Mg = (() => {
          class n extends mz {
            constructor(e, i, r, o) {
              super(e),
                (this._platform = i),
                (this._ngZone = r),
                (this._animationMode = o),
                (this._focusMonitor = ie(ol)),
                (this._isFab = !1);
              const a = e.nativeElement.classList;
              for (const s of hz)
                this._hasHostAttributes(s.selector) &&
                  s.mdcClasses.forEach((l) => {
                    a.add(l);
                  });
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e = 'program', i) {
              e
                ? this._focusMonitor.focusVia(
                    this._elementRef.nativeElement,
                    e,
                    i
                  )
                : this._elementRef.nativeElement.focus(i);
            }
            _hasHostAttributes(...e) {
              return e.some((i) =>
                this._elementRef.nativeElement.hasAttribute(i)
              );
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
          }
          return (
            (n.ɵfac = function (e) {
              Ur();
            }),
            (n.ɵdir = S({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && Se(wa, 5), 2 & e)) {
                  let r;
                  V((r = B())) && (i.ripple = r.first);
                }
              },
              features: [F],
            })),
            n
          );
        })(),
        wi = (() => {
          class n extends Mg {
            constructor(e, i, r, o) {
              super(e, i, r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(je), m(U), m(Yt, 8));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-flat-button', ''],
                ['button', 'mat-stroked-button', ''],
              ],
              hostVars: 7,
              hostBindings: function (e, i) {
                2 & e &&
                  (ve('disabled', i.disabled || null),
                  be(
                    '_mat-animation-noopable',
                    'NoopAnimations' === i._animationMode
                  )('mat-unthemed', !i.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [F],
              attrs: sz,
              ngContentSelectors: XM,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (e, i) {
                1 & e &&
                  (Xe(KM),
                  ne(0, 'span', 0),
                  Y(1),
                  _(2, 'span', 1),
                  Y(3, 1),
                  p(),
                  Y(4, 2),
                  ne(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & e &&
                    (be('mdc-button__ripple', !i._isFab)(
                      'mdc-fab__ripple',
                      i._isFab
                    ),
                    b(6),
                    D('matRippleDisabled', i._isRippleDisabled())(
                      'matRippleTrigger',
                      i._elementRef.nativeElement
                    ));
              },
              dependencies: [wa],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      const pz = new A('mat-mdc-fab-default-options', {
        providedIn: 'root',
        factory: ZM,
      });
      function ZM() {
        return { color: 'accent' };
      }
      const QM = ZM();
      let Eg = (() => {
          class n extends Mg {
            get extended() {
              return this._extended;
            }
            set extended(e) {
              this._extended = ce(e);
            }
            constructor(e, i, r, o, a) {
              super(e, i, r, o),
                (this._options = a),
                (this._isFab = !0),
                (this._options = this._options || QM),
                (this.color = this.defaultColor =
                  this._options.color || QM.color);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(je), m(U), m(Yt, 8), m(pz, 8));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['button', 'mat-fab', '']],
              hostVars: 11,
              hostBindings: function (e, i) {
                2 & e &&
                  (ve('disabled', i.disabled || null),
                  be(
                    '_mat-animation-noopable',
                    'NoopAnimations' === i._animationMode
                  )('mat-unthemed', !i.color)('mat-mdc-button-base', !0)(
                    'mdc-fab--extended',
                    i.extended
                  )('mat-mdc-extended-fab', i.extended));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
                extended: 'extended',
              },
              exportAs: ['matButton'],
              features: [F],
              attrs: cz,
              ngContentSelectors: XM,
              decls: 8,
              vars: 6,
              consts: [
                [1, 'mat-mdc-button-persistent-ripple'],
                [1, 'mdc-button__label'],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (e, i) {
                1 & e &&
                  (Xe(KM),
                  ne(0, 'span', 0),
                  Y(1),
                  _(2, 'span', 1),
                  Y(3, 1),
                  p(),
                  Y(4, 2),
                  ne(5, 'span', 2)(6, 'span', 3)(7, 'span', 4)),
                  2 & e &&
                    (be('mdc-button__ripple', !i._isFab)(
                      'mdc-fab__ripple',
                      i._isFab
                    ),
                    b(6),
                    D('matRippleDisabled', i._isRippleDisabled())(
                      'matRippleTrigger',
                      i._elementRef.nativeElement
                    ));
              },
              dependencies: [wa],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{-webkit-tap-highlight-color:rgba(0,0,0,0);background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        JM = (() => {
          class n extends Mg {
            constructor(e, i, r, o) {
              super(e, i, r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(je), m(U), m(Yt, 8));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['button', 'mat-icon-button', '']],
              hostVars: 7,
              hostBindings: function (e, i) {
                2 & e &&
                  (ve('disabled', i.disabled || null),
                  be(
                    '_mat-animation-noopable',
                    'NoopAnimations' === i._animationMode
                  )('mat-unthemed', !i.color)('mat-mdc-button-base', !0));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
              },
              exportAs: ['matButton'],
              features: [F],
              attrs: dz,
              ngContentSelectors: uz,
              decls: 5,
              vars: 3,
              consts: [
                [
                  1,
                  'mat-mdc-button-persistent-ripple',
                  'mdc-icon-button__ripple',
                ],
                [1, 'mat-mdc-focus-indicator'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-mdc-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-mdc-button-touch-target'],
              ],
              template: function (e, i) {
                1 & e &&
                  (Xe(),
                  ne(0, 'span', 0),
                  Y(1),
                  ne(2, 'span', 1)(3, 'span', 2)(4, 'span', 3)),
                  2 & e &&
                    (b(3),
                    D('matRippleDisabled', i._isRippleDisabled())(
                      'matRippleCentered',
                      !0
                    )('matRippleTrigger', i._elementRef.nativeElement));
              },
              dependencies: [wa],
              styles: [
                '.mdc-icon-button{font-size:24px;width:48px;height:48px;padding:12px}.mdc-icon-button .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size, 48px);width:var(--mdc-icon-button-state-layer-size, 48px);color:var(--mdc-icon-button-icon-color, inherit);border-radius:50%;flex-shrink:0;text-align:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size, 24px);height:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity, 0.38)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color, #000)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
                '.cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        yu = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, vu, Ae] })),
            n
          );
        })();
      const gz = ['addListener', 'removeListener'],
        _z = ['addEventListener', 'removeEventListener'],
        vz = ['on', 'off'];
      function cl(n, t, e, i) {
        if ((Ce(e) && ((i = e), (e = void 0)), i))
          return cl(n, t, e).pipe(Tp(i));
        const [r, o] = (function wz(n) {
          return Ce(n.addEventListener) && Ce(n.removeEventListener);
        })(n)
          ? _z.map((a) => (s) => n[a](t, s, e))
          : (function bz(n) {
              return Ce(n.addListener) && Ce(n.removeListener);
            })(n)
          ? gz.map(eE(n, t))
          : (function yz(n) {
              return Ce(n.on) && Ce(n.off);
            })(n)
          ? vz.map(eE(n, t))
          : [];
        if (!r && Th(n)) return yt((a) => cl(a, t, e))(It(n));
        if (!r) throw new TypeError('Invalid event target');
        return new Fe((a) => {
          const s = (...l) => a.next(1 < l.length ? l : l[0]);
          return r(s), () => o(s);
        });
      }
      function eE(n, t) {
        return (e) => (i) => n[e](t, i);
      }
      const dl = {
          schedule(n) {
            let t = requestAnimationFrame,
              e = cancelAnimationFrame;
            const { delegate: i } = dl;
            i && ((t = i.requestAnimationFrame), (e = i.cancelAnimationFrame));
            const r = t((o) => {
              (e = void 0), n(o);
            });
            return new Oe(() => e?.(r));
          },
          requestAnimationFrame(...n) {
            const { delegate: t } = dl;
            return (t?.requestAnimationFrame || requestAnimationFrame)(...n);
          },
          cancelAnimationFrame(...n) {
            const { delegate: t } = dl;
            return (t?.cancelAnimationFrame || cancelAnimationFrame)(...n);
          },
          delegate: void 0,
        },
        Dz = new (class xz extends ug {
          flush(t) {
            this._active = !0;
            const e = this._scheduled;
            this._scheduled = void 0;
            const { actions: i } = this;
            let r;
            t = t || i.shift();
            do {
              if ((r = t.execute(t.state, t.delay))) break;
            } while ((t = i[0]) && t.id === e && i.shift());
            if (((this._active = !1), r)) {
              for (; (t = i[0]) && t.id === e && i.shift(); ) t.unsubscribe();
              throw r;
            }
          }
        })(
          class Cz extends dg {
            constructor(t, e) {
              super(t, e), (this.scheduler = t), (this.work = e);
            }
            requestAsyncId(t, e, i = 0) {
              return null !== i && i > 0
                ? super.requestAsyncId(t, e, i)
                : (t.actions.push(this),
                  t._scheduled ||
                    (t._scheduled = dl.requestAnimationFrame(() =>
                      t.flush(void 0)
                    )));
            }
            recycleAsyncId(t, e, i = 0) {
              var r;
              if (null != i ? i > 0 : this.delay > 0)
                return super.recycleAsyncId(t, e, i);
              const { actions: o } = t;
              null != e &&
                (null === (r = o[o.length - 1]) || void 0 === r
                  ? void 0
                  : r.id) !== e &&
                (dl.cancelAnimationFrame(e), (t._scheduled = void 0));
            }
          }
        );
      let Sg,
        Mz = 1;
      const wu = {};
      function tE(n) {
        return n in wu && (delete wu[n], !0);
      }
      const Ez = {
          setImmediate(n) {
            const t = Mz++;
            return (
              (wu[t] = !0),
              Sg || (Sg = Promise.resolve()),
              Sg.then(() => tE(t) && n()),
              t
            );
          },
          clearImmediate(n) {
            tE(n);
          },
        },
        { setImmediate: Sz, clearImmediate: kz } = Ez,
        Cu = {
          setImmediate(...n) {
            const { delegate: t } = Cu;
            return (t?.setImmediate || Sz)(...n);
          },
          clearImmediate(n) {
            const { delegate: t } = Cu;
            return (t?.clearImmediate || kz)(n);
          },
          delegate: void 0,
        },
        kg = new (class Tz extends ug {
          flush(t) {
            this._active = !0;
            const e = this._scheduled;
            this._scheduled = void 0;
            const { actions: i } = this;
            let r;
            t = t || i.shift();
            do {
              if ((r = t.execute(t.state, t.delay))) break;
            } while ((t = i[0]) && t.id === e && i.shift());
            if (((this._active = !1), r)) {
              for (; (t = i[0]) && t.id === e && i.shift(); ) t.unsubscribe();
              throw r;
            }
          }
        })(
          class Az extends dg {
            constructor(t, e) {
              super(t, e), (this.scheduler = t), (this.work = e);
            }
            requestAsyncId(t, e, i = 0) {
              return null !== i && i > 0
                ? super.requestAsyncId(t, e, i)
                : (t.actions.push(this),
                  t._scheduled ||
                    (t._scheduled = Cu.setImmediate(t.flush.bind(t, void 0))));
            }
            recycleAsyncId(t, e, i = 0) {
              var r;
              if (null != i ? i > 0 : this.delay > 0)
                return super.recycleAsyncId(t, e, i);
              const { actions: o } = t;
              null != e &&
                (null === (r = o[o.length - 1]) || void 0 === r
                  ? void 0
                  : r.id) !== e &&
                (Cu.clearImmediate(e), (t._scheduled = void 0));
            }
          }
        );
      function nE(n = 0, t, e = U3) {
        let i = -1;
        return (
          null != t && (wv(t) ? (e = t) : (i = t)),
          new Fe((r) => {
            let o = (function Rz(n) {
              return n instanceof Date && !isNaN(n);
            })(n)
              ? +n - e.now()
              : n;
            o < 0 && (o = 0);
            let a = 0;
            return e.schedule(function () {
              r.closed ||
                (r.next(a++), 0 <= i ? this.schedule(void 0, i) : r.complete());
            }, o);
          })
        );
      }
      function Ag(n, t = du) {
        return (function Iz(n) {
          return Je((t, e) => {
            let i = !1,
              r = null,
              o = null,
              a = !1;
            const s = () => {
                if ((o?.unsubscribe(), (o = null), i)) {
                  i = !1;
                  const c = r;
                  (r = null), e.next(c);
                }
                a && e.complete();
              },
              l = () => {
                (o = null), a && e.complete();
              };
            t.subscribe(
              qe(
                e,
                (c) => {
                  (i = !0), (r = c), o || It(n(c)).subscribe((o = qe(e, s, l)));
                },
                () => {
                  (a = !0), (!i || !o || o.closed) && e.complete();
                }
              )
            );
          });
        })(() => nE(n, t));
      }
      const Oz = ['contentWrapper'],
        Fz = ['*'],
        Pz = new A('VIRTUAL_SCROLL_STRATEGY');
      let Ca = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this._platform = i),
                (this._scrolled = new z()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = r);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const i = this.scrollContainers.get(e);
              i && (i.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new Fe((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const r =
                      e > 0
                        ? this._scrolled.pipe(Ag(e)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        r.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : H();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, i) {
              const r = this.getAncestorScrollContainers(e);
              return this.scrolled(i).pipe(Qe((o) => !o || r.indexOf(o) > -1));
            }
            getAncestorScrollContainers(e) {
              const i = [];
              return (
                this.scrollContainers.forEach((r, o) => {
                  this._scrollableContainsElement(o, e) && i.push(o);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, i) {
              let r = Wi(i),
                o = e.getElementRef().nativeElement;
              do {
                if (r == o) return !0;
              } while ((r = r.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                cl(this._getWindow().document, 'scroll').subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(U), C(je), C(oe, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        ul = (() => {
          class n {
            constructor(e, i, r, o) {
              (this.elementRef = e),
                (this.scrollDispatcher = i),
                (this.ngZone = r),
                (this.dir = o),
                (this._destroyed = new z()),
                (this._elementScrolled = new Fe((a) =>
                  this.ngZone.runOutsideAngular(() =>
                    cl(this.elementRef.nativeElement, 'scroll')
                      .pipe(me(this._destroyed))
                      .subscribe(a)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(e) {
              const i = this.elementRef.nativeElement,
                r = this.dir && 'rtl' == this.dir.value;
              null == e.left && (e.left = r ? e.end : e.start),
                null == e.right && (e.right = r ? e.start : e.end),
                null != e.bottom &&
                  (e.top = i.scrollHeight - i.clientHeight - e.bottom),
                r && 0 != el()
                  ? (null != e.left &&
                      (e.right = i.scrollWidth - i.clientWidth - e.left),
                    2 == el()
                      ? (e.left = e.right)
                      : 1 == el() && (e.left = e.right ? -e.right : e.right))
                  : null != e.right &&
                    (e.left = i.scrollWidth - i.clientWidth - e.right),
                this._applyScrollToOptions(e);
            }
            _applyScrollToOptions(e) {
              const i = this.elementRef.nativeElement;
              hM()
                ? i.scrollTo(e)
                : (null != e.top && (i.scrollTop = e.top),
                  null != e.left && (i.scrollLeft = e.left));
            }
            measureScrollOffset(e) {
              const i = 'left',
                r = 'right',
                o = this.elementRef.nativeElement;
              if ('top' == e) return o.scrollTop;
              if ('bottom' == e)
                return o.scrollHeight - o.clientHeight - o.scrollTop;
              const a = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == e ? (e = a ? r : i) : 'end' == e && (e = a ? i : r),
                a && 2 == el()
                  ? e == i
                    ? o.scrollWidth - o.clientWidth - o.scrollLeft
                    : o.scrollLeft
                  : a && 1 == el()
                  ? e == i
                    ? o.scrollLeft + o.scrollWidth - o.clientWidth
                    : -o.scrollLeft
                  : e == i
                  ? o.scrollLeft
                  : o.scrollWidth - o.clientWidth - o.scrollLeft
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(Ca), m(U), m(Qn, 8));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
              standalone: !0,
            })),
            n
          );
        })(),
        xa = (() => {
          class n {
            constructor(e, i, r) {
              (this._platform = e),
                (this._change = new z()),
                (this._changeListener = (o) => {
                  this._change.next(o);
                }),
                (this._document = r),
                i.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const o = this._getWindow();
                    o.addEventListener('resize', this._changeListener),
                      o.addEventListener(
                        'orientationchange',
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener('resize', this._changeListener),
                  e.removeEventListener(
                    'orientationchange',
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: i, height: r } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + r,
                right: e.left + i,
                height: r,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                i = this._getWindow(),
                r = e.documentElement,
                o = r.getBoundingClientRect();
              return {
                top:
                  -o.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
                left:
                  -o.left ||
                  e.body.scrollLeft ||
                  i.scrollX ||
                  r.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(Ag(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(je), C(U), C(oe, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      const iE = new A('VIRTUAL_SCROLLABLE');
      let Vz = (() => {
        class n extends ul {
          constructor(e, i, r, o) {
            super(e, i, r, o);
          }
          measureViewportSize(e) {
            const i = this.elementRef.nativeElement;
            return 'horizontal' === e ? i.clientWidth : i.clientHeight;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(j), m(Ca), m(U), m(Qn, 8));
          }),
          (n.ɵdir = S({ type: n, features: [F] })),
          n
        );
      })();
      const Hz = typeof requestAnimationFrame < 'u' ? Dz : kg;
      let zz = (() => {
          class n extends Vz {
            get orientation() {
              return this._orientation;
            }
            set orientation(e) {
              this._orientation !== e &&
                ((this._orientation = e), this._calculateSpacerSize());
            }
            get appendOnly() {
              return this._appendOnly;
            }
            set appendOnly(e) {
              this._appendOnly = ce(e);
            }
            constructor(e, i, r, o, a, s, l, c) {
              super(e, s, r, a),
                (this.elementRef = e),
                (this._changeDetectorRef = i),
                (this._scrollStrategy = o),
                (this.scrollable = c),
                (this._platform = ie(je)),
                (this._detachedSubject = new z()),
                (this._renderedRangeSubject = new z()),
                (this._orientation = 'vertical'),
                (this._appendOnly = !1),
                (this.scrolledIndexChange = new Fe((d) =>
                  this._scrollStrategy.scrolledIndexChange.subscribe((u) =>
                    Promise.resolve().then(() =>
                      this.ngZone.run(() => d.next(u))
                    )
                  )
                )),
                (this.renderedRangeStream = this._renderedRangeSubject),
                (this._totalContentSize = 0),
                (this._totalContentWidth = ''),
                (this._totalContentHeight = ''),
                (this._renderedRange = { start: 0, end: 0 }),
                (this._dataLength = 0),
                (this._viewportSize = 0),
                (this._renderedContentOffset = 0),
                (this._renderedContentOffsetNeedsRewrite = !1),
                (this._isChangeDetectionPending = !1),
                (this._runAfterChangeDetection = []),
                (this._viewportChanges = Oe.EMPTY),
                (this._viewportChanges = l.change().subscribe(() => {
                  this.checkViewportSize();
                })),
                this.scrollable ||
                  (this.elementRef.nativeElement.classList.add(
                    'cdk-virtual-scrollable'
                  ),
                  (this.scrollable = this));
            }
            ngOnInit() {
              this._platform.isBrowser &&
                (this.scrollable === this && super.ngOnInit(),
                this.ngZone.runOutsideAngular(() =>
                  Promise.resolve().then(() => {
                    this._measureViewportSize(),
                      this._scrollStrategy.attach(this),
                      this.scrollable
                        .elementScrolled()
                        .pipe(_i(null), Ag(0, Hz))
                        .subscribe(() =>
                          this._scrollStrategy.onContentScrolled()
                        ),
                      this._markChangeDetectionNeeded();
                  })
                ));
            }
            ngOnDestroy() {
              this.detach(),
                this._scrollStrategy.detach(),
                this._renderedRangeSubject.complete(),
                this._detachedSubject.complete(),
                this._viewportChanges.unsubscribe(),
                super.ngOnDestroy();
            }
            attach(e) {
              this.ngZone.runOutsideAngular(() => {
                (this._forOf = e),
                  this._forOf.dataStream
                    .pipe(me(this._detachedSubject))
                    .subscribe((i) => {
                      const r = i.length;
                      r !== this._dataLength &&
                        ((this._dataLength = r),
                        this._scrollStrategy.onDataLengthChanged()),
                        this._doChangeDetection();
                    });
              });
            }
            detach() {
              (this._forOf = null), this._detachedSubject.next();
            }
            getDataLength() {
              return this._dataLength;
            }
            getViewportSize() {
              return this._viewportSize;
            }
            getRenderedRange() {
              return this._renderedRange;
            }
            measureBoundingClientRectWithScrollOffset(e) {
              return this.getElementRef().nativeElement.getBoundingClientRect()[
                e
              ];
            }
            setTotalContentSize(e) {
              this._totalContentSize !== e &&
                ((this._totalContentSize = e),
                this._calculateSpacerSize(),
                this._markChangeDetectionNeeded());
            }
            setRenderedRange(e) {
              (function Bz(n, t) {
                return n.start == t.start && n.end == t.end;
              })(this._renderedRange, e) ||
                (this.appendOnly &&
                  (e = {
                    start: 0,
                    end: Math.max(this._renderedRange.end, e.end),
                  }),
                this._renderedRangeSubject.next((this._renderedRange = e)),
                this._markChangeDetectionNeeded(() =>
                  this._scrollStrategy.onContentRendered()
                ));
            }
            getOffsetToRenderedContentStart() {
              return this._renderedContentOffsetNeedsRewrite
                ? null
                : this._renderedContentOffset;
            }
            setRenderedContentOffset(e, i = 'to-start') {
              e = this.appendOnly && 'to-start' === i ? 0 : e;
              const o = 'horizontal' == this.orientation,
                a = o ? 'X' : 'Y';
              let l = `translate${a}(${Number(
                (o && this.dir && 'rtl' == this.dir.value ? -1 : 1) * e
              )}px)`;
              (this._renderedContentOffset = e),
                'to-end' === i &&
                  ((l += ` translate${a}(-100%)`),
                  (this._renderedContentOffsetNeedsRewrite = !0)),
                this._renderedContentTransform != l &&
                  ((this._renderedContentTransform = l),
                  this._markChangeDetectionNeeded(() => {
                    this._renderedContentOffsetNeedsRewrite
                      ? ((this._renderedContentOffset -=
                          this.measureRenderedContentSize()),
                        (this._renderedContentOffsetNeedsRewrite = !1),
                        this.setRenderedContentOffset(
                          this._renderedContentOffset
                        ))
                      : this._scrollStrategy.onRenderedOffsetChanged();
                  }));
            }
            scrollToOffset(e, i = 'auto') {
              const r = { behavior: i };
              'horizontal' === this.orientation ? (r.start = e) : (r.top = e),
                this.scrollable.scrollTo(r);
            }
            scrollToIndex(e, i = 'auto') {
              this._scrollStrategy.scrollToIndex(e, i);
            }
            measureScrollOffset(e) {
              let i;
              return (
                (i =
                  this.scrollable == this
                    ? (r) => super.measureScrollOffset(r)
                    : (r) => this.scrollable.measureScrollOffset(r)),
                Math.max(
                  0,
                  i(
                    e ?? ('horizontal' === this.orientation ? 'start' : 'top')
                  ) - this.measureViewportOffset()
                )
              );
            }
            measureViewportOffset(e) {
              let i;
              const r = 'left',
                o = 'right',
                a = 'rtl' == this.dir?.value;
              i =
                'start' == e
                  ? a
                    ? o
                    : r
                  : 'end' == e
                  ? a
                    ? r
                    : o
                  : e || ('horizontal' === this.orientation ? 'left' : 'top');
              const s =
                this.scrollable.measureBoundingClientRectWithScrollOffset(i);
              return (
                this.elementRef.nativeElement.getBoundingClientRect()[i] - s
              );
            }
            measureRenderedContentSize() {
              const e = this._contentWrapper.nativeElement;
              return 'horizontal' === this.orientation
                ? e.offsetWidth
                : e.offsetHeight;
            }
            measureRangeSize(e) {
              return this._forOf
                ? this._forOf.measureRangeSize(e, this.orientation)
                : 0;
            }
            checkViewportSize() {
              this._measureViewportSize(),
                this._scrollStrategy.onDataLengthChanged();
            }
            _measureViewportSize() {
              this._viewportSize = this.scrollable.measureViewportSize(
                this.orientation
              );
            }
            _markChangeDetectionNeeded(e) {
              e && this._runAfterChangeDetection.push(e),
                this._isChangeDetectionPending ||
                  ((this._isChangeDetectionPending = !0),
                  this.ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => {
                      this._doChangeDetection();
                    })
                  ));
            }
            _doChangeDetection() {
              (this._isChangeDetectionPending = !1),
                (this._contentWrapper.nativeElement.style.transform =
                  this._renderedContentTransform),
                this.ngZone.run(() => this._changeDetectorRef.markForCheck());
              const e = this._runAfterChangeDetection;
              this._runAfterChangeDetection = [];
              for (const i of e) i();
            }
            _calculateSpacerSize() {
              (this._totalContentHeight =
                'horizontal' === this.orientation
                  ? ''
                  : `${this._totalContentSize}px`),
                (this._totalContentWidth =
                  'horizontal' === this.orientation
                    ? `${this._totalContentSize}px`
                    : '');
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(j),
                m(mt),
                m(U),
                m(Pz, 8),
                m(Qn, 8),
                m(Ca),
                m(xa),
                m(iE, 8)
              );
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['cdk-virtual-scroll-viewport']],
              viewQuery: function (e, i) {
                if ((1 & e && Se(Oz, 7), 2 & e)) {
                  let r;
                  V((r = B())) && (i._contentWrapper = r.first);
                }
              },
              hostAttrs: [1, 'cdk-virtual-scroll-viewport'],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  be(
                    'cdk-virtual-scroll-orientation-horizontal',
                    'horizontal' === i.orientation
                  )(
                    'cdk-virtual-scroll-orientation-vertical',
                    'horizontal' !== i.orientation
                  );
              },
              inputs: { orientation: 'orientation', appendOnly: 'appendOnly' },
              outputs: { scrolledIndexChange: 'scrolledIndexChange' },
              standalone: !0,
              features: [
                X([
                  {
                    provide: ul,
                    useFactory: (t, e) => t || e,
                    deps: [[new hn(), new Tc(iE)], n],
                  },
                ]),
                F,
                kf,
              ],
              ngContentSelectors: Fz,
              decls: 4,
              vars: 4,
              consts: [
                [1, 'cdk-virtual-scroll-content-wrapper'],
                ['contentWrapper', ''],
                [1, 'cdk-virtual-scroll-spacer'],
              ],
              template: function (e, i) {
                1 & e && (Xe(), _(0, 'div', 0, 1), Y(2), p(), ne(3, 'div', 2)),
                  2 & e &&
                    (b(3),
                    hi('width', i._totalContentWidth)(
                      'height',
                      i._totalContentHeight
                    ));
              },
              styles: [
                'cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        br = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({})),
            n
          );
        })(),
        Tg = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [al, br, zz, al, br] })),
            n
          );
        })();
      class Ig {
        attach(t) {
          return (this._attachedHost = t), t.attach(this);
        }
        detach() {
          let t = this._attachedHost;
          null != t && ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class xu extends Ig {
        constructor(t, e, i, r, o) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = i),
            (this.componentFactoryResolver = r),
            (this.projectableNodes = o);
        }
      }
      class Du extends Ig {
        constructor(t, e, i, r) {
          super(),
            (this.templateRef = t),
            (this.viewContainerRef = e),
            (this.context = i),
            (this.injector = r);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class jz extends Ig {
        constructor(t) {
          super(), (this.element = t instanceof j ? t.nativeElement : t);
        }
      }
      class Rg {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return t instanceof xu
            ? ((this._attachedPortal = t), this.attachComponentPortal(t))
            : t instanceof Du
            ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
            : this.attachDomPortal && t instanceof jz
            ? ((this._attachedPortal = t), this.attachDomPortal(t))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class Uz extends Rg {
        constructor(t, e, i, r, o) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = i),
            (this._defaultInjector = r),
            (this.attachDomPortal = (a) => {
              const s = a.element,
                l = this._document.createComment('dom-portal');
              s.parentNode.insertBefore(l, s),
                this.outletElement.appendChild(s),
                (this._attachedPortal = a),
                super.setDisposeFn(() => {
                  l.parentNode && l.parentNode.replaceChild(s, l);
                });
            }),
            (this._document = o);
        }
        attachComponentPortal(t) {
          const i = (
            t.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(t.component);
          let r;
          return (
            t.viewContainerRef
              ? ((r = t.viewContainerRef.createComponent(
                  i,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector,
                  t.projectableNodes || void 0
                )),
                this.setDisposeFn(() => r.destroy()))
              : ((r = i.create(t.injector || this._defaultInjector || Dt.NULL)),
                this._appRef.attachView(r.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(r.hostView),
                    r.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(r)),
            (this._attachedPortal = t),
            r
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            i = e.createEmbeddedView(t.templateRef, t.context, {
              injector: t.injector,
            });
          return (
            i.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let r = e.indexOf(i);
              -1 !== r && e.remove(r);
            }),
            (this._attachedPortal = t),
            i
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let rE = (() => {
          class n extends Rg {
            constructor(e, i, r) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = i),
                (this._isInitialized = !1),
                (this.attached = new re()),
                (this.attachDomPortal = (o) => {
                  const a = o.element,
                    s = this._document.createComment('dom-portal');
                  o.setAttachedHost(this),
                    a.parentNode.insertBefore(s, a),
                    this._getRootNode().appendChild(a),
                    (this._attachedPortal = o),
                    super.setDisposeFn(() => {
                      s.parentNode && s.parentNode.replaceChild(a, s);
                    });
                }),
                (this._document = r);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const i =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                o = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                a = i.createComponent(
                  o,
                  i.length,
                  e.injector || i.injector,
                  e.projectableNodes || void 0
                );
              return (
                i !== this._viewContainerRef &&
                  this._getRootNode().appendChild(a.hostView.rootNodes[0]),
                super.setDisposeFn(() => a.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = a),
                this.attached.emit(a),
                a
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const i = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context,
                { injector: e.injector }
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(zr), m(ht), m(oe));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [F],
            })),
            n
          );
        })(),
        Og = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({})),
            n
          );
        })();
      const oE = hM();
      class $z {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ''),
              (this._previousHTMLStyles.top = t.style.top || ''),
              (t.style.left = vt(-this._previousScrollPosition.left)),
              (t.style.top = vt(-this._previousScrollPosition.top)),
              t.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              i = t.style,
              r = this._document.body.style,
              o = i.scrollBehavior || '',
              a = r.scrollBehavior || '';
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              t.classList.remove('cdk-global-scrollblock'),
              oE && (i.scrollBehavior = r.scrollBehavior = 'auto'),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              oE && ((i.scrollBehavior = o), (r.scrollBehavior = a));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              'cdk-global-scrollblock'
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return e.scrollHeight > i.height || e.scrollWidth > i.width;
        }
      }
      class Gz {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = i),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class aE {
        enable() {}
        disable() {}
        attach() {}
      }
      function Fg(n, t) {
        return t.some(
          (e) =>
            n.bottom < e.top ||
            n.top > e.bottom ||
            n.right < e.left ||
            n.left > e.right
        );
      }
      function sE(n, t) {
        return t.some(
          (e) =>
            n.top < e.top ||
            n.bottom > e.bottom ||
            n.left < e.left ||
            n.right > e.right
        );
      }
      class Wz {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = i),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: r } =
                      this._viewportRuler.getViewportSize();
                  Fg(e, [
                    {
                      width: i,
                      height: r,
                      bottom: r,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let Yz = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = i),
              (this._ngZone = r),
              (this.noop = () => new aE()),
              (this.close = (a) =>
                new Gz(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  a
                )),
              (this.block = () => new $z(this._viewportRuler, this._document)),
              (this.reposition = (a) =>
                new Wz(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  a
                )),
              (this._document = o);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(Ca), C(xa), C(U), C(oe));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      class Mu {
        constructor(t) {
          if (
            ((this.scrollStrategy = new aE()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const i of e) void 0 !== t[i] && (this[i] = t[i]);
          }
        }
      }
      class qz {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      let lE = (() => {
          class n {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const i = this._attachedOverlays.indexOf(e);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(oe));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        Kz = (() => {
          class n extends lE {
            constructor(e, i) {
              super(e),
                (this._ngZone = i),
                (this._keydownListener = (r) => {
                  const o = this._attachedOverlays;
                  for (let a = o.length - 1; a > -1; a--)
                    if (o[a]._keydownEvents.observers.length > 0) {
                      const s = o[a]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => s.next(r))
                        : s.next(r);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          'keydown',
                          this._keydownListener
                        )
                      )
                    : this._document.body.addEventListener(
                        'keydown',
                        this._keydownListener
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  'keydown',
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(oe), C(U, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        Xz = (() => {
          class n extends lE {
            constructor(e, i, r) {
              super(e),
                (this._platform = i),
                (this._ngZone = r),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (o) => {
                  this._pointerDownEventTarget = _r(o);
                }),
                (this._clickListener = (o) => {
                  const a = _r(o),
                    s =
                      'click' === o.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : a;
                  this._pointerDownEventTarget = null;
                  const l = this._attachedOverlays.slice();
                  for (let c = l.length - 1; c > -1; c--) {
                    const d = l[c];
                    if (
                      d._outsidePointerEvents.observers.length < 1 ||
                      !d.hasAttached()
                    )
                      continue;
                    if (
                      d.overlayElement.contains(a) ||
                      d.overlayElement.contains(s)
                    )
                      break;
                    const u = d._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => u.next(o))
                      : u.next(o);
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const i = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(i)
                    )
                  : this._addEventListeners(i),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = 'pointer'),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener(
                  'pointerdown',
                  this._pointerDownListener,
                  !0
                ),
                  e.removeEventListener('click', this._clickListener, !0),
                  e.removeEventListener('auxclick', this._clickListener, !0),
                  e.removeEventListener('contextmenu', this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(e) {
              e.addEventListener('pointerdown', this._pointerDownListener, !0),
                e.addEventListener('click', this._clickListener, !0),
                e.addEventListener('auxclick', this._clickListener, !0),
                e.addEventListener('contextmenu', this._clickListener, !0);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(oe), C(je), C(U, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        cE = (() => {
          class n {
            constructor(e, i) {
              (this._platform = i), (this._document = e);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const e = 'cdk-overlay-container';
              if (this._platform.isBrowser || lg()) {
                const r = this._document.querySelectorAll(
                  `.${e}[platform="server"], .${e}[platform="test"]`
                );
                for (let o = 0; o < r.length; o++) r[o].remove();
              }
              const i = this._document.createElement('div');
              i.classList.add(e),
                lg()
                  ? i.setAttribute('platform', 'test')
                  : this._platform.isBrowser ||
                    i.setAttribute('platform', 'server'),
                this._document.body.appendChild(i),
                (this._containerElement = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(oe), C(je));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      class Zz {
        constructor(t, e, i, r, o, a, s, l, c, d = !1) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = i),
            (this._config = r),
            (this._ngZone = o),
            (this._keyboardDispatcher = a),
            (this._document = s),
            (this._location = l),
            (this._outsideClickDispatcher = c),
            (this._animationsDisabled = d),
            (this._backdropElement = null),
            (this._backdropClick = new z()),
            (this._attachments = new z()),
            (this._detachments = new z()),
            (this._locationChanges = Oe.EMPTY),
            (this._backdropClickHandler = (u) => this._backdropClick.next(u)),
            (this._backdropTransitionendHandler = (u) => {
              this._disposeBackdrop(u.target);
            }),
            (this._keydownEvents = new z()),
            (this._outsidePointerEvents = new z()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const e = this._portalOutlet.attach(t);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(ot(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            'function' == typeof e?.onDestroy &&
              e.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach())
                  );
              }),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = { ...this._config, ...t }), this._updateElementSize();
        }
        setDirection(t) {
          (this._config = { ...this._config, direction: t }),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ('string' == typeof t ? t : t.value) : 'ltr';
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = vt(this._config.width)),
            (t.height = vt(this._config.height)),
            (t.minWidth = vt(this._config.minWidth)),
            (t.minHeight = vt(this._config.minHeight)),
            (t.maxWidth = vt(this._config.maxWidth)),
            (t.maxHeight = vt(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? '' : 'none';
        }
        _attachBackdrop() {
          const t = 'cdk-overlay-backdrop-showing';
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                'cdk-overlay-backdrop-noop-animation'
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              'click',
              this._backdropClickHandler
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < 'u'
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(t);
                  });
                })
              : this._backdropElement.classList.add(t);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const t = this._backdropElement;
          if (t) {
            if (this._animationsDisabled) return void this._disposeBackdrop(t);
            t.classList.remove('cdk-overlay-backdrop-showing'),
              this._ngZone.runOutsideAngular(() => {
                t.addEventListener(
                  'transitionend',
                  this._backdropTransitionendHandler
                );
              }),
              (t.style.pointerEvents = 'none'),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(t);
                }, 500)
              ));
          }
        }
        _toggleClasses(t, e, i) {
          const r = hu(e || []).filter((o) => !!o);
          r.length && (i ? t.classList.add(...r) : t.classList.remove(...r));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .pipe(me(on(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
        _disposeBackdrop(t) {
          t &&
            (t.removeEventListener('click', this._backdropClickHandler),
            t.removeEventListener(
              'transitionend',
              this._backdropTransitionendHandler
            ),
            t.remove(),
            this._backdropElement === t && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const dE = 'cdk-overlay-connected-position-bounding-box',
        Qz = /([A-Za-z%]+)$/;
      class Jz {
        get positions() {
          return this._preferredPositions;
        }
        constructor(t, e, i, r, o) {
          (this._viewportRuler = e),
            (this._document = i),
            (this._platform = r),
            (this._overlayContainer = o),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new z()),
            (this._resizeSubscription = Oe.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(t);
        }
        attach(t) {
          this._validatePositions(),
            t.hostElement.classList.add(dE),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            i = this._viewportRect,
            r = this._containerRect,
            o = [];
          let a;
          for (let s of this._preferredPositions) {
            let l = this._getOriginPoint(t, r, s),
              c = this._getOverlayPoint(l, e, s),
              d = this._getOverlayFit(c, e, i, s);
            if (d.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(s, l);
            this._canFitWithFlexibleDimensions(d, c, i)
              ? o.push({
                  position: s,
                  origin: l,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(l, s),
                })
              : (!a || a.overlayFit.visibleArea < d.visibleArea) &&
                (a = {
                  overlayFit: d,
                  overlayPoint: c,
                  originPoint: l,
                  position: s,
                  overlayRect: e,
                });
          }
          if (o.length) {
            let s = null,
              l = -1;
            for (const c of o) {
              const d =
                c.boundingBoxRect.width *
                c.boundingBoxRect.height *
                (c.position.weight || 1);
              d > l && ((l = d), (s = c));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(s.position, s.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(a.position, a.originPoint)
            );
          this._applyPosition(a.position, a.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              ao(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(dE),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const t = this._lastPosition;
          if (t) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const e = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              t
            );
            this._applyPosition(t, e);
          } else this.apply();
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e, i) {
          let r, o;
          if ('center' == i.originX) r = t.left + t.width / 2;
          else {
            const a = this._isRtl() ? t.right : t.left,
              s = this._isRtl() ? t.left : t.right;
            r = 'start' == i.originX ? a : s;
          }
          return (
            e.left < 0 && (r -= e.left),
            (o =
              'center' == i.originY
                ? t.top + t.height / 2
                : 'top' == i.originY
                ? t.top
                : t.bottom),
            e.top < 0 && (o -= e.top),
            { x: r, y: o }
          );
        }
        _getOverlayPoint(t, e, i) {
          let r, o;
          return (
            (r =
              'center' == i.overlayX
                ? -e.width / 2
                : 'start' === i.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (o =
              'center' == i.overlayY
                ? -e.height / 2
                : 'top' == i.overlayY
                ? 0
                : -e.height),
            { x: t.x + r, y: t.y + o }
          );
        }
        _getOverlayFit(t, e, i, r) {
          const o = hE(e);
          let { x: a, y: s } = t,
            l = this._getOffset(r, 'x'),
            c = this._getOffset(r, 'y');
          l && (a += l), c && (s += c);
          let h = 0 - s,
            f = s + o.height - i.height,
            g = this._subtractOverflows(o.width, 0 - a, a + o.width - i.width),
            v = this._subtractOverflows(o.height, h, f),
            y = g * v;
          return {
            visibleArea: y,
            isCompletelyWithinViewport: o.width * o.height === y,
            fitsInViewportVertically: v === o.height,
            fitsInViewportHorizontally: g == o.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, i) {
          if (this._hasFlexibleDimensions) {
            const r = i.bottom - e.y,
              o = i.right - e.x,
              a = uE(this._overlayRef.getConfig().minHeight),
              s = uE(this._overlayRef.getConfig().minWidth);
            return (
              (t.fitsInViewportVertically || (null != a && a <= r)) &&
              (t.fitsInViewportHorizontally || (null != s && s <= o))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: t.x + this._previousPushAmount.x,
              y: t.y + this._previousPushAmount.y,
            };
          const r = hE(e),
            o = this._viewportRect,
            a = Math.max(t.x + r.width - o.width, 0),
            s = Math.max(t.y + r.height - o.height, 0),
            l = Math.max(o.top - i.top - t.y, 0),
            c = Math.max(o.left - i.left - t.x, 0);
          let d = 0,
            u = 0;
          return (
            (d =
              r.width <= o.width
                ? c || -a
                : t.x < this._viewportMargin
                ? o.left - i.left - t.x
                : 0),
            (u =
              r.height <= o.height
                ? l || -s
                : t.y < this._viewportMargin
                ? o.top - i.top - t.y
                : 0),
            (this._previousPushAmount = { x: d, y: u }),
            { x: t.x + d, y: t.y + u }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              r = new qz(t, i);
            this._positionChanges.next(r);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            r = t.overlayY;
          i =
            'center' === t.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === t.overlayX
                ? 'right'
                : 'left'
              : 'start' === t.overlayX
              ? 'left'
              : 'right';
          for (let o = 0; o < e.length; o++)
            e[o].style.transformOrigin = `${i} ${r}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const i = this._viewportRect,
            r = this._isRtl();
          let o, a, s, d, u, h;
          if ('top' === e.overlayY)
            (a = t.y), (o = i.height - a + this._viewportMargin);
          else if ('bottom' === e.overlayY)
            (s = i.height - t.y + 2 * this._viewportMargin),
              (o = i.height - s + this._viewportMargin);
          else {
            const f = Math.min(i.bottom - t.y + i.top, t.y),
              g = this._lastBoundingBoxSize.height;
            (o = 2 * f),
              (a = t.y - f),
              o > g &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (a = t.y - g / 2);
          }
          if (('end' === e.overlayX && !r) || ('start' === e.overlayX && r))
            (h = i.width - t.x + this._viewportMargin),
              (d = t.x - this._viewportMargin);
          else if (
            ('start' === e.overlayX && !r) ||
            ('end' === e.overlayX && r)
          )
            (u = t.x), (d = i.right - t.x);
          else {
            const f = Math.min(i.right - t.x + i.left, t.x),
              g = this._lastBoundingBoxSize.width;
            (d = 2 * f),
              (u = t.x - f),
              d > g &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (u = t.x - g / 2);
          }
          return { top: a, left: u, bottom: s, right: h, width: d, height: o };
        }
        _setBoundingBoxStyles(t, e) {
          const i = this._calculateBoundingBoxRect(t, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = '0'),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ''),
              (r.width = r.height = '100%');
          else {
            const o = this._overlayRef.getConfig().maxHeight,
              a = this._overlayRef.getConfig().maxWidth;
            (r.height = vt(i.height)),
              (r.top = vt(i.top)),
              (r.bottom = vt(i.bottom)),
              (r.width = vt(i.width)),
              (r.left = vt(i.left)),
              (r.right = vt(i.right)),
              (r.alignItems =
                'center' === e.overlayX
                  ? 'center'
                  : 'end' === e.overlayX
                  ? 'flex-end'
                  : 'flex-start'),
              (r.justifyContent =
                'center' === e.overlayY
                  ? 'center'
                  : 'bottom' === e.overlayY
                  ? 'flex-end'
                  : 'flex-start'),
              o && (r.maxHeight = vt(o)),
              a && (r.maxWidth = vt(a));
          }
          (this._lastBoundingBoxSize = i), ao(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          ao(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          ao(this._pane.style, {
            top: '',
            left: '',
            bottom: '',
            right: '',
            position: '',
            transform: '',
          });
        }
        _setOverlayElementStyles(t, e) {
          const i = {},
            r = this._hasExactPosition(),
            o = this._hasFlexibleDimensions,
            a = this._overlayRef.getConfig();
          if (r) {
            const d = this._viewportRuler.getViewportScrollPosition();
            ao(i, this._getExactOverlayY(e, t, d)),
              ao(i, this._getExactOverlayX(e, t, d));
          } else i.position = 'static';
          let s = '',
            l = this._getOffset(e, 'x'),
            c = this._getOffset(e, 'y');
          l && (s += `translateX(${l}px) `),
            c && (s += `translateY(${c}px)`),
            (i.transform = s.trim()),
            a.maxHeight &&
              (r ? (i.maxHeight = vt(a.maxHeight)) : o && (i.maxHeight = '')),
            a.maxWidth &&
              (r ? (i.maxWidth = vt(a.maxWidth)) : o && (i.maxWidth = '')),
            ao(this._pane.style, i);
        }
        _getExactOverlayY(t, e, i) {
          let r = { top: '', bottom: '' },
            o = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
            'bottom' === t.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (o.y + this._overlayRect.height) +
                  'px')
              : (r.top = vt(o.y)),
            r
          );
        }
        _getExactOverlayX(t, e, i) {
          let a,
            r = { left: '', right: '' },
            o = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
            (a = this._isRtl()
              ? 'end' === t.overlayX
                ? 'left'
                : 'right'
              : 'end' === t.overlayX
              ? 'right'
              : 'left'),
            'right' === a
              ? (r.right =
                  this._document.documentElement.clientWidth -
                  (o.x + this._overlayRect.width) +
                  'px')
              : (r.left = vt(o.x)),
            r
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((r) =>
              r.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: sE(t, i),
            isOriginOutsideView: Fg(t, i),
            isOverlayClipped: sE(e, i),
            isOverlayOutsideView: Fg(e, i),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((i, r) => i - Math.max(r, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + t - this._viewportMargin,
            bottom: i.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return 'x' === e
            ? null == t.offsetX
              ? this._offsetX
              : t.offsetX
            : null == t.offsetY
            ? this._offsetY
            : t.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(t) {
          this._pane &&
            hu(t).forEach((e) => {
              '' !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof j) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            i = t.height || 0;
          return {
            top: t.y,
            bottom: t.y + i,
            left: t.x,
            right: t.x + e,
            height: i,
            width: e,
          };
        }
      }
      function ao(n, t) {
        for (let e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
        return n;
      }
      function uE(n) {
        if ('number' != typeof n && null != n) {
          const [t, e] = n.split(Qz);
          return e && 'px' !== e ? null : parseFloat(t);
        }
        return n || null;
      }
      function hE(n) {
        return {
          top: Math.floor(n.top),
          right: Math.floor(n.right),
          bottom: Math.floor(n.bottom),
          left: Math.floor(n.left),
          width: Math.floor(n.width),
          height: Math.floor(n.height),
        };
      }
      const mE = 'cdk-global-overlay-wrapper';
      class ej {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._alignItems = ''),
            (this._xPosition = ''),
            (this._xOffset = ''),
            (this._width = ''),
            (this._height = ''),
            (this._isDisposed = !1);
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add(mE),
            (this._isDisposed = !1);
        }
        top(t = '') {
          return (
            (this._bottomOffset = ''),
            (this._topOffset = t),
            (this._alignItems = 'flex-start'),
            this
          );
        }
        left(t = '') {
          return (this._xOffset = t), (this._xPosition = 'left'), this;
        }
        bottom(t = '') {
          return (
            (this._topOffset = ''),
            (this._bottomOffset = t),
            (this._alignItems = 'flex-end'),
            this
          );
        }
        right(t = '') {
          return (this._xOffset = t), (this._xPosition = 'right'), this;
        }
        start(t = '') {
          return (this._xOffset = t), (this._xPosition = 'start'), this;
        }
        end(t = '') {
          return (this._xOffset = t), (this._xPosition = 'end'), this;
        }
        width(t = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: t })
              : (this._width = t),
            this
          );
        }
        height(t = '') {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: t })
              : (this._height = t),
            this
          );
        }
        centerHorizontally(t = '') {
          return this.left(t), (this._xPosition = 'center'), this;
        }
        centerVertically(t = '') {
          return this.top(t), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: r, height: o, maxWidth: a, maxHeight: s } = i,
            l = !(
              ('100%' !== r && '100vw' !== r) ||
              (a && '100%' !== a && '100vw' !== a)
            ),
            c = !(
              ('100%' !== o && '100vh' !== o) ||
              (s && '100%' !== s && '100vh' !== s)
            ),
            d = this._xPosition,
            u = this._xOffset,
            h = 'rtl' === this._overlayRef.getConfig().direction;
          let f = '',
            g = '',
            v = '';
          l
            ? (v = 'flex-start')
            : 'center' === d
            ? ((v = 'center'), h ? (g = u) : (f = u))
            : h
            ? 'left' === d || 'end' === d
              ? ((v = 'flex-end'), (f = u))
              : ('right' === d || 'start' === d) &&
                ((v = 'flex-start'), (g = u))
            : 'left' === d || 'start' === d
            ? ((v = 'flex-start'), (f = u))
            : ('right' === d || 'end' === d) && ((v = 'flex-end'), (g = u)),
            (t.position = this._cssPosition),
            (t.marginLeft = l ? '0' : f),
            (t.marginTop = c ? '0' : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = l ? '0' : g),
            (e.justifyContent = v),
            (e.alignItems = c ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            i = e.style;
          e.classList.remove(mE),
            (i.justifyContent =
              i.alignItems =
              t.marginTop =
              t.marginBottom =
              t.marginLeft =
              t.marginRight =
              t.position =
                ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let tj = (() => {
          class n {
            constructor(e, i, r, o) {
              (this._viewportRuler = e),
                (this._document = i),
                (this._platform = r),
                (this._overlayContainer = o);
            }
            global() {
              return new ej();
            }
            flexibleConnectedTo(e) {
              return new Jz(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(xa), C(oe), C(je), C(cE));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        nj = 0,
        Jn = (() => {
          class n {
            constructor(e, i, r, o, a, s, l, c, d, u, h, f) {
              (this.scrollStrategies = e),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = r),
                (this._positionBuilder = o),
                (this._keyboardDispatcher = a),
                (this._injector = s),
                (this._ngZone = l),
                (this._document = c),
                (this._directionality = d),
                (this._location = u),
                (this._outsideClickDispatcher = h),
                (this._animationsModuleType = f);
            }
            create(e) {
              const i = this._createHostElement(),
                r = this._createPaneElement(i),
                o = this._createPortalOutlet(r),
                a = new Mu(e);
              return (
                (a.direction = a.direction || this._directionality.value),
                new Zz(
                  o,
                  i,
                  r,
                  a,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  'NoopAnimations' === this._animationsModuleType
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const i = this._document.createElement('div');
              return (
                (i.id = 'cdk-overlay-' + nj++),
                i.classList.add('cdk-overlay-pane'),
                e.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const e = this._document.createElement('div');
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(ra)),
                new Uz(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                C(Yz),
                C(cE),
                C(zr),
                C(tj),
                C(Kz),
                C(Dt),
                C(U),
                C(oe),
                C(Qn),
                C(vd),
                C(Xz),
                C(Yt, 8)
              );
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      const ij = [
          {
            originX: 'start',
            originY: 'bottom',
            overlayX: 'start',
            overlayY: 'top',
          },
          {
            originX: 'start',
            originY: 'top',
            overlayX: 'start',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'top',
            overlayX: 'end',
            overlayY: 'bottom',
          },
          {
            originX: 'end',
            originY: 'bottom',
            overlayX: 'end',
            overlayY: 'top',
          },
        ],
        fE = new A('cdk-connected-overlay-scroll-strategy');
      let Pg = (() => {
          class n {
            constructor(e) {
              this.elementRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['', 'cdk-overlay-origin', ''],
                ['', 'overlay-origin', ''],
                ['', 'cdkOverlayOrigin', ''],
              ],
              exportAs: ['cdkOverlayOrigin'],
              standalone: !0,
            })),
            n
          );
        })(),
        pE = (() => {
          class n {
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(e) {
              (this._offsetX = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(e) {
              (this._offsetY = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = ce(e);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(e) {
              this._lockPosition = ce(e);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(e) {
              this._flexibleDimensions = ce(e);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(e) {
              this._growAfterOpen = ce(e);
            }
            get push() {
              return this._push;
            }
            set push(e) {
              this._push = ce(e);
            }
            constructor(e, i, r, o, a) {
              (this._overlay = e),
                (this._dir = a),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = Oe.EMPTY),
                (this._attachSubscription = Oe.EMPTY),
                (this._detachSubscription = Oe.EMPTY),
                (this._positionSubscription = Oe.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new re()),
                (this.positionChange = new re()),
                (this.attach = new re()),
                (this.detach = new re()),
                (this.overlayKeydown = new re()),
                (this.overlayOutsideClick = new re()),
                (this._templatePortal = new Du(i, r)),
                (this._scrollStrategyFactory = o),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : 'ltr';
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(e) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                e.origin && this.open && this._position.apply()),
                e.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = ij);
              const e = (this._overlayRef = this._overlay.create(
                this._buildConfig()
              ));
              (this._attachSubscription = e
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = e
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                e.keydownEvents().subscribe((i) => {
                  this.overlayKeydown.next(i),
                    27 === i.keyCode &&
                      !this.disableClose &&
                      !Zn(i) &&
                      (i.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((i) => {
                  this.overlayOutsideClick.next(i);
                });
            }
            _buildConfig() {
              const e = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                i = new Mu({
                  direction: this._dir,
                  positionStrategy: e,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (i.width = this.width),
                (this.height || 0 === this.height) && (i.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (i.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (i.minHeight = this.minHeight),
                this.backdropClass && (i.backdropClass = this.backdropClass),
                this.panelClass && (i.panelClass = this.panelClass),
                i
              );
            }
            _updatePositionStrategy(e) {
              const i = this.positions.map((r) => ({
                originX: r.originX,
                originY: r.originY,
                overlayX: r.overlayX,
                overlayY: r.overlayY,
                offsetX: r.offsetX || this.offsetX,
                offsetY: r.offsetY || this.offsetY,
                panelClass: r.panelClass || void 0,
              }));
              return e
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(i)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const e = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin()
                );
              return this._updatePositionStrategy(e), e;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof Pg
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((e) => {
                        this.backdropClick.emit(e);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(iD(() => this.positionChange.observers.length > 0))
                    .subscribe((e) => {
                      this.positionChange.emit(e),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Jn), m(ut), m(ht), m(fE), m(Qn, 8));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['', 'cdk-connected-overlay', ''],
                ['', 'connected-overlay', ''],
                ['', 'cdkConnectedOverlay', ''],
              ],
              inputs: {
                origin: ['cdkConnectedOverlayOrigin', 'origin'],
                positions: ['cdkConnectedOverlayPositions', 'positions'],
                positionStrategy: [
                  'cdkConnectedOverlayPositionStrategy',
                  'positionStrategy',
                ],
                offsetX: ['cdkConnectedOverlayOffsetX', 'offsetX'],
                offsetY: ['cdkConnectedOverlayOffsetY', 'offsetY'],
                width: ['cdkConnectedOverlayWidth', 'width'],
                height: ['cdkConnectedOverlayHeight', 'height'],
                minWidth: ['cdkConnectedOverlayMinWidth', 'minWidth'],
                minHeight: ['cdkConnectedOverlayMinHeight', 'minHeight'],
                backdropClass: [
                  'cdkConnectedOverlayBackdropClass',
                  'backdropClass',
                ],
                panelClass: ['cdkConnectedOverlayPanelClass', 'panelClass'],
                viewportMargin: [
                  'cdkConnectedOverlayViewportMargin',
                  'viewportMargin',
                ],
                scrollStrategy: [
                  'cdkConnectedOverlayScrollStrategy',
                  'scrollStrategy',
                ],
                open: ['cdkConnectedOverlayOpen', 'open'],
                disableClose: [
                  'cdkConnectedOverlayDisableClose',
                  'disableClose',
                ],
                transformOriginSelector: [
                  'cdkConnectedOverlayTransformOriginOn',
                  'transformOriginSelector',
                ],
                hasBackdrop: ['cdkConnectedOverlayHasBackdrop', 'hasBackdrop'],
                lockPosition: [
                  'cdkConnectedOverlayLockPosition',
                  'lockPosition',
                ],
                flexibleDimensions: [
                  'cdkConnectedOverlayFlexibleDimensions',
                  'flexibleDimensions',
                ],
                growAfterOpen: [
                  'cdkConnectedOverlayGrowAfterOpen',
                  'growAfterOpen',
                ],
                push: ['cdkConnectedOverlayPush', 'push'],
              },
              outputs: {
                backdropClick: 'backdropClick',
                positionChange: 'positionChange',
                attach: 'attach',
                detach: 'detach',
                overlayKeydown: 'overlayKeydown',
                overlayOutsideClick: 'overlayOutsideClick',
              },
              exportAs: ['cdkConnectedOverlay'],
              standalone: !0,
              features: [dt],
            })),
            n
          );
        })();
      const oj = {
        provide: fE,
        deps: [Jn],
        useFactory: function rj(n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let hl = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = he({ type: n })),
          (n.ɵinj = de({ providers: [Jn, oj], imports: [al, Og, Tg, Tg] })),
          n
        );
      })();
      class gE {}
      class aj {}
      const Yi = '*';
      function Ci(n, t) {
        return { type: 7, name: n, definitions: t, options: {} };
      }
      function Vt(n, t = null) {
        return { type: 4, styles: t, timings: n };
      }
      function _E(n, t = null) {
        return { type: 2, steps: n, options: t };
      }
      function Ye(n) {
        return { type: 6, styles: n, offset: null };
      }
      function On(n, t, e) {
        return { type: 0, name: n, styles: t, options: e };
      }
      function At(n, t, e = null) {
        return { type: 1, expr: n, animation: t, options: e };
      }
      function sj(n = null) {
        return { type: 9, options: n };
      }
      function lj(n, t, e = null) {
        return { type: 11, selector: n, animation: t, options: e };
      }
      function bE(n) {
        Promise.resolve().then(n);
      }
      class ml {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          bE(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(t) {
          this._position = this.totalTime ? t * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class yE {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            i = 0,
            r = 0;
          const o = this.players.length;
          0 == o
            ? bE(() => this._onFinish())
            : this.players.forEach((a) => {
                a.onDone(() => {
                  ++e == o && this._onFinish();
                }),
                  a.onDestroy(() => {
                    ++i == o && this._onDestroy();
                  }),
                  a.onStart(() => {
                    ++r == o && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (a, s) => Math.max(a, s.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((t) => t()),
            (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((i) => {
            const r = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(r);
          });
        }
        getPosition() {
          const t = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != t ? t.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      const cj = ['matFormFieldNotchedOutline', ''],
        dj = ['*'],
        uj = ['textField'],
        hj = ['iconPrefixContainer'],
        mj = ['textPrefixContainer'];
      function fj(n, t) {
        1 & n && ne(0, 'span', 19);
      }
      function pj(n, t) {
        if (1 & n) {
          const e = ui();
          _(0, 'label', 17),
            O('cdkObserveContent', function () {
              return Zt(e), Qt(G(2)._refreshOutlineNotchWidth());
            }),
            Y(1, 1),
            E(2, fj, 1, 0, 'span', 18),
            p();
        }
        if (2 & n) {
          const e = G(2);
          D('floating', e._shouldLabelFloat())(
            'cdkObserveContentDisabled',
            !e._hasOutline()
          )('id', e._labelId),
            ve('for', e._control.id)('aria-owns', e._control.id),
            b(2),
            D('ngIf', !e.hideRequiredMarker && e._control.required);
        }
      }
      function gj(n, t) {
        1 & n && E(0, pj, 3, 6, 'label', 16),
          2 & n && D('ngIf', G()._hasFloatingLabel());
      }
      function _j(n, t) {
        1 & n && ne(0, 'div', 20);
      }
      function vj(n, t) {}
      function bj(n, t) {
        1 & n && E(0, vj, 0, 0, 'ng-template', 22),
          2 & n && (G(2), D('ngTemplateOutlet', En(1)));
      }
      function yj(n, t) {
        if (
          (1 & n && (_(0, 'div', 21), E(1, bj, 1, 1, 'ng-template', 9), p()),
          2 & n)
        ) {
          const e = G();
          D('matFormFieldNotchedOutlineOpen', e._shouldLabelFloat())(
            'matFormFieldNotchedOutlineLabelWidth',
            e._labelWidth
          ),
            b(1),
            D('ngIf', !e._forceDisplayInfixLabel());
        }
      }
      function wj(n, t) {
        1 & n && (_(0, 'div', 23, 24), Y(2, 2), p());
      }
      function Cj(n, t) {
        1 & n && (_(0, 'div', 25, 26), Y(2, 3), p());
      }
      function xj(n, t) {}
      function Dj(n, t) {
        1 & n && E(0, xj, 0, 0, 'ng-template', 22),
          2 & n && (G(), D('ngTemplateOutlet', En(1)));
      }
      function Mj(n, t) {
        1 & n && (_(0, 'div', 27), Y(1, 4), p());
      }
      function Ej(n, t) {
        1 & n && (_(0, 'div', 28), Y(1, 5), p());
      }
      function Sj(n, t) {
        1 & n && ne(0, 'div', 29);
      }
      function kj(n, t) {
        1 & n && (_(0, 'div', 30), Y(1, 6), p()),
          2 & n && D('@transitionMessages', G()._subscriptAnimationState);
      }
      function Aj(n, t) {
        if ((1 & n && (_(0, 'mat-hint', 34), w(1), p()), 2 & n)) {
          const e = G(2);
          D('id', e._hintLabelId), b(1), De(e.hintLabel);
        }
      }
      function Tj(n, t) {
        if (
          (1 & n &&
            (_(0, 'div', 31),
            E(1, Aj, 2, 2, 'mat-hint', 32),
            Y(2, 7),
            ne(3, 'div', 33),
            Y(4, 8),
            p()),
          2 & n)
        ) {
          const e = G();
          D('@transitionMessages', e._subscriptAnimationState),
            b(1),
            D('ngIf', e.hintLabel);
        }
      }
      const Ij = [
          '*',
          [['mat-label']],
          [
            ['', 'matPrefix', ''],
            ['', 'matIconPrefix', ''],
          ],
          [['', 'matTextPrefix', '']],
          [['', 'matTextSuffix', '']],
          [
            ['', 'matSuffix', ''],
            ['', 'matIconSuffix', ''],
          ],
          [['mat-error'], ['', 'matError', '']],
          [['mat-hint', 3, 'align', 'end']],
          [['mat-hint', 'align', 'end']],
        ],
        Rj = [
          '*',
          'mat-label',
          '[matPrefix], [matIconPrefix]',
          '[matTextPrefix]',
          '[matTextSuffix]',
          '[matSuffix], [matIconSuffix]',
          'mat-error, [matError]',
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let xi = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({ type: n, selectors: [['mat-label']] })),
            n
          );
        })(),
        Oj = 0;
      const wE = new A('MatError');
      let Eu = (() => {
          class n {
            constructor(e, i) {
              (this.id = 'mat-mdc-error-' + Oj++),
                e || i.nativeElement.setAttribute('aria-live', 'polite');
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(cr('aria-live'), m(j));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['mat-error'], ['', 'matError', '']],
              hostAttrs: [
                'aria-atomic',
                'true',
                1,
                'mat-mdc-form-field-error',
                'mat-mdc-form-field-bottom-align',
              ],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && qr('id', i.id);
              },
              inputs: { id: 'id' },
              features: [X([{ provide: wE, useExisting: n }])],
            })),
            n
          );
        })(),
        Fj = 0,
        CE = (() => {
          class n {
            constructor() {
              (this.align = 'start'), (this.id = 'mat-mdc-hint-' + Fj++);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['mat-hint']],
              hostAttrs: [
                1,
                'mat-mdc-form-field-hint',
                'mat-mdc-form-field-bottom-align',
              ],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  (qr('id', i.id),
                  ve('align', null),
                  be('mat-mdc-form-field-hint-end', 'end' === i.align));
              },
              inputs: { align: 'align', id: 'id' },
            })),
            n
          );
        })();
      const Pj = new A('MatPrefix'),
        Nj = new A('MatSuffix');
      let xE = (() => {
        class n {
          constructor(e) {
            (this._elementRef = e), (this.floating = !1);
          }
          getWidth() {
            return (function Lj(n) {
              if (null !== n.offsetParent) return n.scrollWidth;
              const e = n.cloneNode(!0);
              e.style.setProperty('position', 'absolute'),
                e.style.setProperty('transform', 'translate(-9999px, -9999px)'),
                document.documentElement.appendChild(e);
              const i = e.scrollWidth;
              return e.remove(), i;
            })(this._elementRef.nativeElement);
          }
          get element() {
            return this._elementRef.nativeElement;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(j));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['label', 'matFormFieldFloatingLabel', '']],
            hostAttrs: [1, 'mdc-floating-label', 'mat-mdc-floating-label'],
            hostVars: 2,
            hostBindings: function (e, i) {
              2 & e && be('mdc-floating-label--float-above', i.floating);
            },
            inputs: { floating: 'floating' },
          })),
          n
        );
      })();
      const DE = 'mdc-line-ripple--active',
        Su = 'mdc-line-ripple--deactivating';
      let ME = (() => {
          class n {
            constructor(e, i) {
              (this._elementRef = e),
                (this._handleTransitionEnd = (r) => {
                  const o = this._elementRef.nativeElement.classList,
                    a = o.contains(Su);
                  'opacity' === r.propertyName && a && o.remove(DE, Su);
                }),
                i.runOutsideAngular(() => {
                  e.nativeElement.addEventListener(
                    'transitionend',
                    this._handleTransitionEnd
                  );
                });
            }
            activate() {
              const e = this._elementRef.nativeElement.classList;
              e.remove(Su), e.add(DE);
            }
            deactivate() {
              this._elementRef.nativeElement.classList.add(Su);
            }
            ngOnDestroy() {
              this._elementRef.nativeElement.removeEventListener(
                'transitionend',
                this._handleTransitionEnd
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(U));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['div', 'matFormFieldLineRipple', '']],
              hostAttrs: [1, 'mdc-line-ripple'],
            })),
            n
          );
        })(),
        EE = (() => {
          class n {
            constructor(e, i) {
              (this._elementRef = e),
                (this._ngZone = i),
                (this.labelWidth = 0),
                (this.open = !1);
            }
            ngAfterViewInit() {
              const e = this._elementRef.nativeElement.querySelector(
                '.mdc-floating-label'
              );
              e
                ? (this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--upgraded'
                  ),
                  'function' == typeof requestAnimationFrame &&
                    ((e.style.transitionDuration = '0s'),
                    this._ngZone.runOutsideAngular(() => {
                      requestAnimationFrame(
                        () => (e.style.transitionDuration = '')
                      );
                    })))
                : this._elementRef.nativeElement.classList.add(
                    'mdc-notched-outline--no-label'
                  );
            }
            _getNotchWidth() {
              return this.open
                ? this.labelWidth > 0
                  ? `calc(${this.labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`
                  : '0px'
                : null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(U));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['div', 'matFormFieldNotchedOutline', '']],
              hostAttrs: [1, 'mdc-notched-outline'],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && be('mdc-notched-outline--notched', i.open);
              },
              inputs: {
                labelWidth: [
                  'matFormFieldNotchedOutlineLabelWidth',
                  'labelWidth',
                ],
                open: ['matFormFieldNotchedOutlineOpen', 'open'],
              },
              attrs: cj,
              ngContentSelectors: dj,
              decls: 4,
              vars: 2,
              consts: [
                [1, 'mdc-notched-outline__leading'],
                [1, 'mdc-notched-outline__notch'],
                [1, 'mdc-notched-outline__trailing'],
              ],
              template: function (e, i) {
                1 & e &&
                  (Xe(),
                  ne(0, 'div', 0),
                  _(1, 'div', 1),
                  Y(2),
                  p(),
                  ne(3, 'div', 2)),
                  2 & e && (b(1), hi('width', i._getNotchWidth()));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      const Vj = {
        transitionMessages: Ci('transitionMessages', [
          On('enter', Ye({ opacity: 1, transform: 'translateY(0%)' })),
          At('void => enter', [
            Ye({ opacity: 0, transform: 'translateY(-5px)' }),
            Vt('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ]),
        ]),
      };
      let Lg = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = S({ type: n })),
          n
        );
      })();
      const ku = new A('MatFormField'),
        Bj = new A('MAT_FORM_FIELD_DEFAULT_OPTIONS');
      let SE = 0,
        qi = (() => {
          class n {
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(e) {
              this._hideRequiredMarker = ce(e);
            }
            get floatLabel() {
              return this._floatLabel || this._defaults?.floatLabel || 'auto';
            }
            set floatLabel(e) {
              e !== this._floatLabel &&
                ((this._floatLabel = e),
                this._changeDetectorRef.markForCheck());
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(e) {
              const i = this._appearance;
              (this._appearance = e || this._defaults?.appearance || 'fill'),
                'outline' === this._appearance &&
                  this._appearance !== i &&
                  (this._refreshOutlineNotchWidth(),
                  (this._needsOutlineLabelOffsetUpdateOnStable = !0));
            }
            get subscriptSizing() {
              return (
                this._subscriptSizing ||
                this._defaults?.subscriptSizing ||
                'fixed'
              );
            }
            set subscriptSizing(e) {
              this._subscriptSizing =
                e || this._defaults?.subscriptSizing || 'fixed';
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(e) {
              (this._hintLabel = e), this._processHints();
            }
            get _control() {
              return this._explicitFormFieldControl || this._formFieldControl;
            }
            set _control(e) {
              this._explicitFormFieldControl = e;
            }
            constructor(e, i, r, o, a, s, l, c) {
              (this._elementRef = e),
                (this._changeDetectorRef = i),
                (this._ngZone = r),
                (this._dir = o),
                (this._platform = a),
                (this._defaults = s),
                (this._animationMode = l),
                (this._document = c),
                (this._hideRequiredMarker = !1),
                (this.color = 'primary'),
                (this._appearance = 'fill'),
                (this._subscriptSizing = null),
                (this._hintLabel = ''),
                (this._hasIconPrefix = !1),
                (this._hasTextPrefix = !1),
                (this._hasIconSuffix = !1),
                (this._hasTextSuffix = !1),
                (this._labelId = 'mat-mdc-form-field-label-' + SE++),
                (this._hintLabelId = 'mat-mdc-hint-' + SE++),
                (this._subscriptAnimationState = ''),
                (this._labelWidth = 0),
                (this._destroyed = new z()),
                (this._isFocused = null),
                (this._needsOutlineLabelOffsetUpdateOnStable = !1),
                s &&
                  (s.appearance && (this.appearance = s.appearance),
                  (this._hideRequiredMarker = Boolean(s?.hideRequiredMarker)),
                  s.color && (this.color = s.color));
            }
            ngAfterViewInit() {
              this._updateFocusState(),
                this._refreshOutlineNotchWidth(),
                this._document?.fonts?.ready
                  ? this._document.fonts.ready.then(() => {
                      this._refreshOutlineNotchWidth(),
                        this._changeDetectorRef.markForCheck();
                    })
                  : setTimeout(() => this._refreshOutlineNotchWidth(), 100),
                (this._subscriptAnimationState = 'enter'),
                this._changeDetectorRef.detectChanges();
            }
            ngAfterContentInit() {
              this._assertFormFieldControl(),
                this._initializeControl(),
                this._initializeSubscript(),
                this._initializePrefixAndSuffix(),
                this._initializeOutlineLabelOffsetSubscriptions();
            }
            ngAfterContentChecked() {
              this._assertFormFieldControl();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._textField || this._elementRef;
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() && (this.floatLabel = 'always');
            }
            _initializeControl() {
              const e = this._control;
              e.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-mdc-form-field-type-${e.controlType}`
                ),
                e.stateChanges.subscribe(() => {
                  this._updateFocusState(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                e.ngControl &&
                  e.ngControl.valueChanges &&
                  e.ngControl.valueChanges
                    .pipe(me(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck());
            }
            _checkPrefixAndSuffixTypes() {
              (this._hasIconPrefix = !!this._prefixChildren.find(
                (e) => !e._isText
              )),
                (this._hasTextPrefix = !!this._prefixChildren.find(
                  (e) => e._isText
                )),
                (this._hasIconSuffix = !!this._suffixChildren.find(
                  (e) => !e._isText
                )),
                (this._hasTextSuffix = !!this._suffixChildren.find(
                  (e) => e._isText
                ));
            }
            _initializePrefixAndSuffix() {
              this._checkPrefixAndSuffixTypes(),
                on(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes
                ).subscribe(() => {
                  this._checkPrefixAndSuffixTypes(),
                    this._changeDetectorRef.markForCheck();
                });
            }
            _initializeSubscript() {
              this._hintChildren.changes.subscribe(() => {
                this._processHints(), this._changeDetectorRef.markForCheck();
              }),
                this._errorChildren.changes.subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._validateHints(),
                this._syncDescribedByIds();
            }
            _assertFormFieldControl() {}
            _updateFocusState() {
              this._control.focused && !this._isFocused
                ? ((this._isFocused = !0), this._lineRipple?.activate())
                : !this._control.focused &&
                  (this._isFocused || null === this._isFocused) &&
                  ((this._isFocused = !1), this._lineRipple?.deactivate()),
                this._textField?.nativeElement.classList.toggle(
                  'mdc-text-field--focused',
                  this._control.focused
                );
            }
            _initializeOutlineLabelOffsetSubscriptions() {
              this._prefixChildren.changes.subscribe(
                () => (this._needsOutlineLabelOffsetUpdateOnStable = !0)
              ),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe(me(this._destroyed))
                    .subscribe(() => {
                      this._needsOutlineLabelOffsetUpdateOnStable &&
                        ((this._needsOutlineLabelOffsetUpdateOnStable = !1),
                        this._updateOutlineLabelOffset());
                    });
                }),
                this._dir.change
                  .pipe(me(this._destroyed))
                  .subscribe(
                    () => (this._needsOutlineLabelOffsetUpdateOnStable = !0)
                  );
            }
            _shouldAlwaysFloat() {
              return 'always' === this.floatLabel;
            }
            _hasOutline() {
              return 'outline' === this.appearance;
            }
            _forceDisplayInfixLabel() {
              return (
                !this._platform.isBrowser &&
                this._prefixChildren.length &&
                !this._shouldLabelFloat()
              );
            }
            _hasFloatingLabel() {
              return !!this._labelChildNonStatic || !!this._labelChildStatic;
            }
            _shouldLabelFloat() {
              return (
                this._control.shouldLabelFloat || this._shouldAlwaysFloat()
              );
            }
            _shouldForward(e) {
              const i = this._control ? this._control.ngControl : null;
              return i && i[e];
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? 'error'
                : 'hint';
            }
            _refreshOutlineNotchWidth() {
              !this._hasOutline() ||
                !this._floatingLabel ||
                (this._labelWidth = this._floatingLabel.getWidth());
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _syncDescribedByIds() {
              if (this._control) {
                let e = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    'string' == typeof this._control.userAriaDescribedBy &&
                    e.push(...this._control.userAriaDescribedBy.split(' ')),
                  'hint' === this._getDisplayedMessages())
                ) {
                  const i = this._hintChildren
                      ? this._hintChildren.find((o) => 'start' === o.align)
                      : null,
                    r = this._hintChildren
                      ? this._hintChildren.find((o) => 'end' === o.align)
                      : null;
                  i
                    ? e.push(i.id)
                    : this._hintLabel && e.push(this._hintLabelId),
                    r && e.push(r.id);
                } else
                  this._errorChildren &&
                    e.push(...this._errorChildren.map((i) => i.id));
                this._control.setDescribedByIds(e);
              }
            }
            _updateOutlineLabelOffset() {
              if (
                !this._platform.isBrowser ||
                !this._hasOutline() ||
                !this._floatingLabel
              )
                return;
              const e = this._floatingLabel.element;
              if (!this._iconPrefixContainer && !this._textPrefixContainer)
                return void (e.style.transform = '');
              if (!this._isAttachedToDom())
                return void (this._needsOutlineLabelOffsetUpdateOnStable = !0);
              const i = this._iconPrefixContainer?.nativeElement,
                r = this._textPrefixContainer?.nativeElement,
                o = i?.getBoundingClientRect().width ?? 0,
                a = r?.getBoundingClientRect().width ?? 0;
              e.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        translateY(-50%) translateX(calc(${
                'rtl' === this._dir.value ? '-1' : '1'
              } * (${
                o + a
              }px + var(--mat-mdc-form-field-label-offset-x, 0px))))\n    )`;
            }
            _isAttachedToDom() {
              const e = this._elementRef.nativeElement;
              if (e.getRootNode) {
                const i = e.getRootNode();
                return i && i !== e;
              }
              return document.documentElement.contains(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(j),
                m(mt),
                m(U),
                m(Qn),
                m(je),
                m(Bj, 8),
                m(Yt, 8),
                m(oe)
              );
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-form-field']],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e &&
                    (Me(r, xi, 5),
                    Me(r, xi, 7),
                    Me(r, Lg, 5),
                    Me(r, Pj, 5),
                    Me(r, Nj, 5),
                    Me(r, wE, 5),
                    Me(r, CE, 5)),
                  2 & e)
                ) {
                  let o;
                  V((o = B())) && (i._labelChildNonStatic = o.first),
                    V((o = B())) && (i._labelChildStatic = o.first),
                    V((o = B())) && (i._formFieldControl = o.first),
                    V((o = B())) && (i._prefixChildren = o),
                    V((o = B())) && (i._suffixChildren = o),
                    V((o = B())) && (i._errorChildren = o),
                    V((o = B())) && (i._hintChildren = o);
                }
              },
              viewQuery: function (e, i) {
                if (
                  (1 & e &&
                    (Se(uj, 5),
                    Se(hj, 5),
                    Se(mj, 5),
                    Se(xE, 5),
                    Se(EE, 5),
                    Se(ME, 5)),
                  2 & e)
                ) {
                  let r;
                  V((r = B())) && (i._textField = r.first),
                    V((r = B())) && (i._iconPrefixContainer = r.first),
                    V((r = B())) && (i._textPrefixContainer = r.first),
                    V((r = B())) && (i._floatingLabel = r.first),
                    V((r = B())) && (i._notchedOutline = r.first),
                    V((r = B())) && (i._lineRipple = r.first);
                }
              },
              hostAttrs: [1, 'mat-mdc-form-field'],
              hostVars: 42,
              hostBindings: function (e, i) {
                2 & e &&
                  be(
                    'mat-mdc-form-field-label-always-float',
                    i._shouldAlwaysFloat()
                  )('mat-mdc-form-field-has-icon-prefix', i._hasIconPrefix)(
                    'mat-mdc-form-field-has-icon-suffix',
                    i._hasIconSuffix
                  )('mat-form-field-invalid', i._control.errorState)(
                    'mat-form-field-disabled',
                    i._control.disabled
                  )('mat-form-field-autofilled', i._control.autofilled)(
                    'mat-form-field-no-animations',
                    'NoopAnimations' === i._animationMode
                  )('mat-form-field-appearance-fill', 'fill' == i.appearance)(
                    'mat-form-field-appearance-outline',
                    'outline' == i.appearance
                  )(
                    'mat-form-field-hide-placeholder',
                    i._hasFloatingLabel() && !i._shouldLabelFloat()
                  )('mat-focused', i._control.focused)(
                    'mat-primary',
                    'accent' !== i.color && 'warn' !== i.color
                  )('mat-accent', 'accent' === i.color)(
                    'mat-warn',
                    'warn' === i.color
                  )('ng-untouched', i._shouldForward('untouched'))(
                    'ng-touched',
                    i._shouldForward('touched')
                  )('ng-pristine', i._shouldForward('pristine'))(
                    'ng-dirty',
                    i._shouldForward('dirty')
                  )('ng-valid', i._shouldForward('valid'))(
                    'ng-invalid',
                    i._shouldForward('invalid')
                  )('ng-pending', i._shouldForward('pending'));
              },
              inputs: {
                hideRequiredMarker: 'hideRequiredMarker',
                color: 'color',
                floatLabel: 'floatLabel',
                appearance: 'appearance',
                subscriptSizing: 'subscriptSizing',
                hintLabel: 'hintLabel',
              },
              exportAs: ['matFormField'],
              features: [X([{ provide: ku, useExisting: n }])],
              ngContentSelectors: Rj,
              decls: 18,
              vars: 23,
              consts: [
                ['labelTemplate', ''],
                [1, 'mat-mdc-text-field-wrapper', 'mdc-text-field', 3, 'click'],
                ['textField', ''],
                ['class', 'mat-mdc-form-field-focus-overlay', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-flex'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-mdc-form-field-icon-prefix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-prefix', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-infix'],
                [3, 'ngIf'],
                ['class', 'mat-mdc-form-field-text-suffix', 4, 'ngIf'],
                ['class', 'mat-mdc-form-field-icon-suffix', 4, 'ngIf'],
                ['matFormFieldLineRipple', '', 4, 'ngIf'],
                [
                  1,
                  'mat-mdc-form-field-subscript-wrapper',
                  'mat-mdc-form-field-bottom-align',
                  3,
                  'ngSwitch',
                ],
                [
                  'class',
                  'mat-mdc-form-field-error-wrapper',
                  4,
                  'ngSwitchCase',
                ],
                ['class', 'mat-mdc-form-field-hint-wrapper', 4, 'ngSwitchCase'],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                  4,
                  'ngIf',
                ],
                [
                  'matFormFieldFloatingLabel',
                  '',
                  3,
                  'floating',
                  'cdkObserveContentDisabled',
                  'id',
                  'cdkObserveContent',
                ],
                [
                  'aria-hidden',
                  'true',
                  'class',
                  'mat-mdc-form-field-required-marker mdc-floating-label--required',
                  4,
                  'ngIf',
                ],
                [
                  'aria-hidden',
                  'true',
                  1,
                  'mat-mdc-form-field-required-marker',
                  'mdc-floating-label--required',
                ],
                [1, 'mat-mdc-form-field-focus-overlay'],
                [
                  'matFormFieldNotchedOutline',
                  '',
                  3,
                  'matFormFieldNotchedOutlineOpen',
                  'matFormFieldNotchedOutlineLabelWidth',
                ],
                [3, 'ngTemplateOutlet'],
                [1, 'mat-mdc-form-field-icon-prefix'],
                ['iconPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-prefix'],
                ['textPrefixContainer', ''],
                [1, 'mat-mdc-form-field-text-suffix'],
                [1, 'mat-mdc-form-field-icon-suffix'],
                ['matFormFieldLineRipple', ''],
                [1, 'mat-mdc-form-field-error-wrapper'],
                [1, 'mat-mdc-form-field-hint-wrapper'],
                [3, 'id', 4, 'ngIf'],
                [1, 'mat-mdc-form-field-hint-spacer'],
                [3, 'id'],
              ],
              template: function (e, i) {
                1 & e &&
                  (Xe(Ij),
                  E(0, gj, 1, 1, 'ng-template', null, 0, ks),
                  _(2, 'div', 1, 2),
                  O('click', function (o) {
                    return (
                      i._control.onContainerClick &&
                      i._control.onContainerClick(o)
                    );
                  }),
                  E(4, _j, 1, 0, 'div', 3),
                  _(5, 'div', 4),
                  E(6, yj, 2, 3, 'div', 5),
                  E(7, wj, 3, 0, 'div', 6),
                  E(8, Cj, 3, 0, 'div', 7),
                  _(9, 'div', 8),
                  E(10, Dj, 1, 1, 'ng-template', 9),
                  Y(11),
                  p(),
                  E(12, Mj, 2, 0, 'div', 10),
                  E(13, Ej, 2, 0, 'div', 11),
                  p(),
                  E(14, Sj, 1, 0, 'div', 12),
                  p(),
                  _(15, 'div', 13),
                  E(16, kj, 2, 1, 'div', 14),
                  E(17, Tj, 5, 2, 'div', 15),
                  p()),
                  2 & e &&
                    (b(2),
                    be('mdc-text-field--filled', !i._hasOutline())(
                      'mdc-text-field--outlined',
                      i._hasOutline()
                    )('mdc-text-field--no-label', !i._hasFloatingLabel())(
                      'mdc-text-field--disabled',
                      i._control.disabled
                    )('mdc-text-field--invalid', i._control.errorState),
                    b(2),
                    D('ngIf', !i._hasOutline() && !i._control.disabled),
                    b(2),
                    D('ngIf', i._hasOutline()),
                    b(1),
                    D('ngIf', i._hasIconPrefix),
                    b(1),
                    D('ngIf', i._hasTextPrefix),
                    b(2),
                    D('ngIf', !i._hasOutline() || i._forceDisplayInfixLabel()),
                    b(2),
                    D('ngIf', i._hasTextSuffix),
                    b(1),
                    D('ngIf', i._hasIconSuffix),
                    b(1),
                    D('ngIf', !i._hasOutline()),
                    b(1),
                    be(
                      'mat-mdc-form-field-subscript-dynamic-size',
                      'dynamic' === i.subscriptSizing
                    ),
                    D('ngSwitch', i._getDisplayedMessages()),
                    b(1),
                    D('ngSwitchCase', 'error'),
                    b(1),
                    D('ngSwitchCase', 'hint'));
              },
              dependencies: [An, pp, Os, fp, mg, CE, xE, EE, ME],
              styles: [
                '.mdc-text-field{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:"";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 96px / 0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:"*"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;border-top:1px solid;border-bottom:1px solid;pointer-events:none}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid;flex-grow:1}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{flex:0 0 auto;width:auto;max-width:calc(100% - 12px * 2)}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{line-height:normal;pointer-events:all}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:12px;box-sizing:content-box}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-106%) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}',
              ],
              encapsulation: 2,
              data: { animation: [Vj.transitionMessages] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        Vg = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, Tn, fg, Ae] })),
            n
          );
        })();
      class jj {}
      function Bg(n) {
        return n && 'function' == typeof n.connect && !(n instanceof Op);
      }
      class TE {
        applyChanges(t, e, i, r, o) {
          t.forEachOperation((a, s, l) => {
            let c, d;
            if (null == a.previousIndex) {
              const u = i(a, s, l);
              (c = e.createEmbeddedView(u.templateRef, u.context, u.index)),
                (d = 1);
            } else
              null == l
                ? (e.remove(s), (d = 3))
                : ((c = e.get(s)), e.move(c, l), (d = 2));
            o && o({ context: c?.context, operation: d, record: a });
          });
        }
        detach() {}
      }
      class Hg {
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        constructor(t = !1, e, i = !0, r) {
          (this._multiple = t),
            (this._emitChanges = i),
            (this.compareWith = r),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new z()),
            e &&
              e.length &&
              (t
                ? e.forEach((o) => this._markSelected(o))
                : this._markSelected(e[0]),
              (this._selectedToEmit.length = 0));
        }
        select(...t) {
          this._verifyValueAssignment(t),
            t.forEach((i) => this._markSelected(i));
          const e = this._hasQueuedChanges();
          return this._emitChangeEvent(), e;
        }
        deselect(...t) {
          this._verifyValueAssignment(t),
            t.forEach((i) => this._unmarkSelected(i));
          const e = this._hasQueuedChanges();
          return this._emitChangeEvent(), e;
        }
        setSelection(...t) {
          this._verifyValueAssignment(t);
          const e = this.selected,
            i = new Set(t);
          t.forEach((o) => this._markSelected(o)),
            e.filter((o) => !i.has(o)).forEach((o) => this._unmarkSelected(o));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        toggle(t) {
          return this.isSelected(t) ? this.deselect(t) : this.select(t);
        }
        clear(t = !0) {
          this._unmarkAll();
          const e = this._hasQueuedChanges();
          return t && this._emitChangeEvent(), e;
        }
        isSelected(t) {
          return this._selection.has(this._getConcreteValue(t));
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(t) {
          this._multiple && this.selected && this._selected.sort(t);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(t) {
          (t = this._getConcreteValue(t)),
            this.isSelected(t) ||
              (this._multiple || this._unmarkAll(),
              this.isSelected(t) || this._selection.add(t),
              this._emitChanges && this._selectedToEmit.push(t));
        }
        _unmarkSelected(t) {
          (t = this._getConcreteValue(t)),
            this.isSelected(t) &&
              (this._selection.delete(t),
              this._emitChanges && this._deselectedToEmit.push(t));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((t) => this._unmarkSelected(t));
        }
        _verifyValueAssignment(t) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
        _getConcreteValue(t) {
          if (this.compareWith) {
            for (let e of this._selection) if (this.compareWith(t, e)) return e;
            return t;
          }
          return t;
        }
      }
      const fl = new A('_ViewRepeater');
      function RE(...n) {
        const t = Cv(n),
          { args: e, keys: i } = Zx(n),
          r = new Fe((o) => {
            const { length: a } = e;
            if (!a) return void o.complete();
            const s = new Array(a);
            let l = a,
              c = a;
            for (let d = 0; d < a; d++) {
              let u = !1;
              It(e[d]).subscribe(
                qe(
                  o,
                  (h) => {
                    u || ((u = !0), c--), (s[d] = h);
                  },
                  () => l--,
                  void 0,
                  () => {
                    (!l || !u) && (c || o.next(i ? Qx(i, s) : s), o.complete());
                  }
                )
              );
            }
          });
        return t ? r.pipe(Tp(t)) : r;
      }
      let OE = (() => {
          class n {
            constructor(e, i) {
              (this._renderer = e),
                (this._elementRef = i),
                (this.onChange = (r) => {}),
                (this.onTouched = () => {});
            }
            setProperty(e, i) {
              this._renderer.setProperty(this._elementRef.nativeElement, e, i);
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            registerOnChange(e) {
              this.onChange = e;
            }
            setDisabledState(e) {
              this.setProperty('disabled', e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Ni), m(j));
            }),
            (n.ɵdir = S({ type: n })),
            n
          );
        })(),
        so = (() => {
          class n extends OE {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({ type: n, features: [F] })),
            n
          );
        })();
      const Fn = new A('NgValueAccessor'),
        $j = { provide: Fn, useExisting: Pe(() => ei), multi: !0 },
        Wj = new A('CompositionEventMode');
      let ei = (() => {
        class n extends OE {
          constructor(e, i, r) {
            super(e, i),
              (this._compositionMode = r),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function Gj() {
                  const n = gi() ? gi().getUserAgent() : '';
                  return /android (\d+)/.test(n.toLowerCase());
                })());
          }
          writeValue(e) {
            this.setProperty('value', e ?? '');
          }
          _handleInput(e) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(e);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(e) {
            (this._composing = !1), this._compositionMode && this.onChange(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Ni), m(j), m(Wj, 8));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [
              ['input', 'formControlName', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControlName', ''],
              ['input', 'formControl', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControl', ''],
              ['input', 'ngModel', '', 3, 'type', 'checkbox'],
              ['textarea', 'ngModel', ''],
              ['', 'ngDefaultControl', ''],
            ],
            hostBindings: function (e, i) {
              1 & e &&
                O('input', function (o) {
                  return i._handleInput(o.target.value);
                })('blur', function () {
                  return i.onTouched();
                })('compositionstart', function () {
                  return i._compositionStart();
                })('compositionend', function (o) {
                  return i._compositionEnd(o.target.value);
                });
            },
            features: [X([$j]), F],
          })),
          n
        );
      })();
      function yr(n) {
        return (
          null == n ||
          (('string' == typeof n || Array.isArray(n)) && 0 === n.length)
        );
      }
      function PE(n) {
        return null != n && 'number' == typeof n.length;
      }
      const Tt = new A('NgValidators'),
        wr = new A('NgAsyncValidators'),
        qj =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class qt {
        static min(t) {
          return (function NE(n) {
            return (t) => {
              if (yr(t.value) || yr(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e < n
                ? { min: { min: n, actual: t.value } }
                : null;
            };
          })(t);
        }
        static max(t) {
          return (function LE(n) {
            return (t) => {
              if (yr(t.value) || yr(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e > n
                ? { max: { max: n, actual: t.value } }
                : null;
            };
          })(t);
        }
        static required(t) {
          return VE(t);
        }
        static requiredTrue(t) {
          return (function BE(n) {
            return !0 === n.value ? null : { required: !0 };
          })(t);
        }
        static email(t) {
          return (function HE(n) {
            return yr(n.value) || qj.test(n.value) ? null : { email: !0 };
          })(t);
        }
        static minLength(t) {
          return (function zE(n) {
            return (t) =>
              yr(t.value) || !PE(t.value)
                ? null
                : t.value.length < n
                ? {
                    minlength: {
                      requiredLength: n,
                      actualLength: t.value.length,
                    },
                  }
                : null;
          })(t);
        }
        static maxLength(t) {
          return jE(t);
        }
        static pattern(t) {
          return (function UE(n) {
            if (!n) return Au;
            let t, e;
            return (
              'string' == typeof n
                ? ((e = ''),
                  '^' !== n.charAt(0) && (e += '^'),
                  (e += n),
                  '$' !== n.charAt(n.length - 1) && (e += '$'),
                  (t = new RegExp(e)))
                : ((e = n.toString()), (t = n)),
              (i) => {
                if (yr(i.value)) return null;
                const r = i.value;
                return t.test(r)
                  ? null
                  : { pattern: { requiredPattern: e, actualValue: r } };
              }
            );
          })(t);
        }
        static nullValidator(t) {
          return null;
        }
        static compose(t) {
          return KE(t);
        }
        static composeAsync(t) {
          return XE(t);
        }
      }
      function VE(n) {
        return yr(n.value) ? { required: !0 } : null;
      }
      function jE(n) {
        return (t) =>
          PE(t.value) && t.value.length > n
            ? { maxlength: { requiredLength: n, actualLength: t.value.length } }
            : null;
      }
      function Au(n) {
        return null;
      }
      function $E(n) {
        return null != n;
      }
      function GE(n) {
        return vs(n) ? at(n) : n;
      }
      function WE(n) {
        let t = {};
        return (
          n.forEach((e) => {
            t = null != e ? { ...t, ...e } : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function YE(n, t) {
        return t.map((e) => e(n));
      }
      function qE(n) {
        return n.map((t) =>
          (function Kj(n) {
            return !n.validate;
          })(t)
            ? t
            : (e) => t.validate(e)
        );
      }
      function KE(n) {
        if (!n) return null;
        const t = n.filter($E);
        return 0 == t.length
          ? null
          : function (e) {
              return WE(YE(e, t));
            };
      }
      function zg(n) {
        return null != n ? KE(qE(n)) : null;
      }
      function XE(n) {
        if (!n) return null;
        const t = n.filter($E);
        return 0 == t.length
          ? null
          : function (e) {
              return RE(YE(e, t).map(GE)).pipe(q(WE));
            };
      }
      function jg(n) {
        return null != n ? XE(qE(n)) : null;
      }
      function ZE(n, t) {
        return null === n ? [t] : Array.isArray(n) ? [...n, t] : [n, t];
      }
      function QE(n) {
        return n._rawValidators;
      }
      function JE(n) {
        return n._rawAsyncValidators;
      }
      function Ug(n) {
        return n ? (Array.isArray(n) ? n : [n]) : [];
      }
      function Tu(n, t) {
        return Array.isArray(n) ? n.includes(t) : n === t;
      }
      function eS(n, t) {
        const e = Ug(t);
        return (
          Ug(n).forEach((r) => {
            Tu(e, r) || e.push(r);
          }),
          e
        );
      }
      function tS(n, t) {
        return Ug(t).filter((e) => !Tu(n, e));
      }
      class nS {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(t) {
          (this._rawValidators = t || []),
            (this._composedValidatorFn = zg(this._rawValidators));
        }
        _setAsyncValidators(t) {
          (this._rawAsyncValidators = t || []),
            (this._composedAsyncValidatorFn = jg(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(t) {
          this._onDestroyCallbacks.push(t);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((t) => t()),
            (this._onDestroyCallbacks = []);
        }
        reset(t) {
          this.control && this.control.reset(t);
        }
        hasError(t, e) {
          return !!this.control && this.control.hasError(t, e);
        }
        getError(t, e) {
          return this.control ? this.control.getError(t, e) : null;
        }
      }
      class Kt extends nS {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Di extends nS {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class iS {
        constructor(t) {
          this._cd = t;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let Ki = (() => {
          class n extends iS {
            constructor(e) {
              super(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Di, 2));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['', 'formControlName', ''],
                ['', 'ngModel', ''],
                ['', 'formControl', ''],
              ],
              hostVars: 14,
              hostBindings: function (e, i) {
                2 & e &&
                  be('ng-untouched', i.isUntouched)('ng-touched', i.isTouched)(
                    'ng-pristine',
                    i.isPristine
                  )('ng-dirty', i.isDirty)('ng-valid', i.isValid)(
                    'ng-invalid',
                    i.isInvalid
                  )('ng-pending', i.isPending);
              },
              features: [F],
            })),
            n
          );
        })(),
        Xi = (() => {
          class n extends iS {
            constructor(e) {
              super(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Kt, 10));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['', 'formGroupName', ''],
                ['', 'formArrayName', ''],
                ['', 'ngModelGroup', ''],
                ['', 'formGroup', ''],
                ['form', 3, 'ngNoForm', ''],
                ['', 'ngForm', ''],
              ],
              hostVars: 16,
              hostBindings: function (e, i) {
                2 & e &&
                  be('ng-untouched', i.isUntouched)('ng-touched', i.isTouched)(
                    'ng-pristine',
                    i.isPristine
                  )('ng-dirty', i.isDirty)('ng-valid', i.isValid)(
                    'ng-invalid',
                    i.isInvalid
                  )('ng-pending', i.isPending)('ng-submitted', i.isSubmitted);
              },
              features: [F],
            })),
            n
          );
        })();
      const pl = 'VALID',
        Ru = 'INVALID',
        Da = 'PENDING',
        gl = 'DISABLED';
      function Yg(n) {
        return (Ou(n) ? n.validators : n) || null;
      }
      function qg(n, t) {
        return (Ou(t) ? t.asyncValidators : n) || null;
      }
      function Ou(n) {
        return null != n && !Array.isArray(n) && 'object' == typeof n;
      }
      class sS {
        constructor(t, e) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(t),
            this._assignAsyncValidators(e);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(t) {
          this._rawValidators = this._composedValidatorFn = t;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(t) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === pl;
        }
        get invalid() {
          return this.status === Ru;
        }
        get pending() {
          return this.status == Da;
        }
        get disabled() {
          return this.status === gl;
        }
        get enabled() {
          return this.status !== gl;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : 'change';
        }
        setValidators(t) {
          this._assignValidators(t);
        }
        setAsyncValidators(t) {
          this._assignAsyncValidators(t);
        }
        addValidators(t) {
          this.setValidators(eS(t, this._rawValidators));
        }
        addAsyncValidators(t) {
          this.setAsyncValidators(eS(t, this._rawAsyncValidators));
        }
        removeValidators(t) {
          this.setValidators(tS(t, this._rawValidators));
        }
        removeAsyncValidators(t) {
          this.setAsyncValidators(tS(t, this._rawAsyncValidators));
        }
        hasValidator(t) {
          return Tu(this._rawValidators, t);
        }
        hasAsyncValidator(t) {
          return Tu(this._rawAsyncValidators, t);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(t = {}) {
          (this.touched = !0),
            this._parent && !t.onlySelf && this._parent.markAsTouched(t);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((t) => t.markAllAsTouched());
        }
        markAsUntouched(t = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        markAsDirty(t = {}) {
          (this.pristine = !1),
            this._parent && !t.onlySelf && this._parent.markAsDirty(t);
        }
        markAsPristine(t = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        markAsPending(t = {}) {
          (this.status = Da),
            !1 !== t.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !t.onlySelf && this._parent.markAsPending(t);
        }
        disable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = gl),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable({ ...t, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...t, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = pl),
            this._forEachChild((i) => {
              i.enable({ ...t, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            }),
            this._updateAncestors({ ...t, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(t) {
          this._parent &&
            !t.onlySelf &&
            (this._parent.updateValueAndValidity(t),
            t.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(t) {
          this._parent = t;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(t = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === pl || this.status === Da) &&
                this._runAsyncValidator(t.emitEvent)),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !t.onlySelf &&
              this._parent.updateValueAndValidity(t);
        }
        _updateTreeValidity(t = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(t)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? gl : pl;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(t) {
          if (this.asyncValidator) {
            (this.status = Da), (this._hasOwnPendingAsyncValidator = !0);
            const e = GE(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: t });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(t, e = {}) {
          (this.errors = t), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(t) {
          let e = t;
          return null == e ||
            (Array.isArray(e) || (e = e.split('.')), 0 === e.length)
            ? null
            : e.reduce((i, r) => i && i._find(r), this);
        }
        getError(t, e) {
          const i = e ? this.get(e) : this;
          return i && i.errors ? i.errors[t] : null;
        }
        hasError(t, e) {
          return !!this.getError(t, e);
        }
        get root() {
          let t = this;
          for (; t._parent; ) t = t._parent;
          return t;
        }
        _updateControlsErrors(t) {
          (this.status = this._calculateStatus()),
            t && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(t);
        }
        _initObservables() {
          (this.valueChanges = new re()), (this.statusChanges = new re());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? gl
            : this.errors
            ? Ru
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(Da)
            ? Da
            : this._anyControlsHaveStatus(Ru)
            ? Ru
            : pl;
        }
        _anyControlsHaveStatus(t) {
          return this._anyControls((e) => e.status === t);
        }
        _anyControlsDirty() {
          return this._anyControls((t) => t.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((t) => t.touched);
        }
        _updatePristine(t = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        _updateTouched(t = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        _registerOnCollectionChange(t) {
          this._onCollectionChange = t;
        }
        _setUpdateStrategy(t) {
          Ou(t) && null != t.updateOn && (this._updateOn = t.updateOn);
        }
        _parentMarkedDirty(t) {
          return (
            !t &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(t) {
          return null;
        }
        _assignValidators(t) {
          (this._rawValidators = Array.isArray(t) ? t.slice() : t),
            (this._composedValidatorFn = (function n8(n) {
              return Array.isArray(n) ? zg(n) : n || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(t) {
          (this._rawAsyncValidators = Array.isArray(t) ? t.slice() : t),
            (this._composedAsyncValidatorFn = (function i8(n) {
              return Array.isArray(n) ? jg(n) : n || null;
            })(this._rawAsyncValidators));
        }
      }
      class Kg extends sS {
        constructor(t, e, i) {
          super(Yg(e), qg(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(t, e) {
          return this.controls[t]
            ? this.controls[t]
            : ((this.controls[t] = e),
              e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange),
              e);
        }
        addControl(t, e, i = {}) {
          this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(t, e = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        setControl(t, e, i = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            e && this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(t) {
          return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
        }
        setValue(t, e = {}) {
          (function aS(n, t, e) {
            n._forEachChild((i, r) => {
              if (void 0 === e[r]) throw new k(1002, '');
            });
          })(this, 0, t),
            Object.keys(t).forEach((i) => {
              (function oS(n, t, e) {
                const i = n.controls;
                if (!(t ? Object.keys(i) : i).length) throw new k(1e3, '');
                if (!i[e]) throw new k(1001, '');
              })(this, !0, i),
                this.controls[i].setValue(t[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (Object.keys(t).forEach((i) => {
              const r = this.controls[i];
              r && r.patchValue(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = {}, e = {}) {
          this._forEachChild((i, r) => {
            i.reset(t[r], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (t, e, i) => ((t[i] = e.getRawValue()), t)
          );
        }
        _syncPendingControls() {
          let t = this._reduceChildren(
            !1,
            (e, i) => !!i._syncPendingControls() || e
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _forEachChild(t) {
          Object.keys(this.controls).forEach((e) => {
            const i = this.controls[e];
            i && t(i, e);
          });
        }
        _setUpControls() {
          this._forEachChild((t) => {
            t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(t) {
          for (const [e, i] of Object.entries(this.controls))
            if (this.contains(e) && t(i)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, i, r) => ((i.enabled || this.disabled) && (e[r] = i.value), e)
          );
        }
        _reduceChildren(t, e) {
          let i = t;
          return (
            this._forEachChild((r, o) => {
              i = e(i, r, o);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const t of Object.keys(this.controls))
            if (this.controls[t].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(t) {
          return this.controls.hasOwnProperty(t) ? this.controls[t] : null;
        }
      }
      const Ma = new A('CallSetDisabledState', {
          providedIn: 'root',
          factory: () => Fu,
        }),
        Fu = 'always';
      function _l(n, t, e = Fu) {
        Xg(n, t),
          t.valueAccessor.writeValue(n.value),
          (n.disabled || 'always' === e) &&
            t.valueAccessor.setDisabledState?.(n.disabled),
          (function a8(n, t) {
            t.valueAccessor.registerOnChange((e) => {
              (n._pendingValue = e),
                (n._pendingChange = !0),
                (n._pendingDirty = !0),
                'change' === n.updateOn && lS(n, t);
            });
          })(n, t),
          (function l8(n, t) {
            const e = (i, r) => {
              t.valueAccessor.writeValue(i), r && t.viewToModelUpdate(i);
            };
            n.registerOnChange(e),
              t._registerOnDestroy(() => {
                n._unregisterOnChange(e);
              });
          })(n, t),
          (function s8(n, t) {
            t.valueAccessor.registerOnTouched(() => {
              (n._pendingTouched = !0),
                'blur' === n.updateOn && n._pendingChange && lS(n, t),
                'submit' !== n.updateOn && n.markAsTouched();
            });
          })(n, t),
          (function o8(n, t) {
            if (t.valueAccessor.setDisabledState) {
              const e = (i) => {
                t.valueAccessor.setDisabledState(i);
              };
              n.registerOnDisabledChange(e),
                t._registerOnDestroy(() => {
                  n._unregisterOnDisabledChange(e);
                });
            }
          })(n, t);
      }
      function Nu(n, t, e = !0) {
        const i = () => {};
        t.valueAccessor &&
          (t.valueAccessor.registerOnChange(i),
          t.valueAccessor.registerOnTouched(i)),
          Vu(n, t),
          n &&
            (t._invokeOnDestroyCallbacks(),
            n._registerOnCollectionChange(() => {}));
      }
      function Lu(n, t) {
        n.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(t);
        });
      }
      function Xg(n, t) {
        const e = QE(n);
        null !== t.validator
          ? n.setValidators(ZE(e, t.validator))
          : 'function' == typeof e && n.setValidators([e]);
        const i = JE(n);
        null !== t.asyncValidator
          ? n.setAsyncValidators(ZE(i, t.asyncValidator))
          : 'function' == typeof i && n.setAsyncValidators([i]);
        const r = () => n.updateValueAndValidity();
        Lu(t._rawValidators, r), Lu(t._rawAsyncValidators, r);
      }
      function Vu(n, t) {
        let e = !1;
        if (null !== n) {
          if (null !== t.validator) {
            const r = QE(n);
            if (Array.isArray(r) && r.length > 0) {
              const o = r.filter((a) => a !== t.validator);
              o.length !== r.length && ((e = !0), n.setValidators(o));
            }
          }
          if (null !== t.asyncValidator) {
            const r = JE(n);
            if (Array.isArray(r) && r.length > 0) {
              const o = r.filter((a) => a !== t.asyncValidator);
              o.length !== r.length && ((e = !0), n.setAsyncValidators(o));
            }
          }
        }
        const i = () => {};
        return Lu(t._rawValidators, i), Lu(t._rawAsyncValidators, i), e;
      }
      function lS(n, t) {
        n._pendingDirty && n.markAsDirty(),
          n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(n._pendingValue),
          (n._pendingChange = !1);
      }
      function cS(n, t) {
        Xg(n, t);
      }
      function Qg(n, t) {
        if (!n.hasOwnProperty('model')) return !1;
        const e = n.model;
        return !!e.isFirstChange() || !Object.is(t, e.currentValue);
      }
      function dS(n, t) {
        n._syncPendingControls(),
          t.forEach((e) => {
            const i = e.control;
            'submit' === i.updateOn &&
              i._pendingChange &&
              (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
          });
      }
      function Jg(n, t) {
        if (!t) return null;
        let e, i, r;
        return (
          Array.isArray(t),
          t.forEach((o) => {
            o.constructor === ei
              ? (e = o)
              : (function u8(n) {
                  return Object.getPrototypeOf(n.constructor) === so;
                })(o)
              ? (i = o)
              : (r = o);
          }),
          r || i || e || null
        );
      }
      const m8 = { provide: Kt, useExisting: Pe(() => pn) },
        vl = (() => Promise.resolve())();
      let pn = (() => {
        class n extends Kt {
          constructor(e, i, r) {
            super(),
              (this.callSetDisabledState = r),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new re()),
              (this.form = new Kg({}, zg(e), jg(i)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(e) {
            vl.then(() => {
              const i = this._findContainer(e.path);
              (e.control = i.registerControl(e.name, e.control)),
                _l(e.control, e, this.callSetDisabledState),
                e.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(e);
            });
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            vl.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name), this._directives.delete(e);
            });
          }
          addFormGroup(e) {
            vl.then(() => {
              const i = this._findContainer(e.path),
                r = new Kg({});
              cS(r, e),
                i.registerControl(e.name, r),
                r.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(e) {
            vl.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name);
            });
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            vl.then(() => {
              this.form.get(e.path).setValue(i);
            });
          }
          setValue(e) {
            this.control.setValue(e);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              dS(this.form, this._directives),
              this.ngSubmit.emit(e),
              'dialog' === e?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(e) {
            return e.pop(), e.length ? this.form.get(e) : this.form;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Tt, 10), m(wr, 10), m(Ma, 8));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [
              ['form', 3, 'ngNoForm', '', 3, 'formGroup', ''],
              ['ng-form'],
              ['', 'ngForm', ''],
            ],
            hostBindings: function (e, i) {
              1 & e &&
                O('submit', function (o) {
                  return i.onSubmit(o);
                })('reset', function () {
                  return i.onReset();
                });
            },
            inputs: { options: ['ngFormOptions', 'options'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [X([m8]), F],
          })),
          n
        );
      })();
      function uS(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      function hS(n) {
        return (
          'object' == typeof n &&
          null !== n &&
          2 === Object.keys(n).length &&
          'value' in n &&
          'disabled' in n
        );
      }
      const rn = class extends sS {
          constructor(t = null, e, i) {
            super(Yg(e), qg(i, e)),
              (this.defaultValue = null),
              (this._onChange = []),
              (this._pendingChange = !1),
              this._applyFormState(t),
              this._setUpdateStrategy(e),
              this._initObservables(),
              this.updateValueAndValidity({
                onlySelf: !0,
                emitEvent: !!this.asyncValidator,
              }),
              Ou(e) &&
                (e.nonNullable || e.initialValueIsDefault) &&
                (this.defaultValue = hS(t) ? t.value : t);
          }
          setValue(t, e = {}) {
            (this.value = this._pendingValue = t),
              this._onChange.length &&
                !1 !== e.emitModelToViewChange &&
                this._onChange.forEach((i) =>
                  i(this.value, !1 !== e.emitViewToModelChange)
                ),
              this.updateValueAndValidity(e);
          }
          patchValue(t, e = {}) {
            this.setValue(t, e);
          }
          reset(t = this.defaultValue, e = {}) {
            this._applyFormState(t),
              this.markAsPristine(e),
              this.markAsUntouched(e),
              this.setValue(this.value, e),
              (this._pendingChange = !1);
          }
          _updateValue() {}
          _anyControls(t) {
            return !1;
          }
          _allControlsDisabled() {
            return this.disabled;
          }
          registerOnChange(t) {
            this._onChange.push(t);
          }
          _unregisterOnChange(t) {
            uS(this._onChange, t);
          }
          registerOnDisabledChange(t) {
            this._onDisabledChange.push(t);
          }
          _unregisterOnDisabledChange(t) {
            uS(this._onDisabledChange, t);
          }
          _forEachChild(t) {}
          _syncPendingControls() {
            return !(
              'submit' !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange) ||
              (this.setValue(this._pendingValue, {
                onlySelf: !0,
                emitModelToViewChange: !1,
              }),
              0)
            );
          }
          _applyFormState(t) {
            hS(t)
              ? ((this.value = this._pendingValue = t.value),
                t.disabled
                  ? this.disable({ onlySelf: !0, emitEvent: !1 })
                  : this.enable({ onlySelf: !0, emitEvent: !1 }))
              : (this.value = this._pendingValue = t);
          }
        },
        g8 = { provide: Di, useExisting: Pe(() => Ea) },
        pS = (() => Promise.resolve())();
      let Ea = (() => {
          class n extends Di {
            constructor(e, i, r, o, a, s) {
              super(),
                (this._changeDetectorRef = a),
                (this.callSetDisabledState = s),
                (this.control = new rn()),
                (this._registered = !1),
                (this.update = new re()),
                (this._parent = e),
                this._setValidators(i),
                this._setAsyncValidators(r),
                (this.valueAccessor = Jg(0, o));
            }
            ngOnChanges(e) {
              if ((this._checkForErrors(), !this._registered || 'name' in e)) {
                if (
                  this._registered &&
                  (this._checkName(), this.formDirective)
                ) {
                  const i = e.name.previousValue;
                  this.formDirective.removeControl({
                    name: i,
                    path: this._getPath(i),
                  });
                }
                this._setUpControl();
              }
              'isDisabled' in e && this._updateDisabled(e),
                Qg(e, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._getPath(this.name);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(e) {
              (this.viewModel = e), this.update.emit(e);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              _l(this.control, this, this.callSetDisabledState),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone();
            }
            _updateValue(e) {
              pS.then(() => {
                this.control.setValue(e, { emitViewToModelChange: !1 }),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _updateDisabled(e) {
              const i = e.isDisabled.currentValue,
                r = 0 !== i && oa(i);
              pS.then(() => {
                r && !this.control.disabled
                  ? this.control.disable()
                  : !r && this.control.disabled && this.control.enable(),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _getPath(e) {
              return this._parent
                ? (function Pu(n, t) {
                    return [...t.path, n];
                  })(e, this._parent)
                : [e];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(Kt, 9),
                m(Tt, 10),
                m(wr, 10),
                m(Fn, 10),
                m(mt, 8),
                m(Ma, 8)
              );
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                [
                  '',
                  'ngModel',
                  '',
                  3,
                  'formControlName',
                  '',
                  3,
                  'formControl',
                  '',
                ],
              ],
              inputs: {
                name: 'name',
                isDisabled: ['disabled', 'isDisabled'],
                model: ['ngModel', 'model'],
                options: ['ngModelOptions', 'options'],
              },
              outputs: { update: 'ngModelChange' },
              exportAs: ['ngModel'],
              features: [X([g8]), F, dt],
            })),
            n
          );
        })(),
        Zi = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['form', 3, 'ngNoForm', '', 3, 'ngNativeValidate', ''],
              ],
              hostAttrs: ['novalidate', ''],
            })),
            n
          );
        })(),
        _S = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({})),
            n
          );
        })();
      const e_ = new A('NgModelWithFormControlWarning'),
        w8 = { provide: Di, useExisting: Pe(() => Sa) };
      let Sa = (() => {
        class n extends Di {
          set isDisabled(e) {}
          constructor(e, i, r, o, a) {
            super(),
              (this._ngModelWarningConfig = o),
              (this.callSetDisabledState = a),
              (this.update = new re()),
              (this._ngModelWarningSent = !1),
              this._setValidators(e),
              this._setAsyncValidators(i),
              (this.valueAccessor = Jg(0, r));
          }
          ngOnChanges(e) {
            if (this._isControlChanged(e)) {
              const i = e.form.previousValue;
              i && Nu(i, this, !1),
                _l(this.form, this, this.callSetDisabledState),
                this.form.updateValueAndValidity({ emitEvent: !1 });
            }
            Qg(e, this.viewModel) &&
              (this.form.setValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.form && Nu(this.form, this, !1);
          }
          get path() {
            return [];
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          _isControlChanged(e) {
            return e.hasOwnProperty('form');
          }
        }
        return (
          (n._ngModelWarningSentOnce = !1),
          (n.ɵfac = function (e) {
            return new (e || n)(
              m(Tt, 10),
              m(wr, 10),
              m(Fn, 10),
              m(e_, 8),
              m(Ma, 8)
            );
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['', 'formControl', '']],
            inputs: {
              form: ['formControl', 'form'],
              isDisabled: ['disabled', 'isDisabled'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            exportAs: ['ngForm'],
            features: [X([w8]), F, dt],
          })),
          n
        );
      })();
      const C8 = { provide: Kt, useExisting: Pe(() => bl) };
      let bl = (() => {
        class n extends Kt {
          constructor(e, i, r) {
            super(),
              (this.callSetDisabledState = r),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new re()),
              this._setValidators(e),
              this._setAsyncValidators(i);
          }
          ngOnChanges(e) {
            this._checkFormPresent(),
              e.hasOwnProperty('form') &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (Vu(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(e) {
            const i = this.form.get(e.path);
            return (
              _l(i, e, this.callSetDisabledState),
              i.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(e),
              i
            );
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            Nu(e.control || null, e, !1),
              (function h8(n, t) {
                const e = n.indexOf(t);
                e > -1 && n.splice(e, 1);
              })(this.directives, e);
          }
          addFormGroup(e) {
            this._setUpFormContainer(e);
          }
          removeFormGroup(e) {
            this._cleanUpFormContainer(e);
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          addFormArray(e) {
            this._setUpFormContainer(e);
          }
          removeFormArray(e) {
            this._cleanUpFormContainer(e);
          }
          getFormArray(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            this.form.get(e.path).setValue(i);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              dS(this.form, this.directives),
              this.ngSubmit.emit(e),
              'dialog' === e?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((e) => {
              const i = e.control,
                r = this.form.get(e.path);
              i !== r &&
                (Nu(i || null, e),
                ((n) => n instanceof rn)(r) &&
                  (_l(r, e, this.callSetDisabledState), (e.control = r)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(e) {
            const i = this.form.get(e.path);
            cS(i, e), i.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(e) {
            if (this.form) {
              const i = this.form.get(e.path);
              i &&
                (function c8(n, t) {
                  return Vu(n, t);
                })(i, e) &&
                i.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            Xg(this.form, this), this._oldForm && Vu(this._oldForm, this);
          }
          _checkFormPresent() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Tt, 10), m(wr, 10), m(Ma, 8));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['', 'formGroup', '']],
            hostBindings: function (e, i) {
              1 & e &&
                O('submit', function (o) {
                  return i.onSubmit(o);
                })('reset', function () {
                  return i.onReset();
                });
            },
            inputs: { form: ['formGroup', 'form'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [X([C8]), F, dt],
          })),
          n
        );
      })();
      let lo = (() => {
        class n {
          constructor() {
            this._validator = Au;
          }
          ngOnChanges(e) {
            if (this.inputName in e) {
              const i = this.normalizeInput(e[this.inputName].currentValue);
              (this._enabled = this.enabled(i)),
                (this._validator = this._enabled
                  ? this.createValidator(i)
                  : Au),
                this._onChange && this._onChange();
            }
          }
          validate(e) {
            return this._validator(e);
          }
          registerOnValidatorChange(e) {
            this._onChange = e;
          }
          enabled(e) {
            return null != e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = S({ type: n, features: [dt] })),
          n
        );
      })();
      const F8 = { provide: Tt, useExisting: Pe(() => co), multi: !0 };
      let co = (() => {
        class n extends lo {
          constructor() {
            super(...arguments),
              (this.inputName = 'required'),
              (this.normalizeInput = oa),
              (this.createValidator = (e) => VE);
          }
          enabled(e) {
            return e;
          }
        }
        return (
          (n.ɵfac = (function () {
            let t;
            return function (i) {
              return (t || (t = _e(n)))(i || n);
            };
          })()),
          (n.ɵdir = S({
            type: n,
            selectors: [
              [
                '',
                'required',
                '',
                'formControlName',
                '',
                3,
                'type',
                'checkbox',
              ],
              ['', 'required', '', 'formControl', '', 3, 'type', 'checkbox'],
              ['', 'required', '', 'ngModel', '', 3, 'type', 'checkbox'],
            ],
            hostVars: 1,
            hostBindings: function (e, i) {
              2 & e && ve('required', i._enabled ? '' : null);
            },
            inputs: { required: 'required' },
            features: [X([F8]), F],
          })),
          n
        );
      })();
      const V8 = { provide: Tt, useExisting: Pe(() => Mi), multi: !0 };
      let Mi = (() => {
          class n extends lo {
            constructor() {
              super(...arguments),
                (this.inputName = 'maxlength'),
                (this.normalizeInput = (e) =>
                  (function DS(n) {
                    return 'number' == typeof n ? n : parseInt(n, 10);
                  })(e)),
                (this.createValidator = (e) => jE(e));
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['', 'maxlength', '', 'formControlName', ''],
                ['', 'maxlength', '', 'formControl', ''],
                ['', 'maxlength', '', 'ngModel', ''],
              ],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && ve('maxlength', i._enabled ? i.maxlength : null);
              },
              inputs: { maxlength: 'maxlength' },
              features: [X([V8]), F],
            })),
            n
          );
        })(),
        RS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [_S] })),
            n
          );
        })(),
        z8 = (() => {
          class n {
            static withConfig(e) {
              return {
                ngModule: n,
                providers: [
                  { provide: Ma, useValue: e.callSetDisabledState ?? Fu },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [RS] })),
            n
          );
        })(),
        j8 = (() => {
          class n {
            static withConfig(e) {
              return {
                ngModule: n,
                providers: [
                  {
                    provide: e_,
                    useValue: e.warnOnNgModelWithFormControl ?? 'always',
                  },
                  { provide: Ma, useValue: e.callSetDisabledState ?? Fu },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [RS] })),
            n
          );
        })();
      const U8 = ['trigger'],
        $8 = ['panel'];
      function G8(n, t) {
        if ((1 & n && (_(0, 'span', 10), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.placeholder);
        }
      }
      function W8(n, t) {
        if ((1 & n && (_(0, 'span', 14), w(1), p()), 2 & n)) {
          const e = G(2);
          b(1), De(e.triggerValue);
        }
      }
      function Y8(n, t) {
        1 & n && Y(0, 0, ['*ngSwitchCase', 'true']);
      }
      function q8(n, t) {
        1 & n &&
          (_(0, 'span', 11),
          E(1, W8, 2, 1, 'span', 12),
          E(2, Y8, 1, 0, 'ng-content', 13),
          p()),
          2 & n &&
            (D('ngSwitch', !!G().customTrigger), b(2), D('ngSwitchCase', !0));
      }
      function K8(n, t) {
        if (1 & n) {
          const e = ui();
          ii(),
            es(),
            _(0, 'div', 15, 16),
            O('@transformPanel.done', function (r) {
              return Zt(e), Qt(G()._panelDoneAnimatingStream.next(r.toState));
            })('keydown', function (r) {
              return Zt(e), Qt(G()._handleKeydown(r));
            }),
            Y(2, 1),
            p();
        }
        if (2 & n) {
          const e = G();
          (function r0(n, t, e) {
            Yn(un, fi, Uo(T(), n, t, e), !0);
          })(
            'mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ',
            e._getPanelTheme(),
            ''
          ),
            D('ngClass', e.panelClass)('@transformPanel', 'showing'),
            ve('id', e.id + '-panel')('aria-multiselectable', e.multiple)(
              'aria-label',
              e.ariaLabel || null
            )('aria-labelledby', e._getPanelAriaLabelledby());
        }
      }
      const X8 = [[['mat-select-trigger']], '*'],
        Z8 = ['mat-select-trigger', '*'],
        Q8 = {
          transformPanelWrap: Ci('transformPanelWrap', [
            At('* => void', lj('@transformPanel', [sj()], { optional: !0 })),
          ]),
          transformPanel: Ci('transformPanel', [
            On('void', Ye({ opacity: 0, transform: 'scale(1, 0.8)' })),
            At(
              'void => showing',
              Vt(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                Ye({ opacity: 1, transform: 'scale(1, 1)' })
              )
            ),
            At('* => void', Vt('100ms linear', Ye({ opacity: 0 }))),
          ]),
        };
      let OS = 0;
      const FS = new A('mat-select-scroll-strategy'),
        eU = new A('MAT_SELECT_CONFIG'),
        tU = {
          provide: FS,
          deps: [Jn],
          useFactory: function J8(n) {
            return () => n.scrollStrategies.reposition();
          },
        },
        nU = new A('MatSelectTrigger');
      class iU {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      const rU = xg(
        I4(
          gu(
            FM(
              class {
                constructor(n, t, e, i, r) {
                  (this._elementRef = n),
                    (this._defaultErrorStateMatcher = t),
                    (this._parentForm = e),
                    (this._parentFormGroup = i),
                    (this.ngControl = r),
                    (this.stateChanges = new z());
                }
              }
            )
          )
        )
      );
      let oU = (() => {
          class n extends rU {
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(e) {
              (this._placeholder = e), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(qt.required) ??
                !1
              );
            }
            set required(e) {
              (this._required = ce(e)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(e) {
              this._multiple = ce(e);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(e) {
              this._disableOptionCentering = ce(e);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(e) {
              (this._compareWith = e),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(e) {
              this._assignValue(e) && this._onChange(e);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(e) {
              this._typeaheadDebounceInterval = yi(e);
            }
            get id() {
              return this._id;
            }
            set id(e) {
              (this._id = e || this._uid), this.stateChanges.next();
            }
            constructor(e, i, r, o, a, s, l, c, d, u, h, f, g, v) {
              super(a, o, l, c, u),
                (this._viewportRuler = e),
                (this._changeDetectorRef = i),
                (this._ngZone = r),
                (this._dir = s),
                (this._parentFormField = d),
                (this._liveAnnouncer = g),
                (this._defaultOptions = v),
                (this._panelOpen = !1),
                (this._compareWith = (y, x) => y === x),
                (this._uid = 'mat-select-' + OS++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new z()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = 'mat-select-value-' + OS++),
                (this._panelDoneAnimatingStream = new z()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ''),
                (this._focused = !1),
                (this.controlType = 'mat-select'),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ''),
                (this.optionSelectionChanges = Ip(() => {
                  const y = this.options;
                  return y
                    ? y.changes.pipe(
                        _i(y),
                        nn(() => on(...y.map((x) => x.onSelectionChange)))
                      )
                    : this._ngZone.onStable.pipe(
                        ot(1),
                        nn(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new re()),
                (this._openedStream = this.openedChange.pipe(
                  Qe((y) => y),
                  q(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  Qe((y) => !y),
                  q(() => {})
                )),
                (this.selectionChange = new re()),
                (this.valueChange = new re()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != v?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    v.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = f),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(h) || 0),
                (this.id = this.id);
            }
            ngOnInit() {
              (this._selectionModel = new Hg(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(hg(), me(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe(me(this._destroy))
                  .subscribe((e) => {
                    e.added.forEach((i) => i.select()),
                      e.removed.forEach((i) => i.deselect());
                  }),
                this.options.changes
                  .pipe(_i(null), me(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const e = this._getTriggerAriaLabelledby(),
                i = this.ngControl;
              if (e !== this._triggerAriaLabelledBy) {
                const r = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = e),
                  e
                    ? r.setAttribute('aria-labelledby', e)
                    : r.removeAttribute('aria-labelledby');
              }
              i &&
                (this._previousControl !== i.control &&
                  (void 0 !== this._previousControl &&
                    null !== i.disabled &&
                    i.disabled !== this.disabled &&
                    (this.disabled = i.disabled),
                  (this._previousControl = i.control)),
                this.updateErrorState());
            }
            ngOnChanges(e) {
              (e.disabled || e.userAriaDescribedBy) && this.stateChanges.next(),
                e.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval
                  );
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? 'rtl' : 'ltr'
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(e) {
              this._assignValue(e);
            }
            registerOnChange(e) {
              this._onChange = e;
            }
            registerOnTouched(e) {
              this._onTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return '';
              if (this._multiple) {
                const e = this._selectionModel.selected.map((i) => i.viewValue);
                return this._isRtl() && e.reverse(), e.join(', ');
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && 'rtl' === this._dir.value;
            }
            _handleKeydown(e) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(e)
                  : this._handleClosedKeydown(e));
            }
            _handleClosedKeydown(e) {
              const i = e.keyCode,
                r = 40 === i || 38 === i || 37 === i || 39 === i,
                o = 13 === i || 32 === i,
                a = this._keyManager;
              if (
                (!a.isTyping() && o && !Zn(e)) ||
                ((this.multiple || e.altKey) && r)
              )
                e.preventDefault(), this.open();
              else if (!this.multiple) {
                const s = this.selected;
                a.onKeydown(e);
                const l = this.selected;
                l && s !== l && this._liveAnnouncer.announce(l.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(e) {
              const i = this._keyManager,
                r = e.keyCode,
                o = 40 === r || 38 === r,
                a = i.isTyping();
              if (o && e.altKey) e.preventDefault(), this.close();
              else if (a || (13 !== r && 32 !== r) || !i.activeItem || Zn(e))
                if (!a && this._multiple && 65 === r && e.ctrlKey) {
                  e.preventDefault();
                  const s = this.options.some(
                    (l) => !l.disabled && !l.selected
                  );
                  this.options.forEach((l) => {
                    l.disabled || (s ? l.select() : l.deselect());
                  });
                } else {
                  const s = i.activeItemIndex;
                  i.onKeydown(e),
                    this._multiple &&
                      o &&
                      e.shiftKey &&
                      i.activeItem &&
                      i.activeItemIndex !== s &&
                      i.activeItem._selectViaInteraction();
                }
              else e.preventDefault(), i.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this._keyManager?.cancelTypeahead(),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange.pipe(ot(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(),
                  this._positioningSettled();
              });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : '';
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(e) {
              if (
                (this.options.forEach((i) => i.setInactiveStyles()),
                this._selectionModel.clear(),
                this.multiple && e)
              )
                Array.isArray(e),
                  e.forEach((i) => this._selectOptionByValue(i)),
                  this._sortValues();
              else {
                const i = this._selectOptionByValue(e);
                i
                  ? this._keyManager.updateActiveItem(i)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(e) {
              const i = this.options.find((r) => {
                if (this._selectionModel.isSelected(r)) return !1;
                try {
                  return null != r.value && this._compareWith(r.value, e);
                } catch {
                  return !1;
                }
              });
              return i && this._selectionModel.select(i), i;
            }
            _assignValue(e) {
              return (
                !!(e !== this._value || (this._multiple && Array.isArray(e))) &&
                (this.options && this._setSelectionByValue(e),
                (this._value = e),
                !0)
              );
            }
            _initKeyManager() {
              (this._keyManager = new J3(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')
                .withHomeAndEnd()
                .withPageUpDown()
                .withAllowedModifierKeys(['shiftKey'])),
                this._keyManager.tabOut.subscribe(() => {
                  this.panelOpen &&
                    (!this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction(),
                    this.focus(),
                    this.close());
                }),
                this._keyManager.change.subscribe(() => {
                  this._panelOpen && this.panel
                    ? this._scrollOptionIntoView(
                        this._keyManager.activeItemIndex || 0
                      )
                    : !this._panelOpen &&
                      !this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction();
                });
            }
            _resetOptions() {
              const e = on(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe(me(e)).subscribe((i) => {
                this._onSelect(i.source, i.isUserInput),
                  i.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                on(...this.options.map((i) => i._stateChanges))
                  .pipe(me(e))
                  .subscribe(() => {
                    this._changeDetectorRef.detectChanges(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(e, i) {
              const r = this._selectionModel.isSelected(e);
              null != e.value || this._multiple
                ? (r !== e.selected &&
                    (e.selected
                      ? this._selectionModel.select(e)
                      : this._selectionModel.deselect(e)),
                  i && this._keyManager.setActiveItem(e),
                  this.multiple && (this._sortValues(), i && this.focus()))
                : (e.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(e.value)),
                r !== this._selectionModel.isSelected(e) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const e = this.options.toArray();
                this._selectionModel.sort((i, r) =>
                  this.sortComparator
                    ? this.sortComparator(i, r, e)
                    : e.indexOf(i) - e.indexOf(r)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(e) {
              let i = null;
              (i = this.multiple
                ? this.selected.map((r) => r.value)
                : this.selected
                ? this.selected.value
                : e),
                (this._value = i),
                this.valueChange.emit(i),
                this._onChange(i),
                this.selectionChange.emit(this._getChangeEvent(i)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0]
                    ));
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const e = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (e ? e + ' ' : '') + this.ariaLabelledby
                : e;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const e = this._parentFormField?.getLabelId();
              let i = (e ? e + ' ' : '') + this._valueId;
              return this.ariaLabelledby && (i += ' ' + this.ariaLabelledby), i;
            }
            _panelDoneAnimating(e) {
              this.openedChange.emit(e);
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    e.join(' ')
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby'
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(xa),
                m(mt),
                m(U),
                m(NM),
                m(j),
                m(Qn, 8),
                m(pn, 8),
                m(bl, 8),
                m(ku, 8),
                m(Di, 10),
                cr('tabindex'),
                m(FS),
                m(yg),
                m(eU, 8)
              );
            }),
            (n.ɵdir = S({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && (Se(U8, 5), Se($8, 5), Se(pE, 5)), 2 & e)) {
                  let r;
                  V((r = B())) && (i.trigger = r.first),
                    V((r = B())) && (i.panel = r.first),
                    V((r = B())) && (i._overlayDir = r.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                panelClass: 'panelClass',
                placeholder: 'placeholder',
                required: 'required',
                multiple: 'multiple',
                disableOptionCentering: 'disableOptionCentering',
                compareWith: 'compareWith',
                value: 'value',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                errorStateMatcher: 'errorStateMatcher',
                typeaheadDebounceInterval: 'typeaheadDebounceInterval',
                sortComparator: 'sortComparator',
                id: 'id',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                _closedStream: 'closed',
                selectionChange: 'selectionChange',
                valueChange: 'valueChange',
              },
              features: [F, dt],
            })),
            n
          );
        })(),
        o_ = (() => {
          class n extends oU {
            constructor() {
              super(...arguments),
                (this._positions = [
                  {
                    originX: 'start',
                    originY: 'bottom',
                    overlayX: 'start',
                    overlayY: 'top',
                  },
                  {
                    originX: 'start',
                    originY: 'top',
                    overlayX: 'start',
                    overlayY: 'bottom',
                    panelClass: 'mat-mdc-select-panel-above',
                  },
                ]);
            }
            get shouldLabelFloat() {
              return (
                this.panelOpen ||
                !this.empty ||
                (this.focused && !!this.placeholder)
              );
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe(me(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._overlayWidth = this._getOverlayWidth()),
                      this._changeDetectorRef.detectChanges());
                  });
            }
            ngAfterViewInit() {
              this._parentFormField &&
                (this._preferredOverlayOrigin =
                  this._parentFormField.getConnectedOverlayOrigin());
            }
            open() {
              (this._overlayWidth = this._getOverlayWidth()),
                super.open(),
                this.stateChanges.next();
            }
            close() {
              super.close(), this.stateChanges.next();
            }
            _scrollOptionIntoView(e) {
              const i = this.options.toArray()[e];
              if (i) {
                const r = this.panel.nativeElement,
                  o = (function j4(n, t, e) {
                    if (e.length) {
                      let i = t.toArray(),
                        r = e.toArray(),
                        o = 0;
                      for (let a = 0; a < n + 1; a++)
                        i[a].group && i[a].group === r[o] && o++;
                      return o;
                    }
                    return 0;
                  })(e, this.options, this.optionGroups),
                  a = i._getHostElement();
                r.scrollTop =
                  0 === e && 1 === o
                    ? 0
                    : (function U4(n, t, e, i) {
                        return n < e
                          ? n
                          : n + t > e + i
                          ? Math.max(0, n - i + t)
                          : e;
                      })(
                        a.offsetTop,
                        a.offsetHeight,
                        r.scrollTop,
                        r.offsetHeight
                      );
              }
            }
            _positioningSettled() {
              this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);
            }
            _getChangeEvent(e) {
              return new iU(this, e);
            }
            _getOverlayWidth() {
              return (
                this._preferredOverlayOrigin instanceof Pg
                  ? this._preferredOverlayOrigin.elementRef
                  : this._preferredOverlayOrigin || this._elementRef
              ).nativeElement.getBoundingClientRect().width;
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-select']],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (Me(r, nU, 5), Me(r, bu, 5), Me(r, $M, 5)), 2 & e)
                ) {
                  let o;
                  V((o = B())) && (i.customTrigger = o.first),
                    V((o = B())) && (i.options = o),
                    V((o = B())) && (i.optionGroups = o);
                }
              },
              hostAttrs: [
                'role',
                'combobox',
                'aria-autocomplete',
                'none',
                'aria-haspopup',
                'listbox',
                1,
                'mat-mdc-select',
              ],
              hostVars: 19,
              hostBindings: function (e, i) {
                1 & e &&
                  O('keydown', function (o) {
                    return i._handleKeydown(o);
                  })('focus', function () {
                    return i._onFocus();
                  })('blur', function () {
                    return i._onBlur();
                  }),
                  2 & e &&
                    (ve('id', i.id)('tabindex', i.tabIndex)(
                      'aria-controls',
                      i.panelOpen ? i.id + '-panel' : null
                    )('aria-expanded', i.panelOpen)(
                      'aria-label',
                      i.ariaLabel || null
                    )('aria-required', i.required.toString())(
                      'aria-disabled',
                      i.disabled.toString()
                    )('aria-invalid', i.errorState)(
                      'aria-activedescendant',
                      i._getAriaActiveDescendant()
                    ),
                    be('mat-mdc-select-disabled', i.disabled)(
                      'mat-mdc-select-invalid',
                      i.errorState
                    )('mat-mdc-select-required', i.required)(
                      'mat-mdc-select-empty',
                      i.empty
                    )('mat-mdc-select-multiple', i.multiple));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                tabIndex: 'tabIndex',
              },
              exportAs: ['matSelect'],
              features: [
                X([
                  { provide: Lg, useExisting: n },
                  { provide: UM, useExisting: n },
                ]),
                F,
              ],
              ngContentSelectors: Z8,
              decls: 11,
              vars: 11,
              consts: [
                [
                  'cdk-overlay-origin',
                  '',
                  1,
                  'mat-mdc-select-trigger',
                  3,
                  'click',
                ],
                ['fallbackOverlayOrigin', 'cdkOverlayOrigin', 'trigger', ''],
                [1, 'mat-mdc-select-value', 3, 'ngSwitch'],
                [
                  'class',
                  'mat-mdc-select-placeholder mat-mdc-select-min-line',
                  4,
                  'ngSwitchCase',
                ],
                [
                  'class',
                  'mat-mdc-select-value-text',
                  3,
                  'ngSwitch',
                  4,
                  'ngSwitchCase',
                ],
                [1, 'mat-mdc-select-arrow-wrapper'],
                [1, 'mat-mdc-select-arrow'],
                [
                  'viewBox',
                  '0 0 24 24',
                  'width',
                  '24px',
                  'height',
                  '24px',
                  'focusable',
                  'false',
                ],
                ['d', 'M7 10l5 5 5-5z'],
                [
                  'cdk-connected-overlay',
                  '',
                  'cdkConnectedOverlayLockPosition',
                  '',
                  'cdkConnectedOverlayHasBackdrop',
                  '',
                  'cdkConnectedOverlayBackdropClass',
                  'cdk-overlay-transparent-backdrop',
                  3,
                  'cdkConnectedOverlayPanelClass',
                  'cdkConnectedOverlayScrollStrategy',
                  'cdkConnectedOverlayOrigin',
                  'cdkConnectedOverlayOpen',
                  'cdkConnectedOverlayPositions',
                  'cdkConnectedOverlayWidth',
                  'backdropClick',
                  'attach',
                  'detach',
                ],
                [1, 'mat-mdc-select-placeholder', 'mat-mdc-select-min-line'],
                [1, 'mat-mdc-select-value-text', 3, 'ngSwitch'],
                ['class', 'mat-mdc-select-min-line', 4, 'ngSwitchDefault'],
                [4, 'ngSwitchCase'],
                [1, 'mat-mdc-select-min-line'],
                ['role', 'listbox', 'tabindex', '-1', 3, 'ngClass', 'keydown'],
                ['panel', ''],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (Xe(X8),
                    _(0, 'div', 0, 1),
                    O('click', function () {
                      return i.toggle();
                    }),
                    _(3, 'div', 2),
                    E(4, G8, 2, 1, 'span', 3),
                    E(5, q8, 3, 2, 'span', 4),
                    p(),
                    _(6, 'div', 5)(7, 'div', 6),
                    ii(),
                    _(8, 'svg', 7),
                    ne(9, 'path', 8),
                    p()()()(),
                    E(10, K8, 3, 9, 'ng-template', 9),
                    O('backdropClick', function () {
                      return i.close();
                    })('attach', function () {
                      return i._onAttached();
                    })('detach', function () {
                      return i.close();
                    })),
                  2 & e)
                ) {
                  const r = En(1);
                  ve('aria-owns', i.panelOpen ? i.id + '-panel' : null),
                    b(3),
                    D('ngSwitch', i.empty),
                    ve('id', i._valueId),
                    b(1),
                    D('ngSwitchCase', !0),
                    b(1),
                    D('ngSwitchCase', !1),
                    b(5),
                    D('cdkConnectedOverlayPanelClass', i._overlayPanelClass)(
                      'cdkConnectedOverlayScrollStrategy',
                      i._scrollStrategy
                    )(
                      'cdkConnectedOverlayOrigin',
                      i._preferredOverlayOrigin || r
                    )('cdkConnectedOverlayOpen', i.panelOpen)(
                      'cdkConnectedOverlayPositions',
                      i._positions
                    )('cdkConnectedOverlayWidth', i._overlayWidth);
                }
              },
              dependencies: [kd, Os, fp, Cx, pE, Pg],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [Q8.transformPanel] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        PS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({
              providers: [tU],
              imports: [Tn, hl, GM, Ae, br, Vg, GM, Ae],
            })),
            n
          );
        })();
      const aU = ['tooltip'],
        NS = new A('mat-tooltip-scroll-strategy'),
        cU = {
          provide: NS,
          deps: [Jn],
          useFactory: function lU(n) {
            return () => n.scrollStrategies.reposition({ scrollThrottle: 20 });
          },
        },
        uU = new A('mat-tooltip-default-options', {
          providedIn: 'root',
          factory: function dU() {
            return { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 };
          },
        }),
        LS = 'tooltip-panel',
        VS = ro({ passive: !0 });
      let _U = (() => {
          class n {
            get position() {
              return this._position;
            }
            set position(e) {
              e !== this._position &&
                ((this._position = e),
                this._overlayRef &&
                  (this._updatePosition(this._overlayRef),
                  this._tooltipInstance?.show(0),
                  this._overlayRef.updatePosition()));
            }
            get positionAtOrigin() {
              return this._positionAtOrigin;
            }
            set positionAtOrigin(e) {
              (this._positionAtOrigin = ce(e)),
                this._detach(),
                (this._overlayRef = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ce(e)),
                this._disabled
                  ? this.hide(0)
                  : this._setupPointerEnterEventsIfNeeded();
            }
            get showDelay() {
              return this._showDelay;
            }
            set showDelay(e) {
              this._showDelay = yi(e);
            }
            get hideDelay() {
              return this._hideDelay;
            }
            set hideDelay(e) {
              (this._hideDelay = yi(e)),
                this._tooltipInstance &&
                  (this._tooltipInstance._mouseLeaveHideDelay =
                    this._hideDelay);
            }
            get message() {
              return this._message;
            }
            set message(e) {
              this._ariaDescriber.removeDescription(
                this._elementRef.nativeElement,
                this._message,
                'tooltip'
              ),
                (this._message = null != e ? String(e).trim() : ''),
                !this._message && this._isTooltipVisible()
                  ? this.hide(0)
                  : (this._setupPointerEnterEventsIfNeeded(),
                    this._updateTooltipMessage(),
                    this._ngZone.runOutsideAngular(() => {
                      Promise.resolve().then(() => {
                        this._ariaDescriber.describe(
                          this._elementRef.nativeElement,
                          this.message,
                          'tooltip'
                        );
                      });
                    }));
            }
            get tooltipClass() {
              return this._tooltipClass;
            }
            set tooltipClass(e) {
              (this._tooltipClass = e),
                this._tooltipInstance &&
                  this._setTooltipClass(this._tooltipClass);
            }
            constructor(e, i, r, o, a, s, l, c, d, u, h, f) {
              (this._overlay = e),
                (this._elementRef = i),
                (this._scrollDispatcher = r),
                (this._viewContainerRef = o),
                (this._ngZone = a),
                (this._platform = s),
                (this._ariaDescriber = l),
                (this._focusMonitor = c),
                (this._dir = u),
                (this._defaultOptions = h),
                (this._position = 'below'),
                (this._positionAtOrigin = !1),
                (this._disabled = !1),
                (this._viewInitialized = !1),
                (this._pointerExitEventsInitialized = !1),
                (this._viewportMargin = 8),
                (this._cssClassPrefix = 'mat'),
                (this._showDelay = this._defaultOptions.showDelay),
                (this._hideDelay = this._defaultOptions.hideDelay),
                (this.touchGestures = 'auto'),
                (this._message = ''),
                (this._passiveListeners = []),
                (this._destroyed = new z()),
                (this._scrollStrategy = d),
                (this._document = f),
                h &&
                  (h.position && (this.position = h.position),
                  h.positionAtOrigin &&
                    (this.positionAtOrigin = h.positionAtOrigin),
                  h.touchGestures && (this.touchGestures = h.touchGestures)),
                u.change.pipe(me(this._destroyed)).subscribe(() => {
                  this._overlayRef && this._updatePosition(this._overlayRef);
                });
            }
            ngAfterViewInit() {
              (this._viewInitialized = !0),
                this._setupPointerEnterEventsIfNeeded(),
                this._focusMonitor
                  .monitor(this._elementRef)
                  .pipe(me(this._destroyed))
                  .subscribe((e) => {
                    e
                      ? 'keyboard' === e && this._ngZone.run(() => this.show())
                      : this._ngZone.run(() => this.hide(0));
                  });
            }
            ngOnDestroy() {
              const e = this._elementRef.nativeElement;
              clearTimeout(this._touchstartTimeout),
                this._overlayRef &&
                  (this._overlayRef.dispose(), (this._tooltipInstance = null)),
                this._passiveListeners.forEach(([i, r]) => {
                  e.removeEventListener(i, r, VS);
                }),
                (this._passiveListeners.length = 0),
                this._destroyed.next(),
                this._destroyed.complete(),
                this._ariaDescriber.removeDescription(
                  e,
                  this.message,
                  'tooltip'
                ),
                this._focusMonitor.stopMonitoring(e);
            }
            show(e = this.showDelay, i) {
              if (this.disabled || !this.message || this._isTooltipVisible())
                return void this._tooltipInstance?._cancelPendingAnimations();
              const r = this._createOverlay(i);
              this._detach(),
                (this._portal =
                  this._portal ||
                  new xu(this._tooltipComponent, this._viewContainerRef));
              const o = (this._tooltipInstance = r.attach(
                this._portal
              ).instance);
              (o._triggerElement = this._elementRef.nativeElement),
                (o._mouseLeaveHideDelay = this._hideDelay),
                o
                  .afterHidden()
                  .pipe(me(this._destroyed))
                  .subscribe(() => this._detach()),
                this._setTooltipClass(this._tooltipClass),
                this._updateTooltipMessage(),
                o.show(e);
            }
            hide(e = this.hideDelay) {
              const i = this._tooltipInstance;
              i &&
                (i.isVisible()
                  ? i.hide(e)
                  : (i._cancelPendingAnimations(), this._detach()));
            }
            toggle(e) {
              this._isTooltipVisible() ? this.hide() : this.show(void 0, e);
            }
            _isTooltipVisible() {
              return (
                !!this._tooltipInstance && this._tooltipInstance.isVisible()
              );
            }
            _createOverlay(e) {
              if (this._overlayRef) {
                const o = this._overlayRef.getConfig().positionStrategy;
                if ((!this.positionAtOrigin || !e) && o._origin instanceof j)
                  return this._overlayRef;
                this._detach();
              }
              const i = this._scrollDispatcher.getAncestorScrollContainers(
                  this._elementRef
                ),
                r = this._overlay
                  .position()
                  .flexibleConnectedTo(
                    (this.positionAtOrigin && e) || this._elementRef
                  )
                  .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)
                  .withFlexibleDimensions(!1)
                  .withViewportMargin(this._viewportMargin)
                  .withScrollableContainers(i);
              return (
                r.positionChanges.pipe(me(this._destroyed)).subscribe((o) => {
                  this._updateCurrentPositionClass(o.connectionPair),
                    this._tooltipInstance &&
                      o.scrollableViewProperties.isOverlayClipped &&
                      this._tooltipInstance.isVisible() &&
                      this._ngZone.run(() => this.hide(0));
                }),
                (this._overlayRef = this._overlay.create({
                  direction: this._dir,
                  positionStrategy: r,
                  panelClass: `${this._cssClassPrefix}-${LS}`,
                  scrollStrategy: this._scrollStrategy(),
                })),
                this._updatePosition(this._overlayRef),
                this._overlayRef
                  .detachments()
                  .pipe(me(this._destroyed))
                  .subscribe(() => this._detach()),
                this._overlayRef
                  .outsidePointerEvents()
                  .pipe(me(this._destroyed))
                  .subscribe(() =>
                    this._tooltipInstance?._handleBodyInteraction()
                  ),
                this._overlayRef
                  .keydownEvents()
                  .pipe(me(this._destroyed))
                  .subscribe((o) => {
                    this._isTooltipVisible() &&
                      27 === o.keyCode &&
                      !Zn(o) &&
                      (o.preventDefault(),
                      o.stopPropagation(),
                      this._ngZone.run(() => this.hide(0)));
                  }),
                this._defaultOptions?.disableTooltipInteractivity &&
                  this._overlayRef.addPanelClass(
                    `${this._cssClassPrefix}-tooltip-panel-non-interactive`
                  ),
                this._overlayRef
              );
            }
            _detach() {
              this._overlayRef &&
                this._overlayRef.hasAttached() &&
                this._overlayRef.detach(),
                (this._tooltipInstance = null);
            }
            _updatePosition(e) {
              const i = e.getConfig().positionStrategy,
                r = this._getOrigin(),
                o = this._getOverlayPosition();
              i.withPositions([
                this._addOffset({ ...r.main, ...o.main }),
                this._addOffset({ ...r.fallback, ...o.fallback }),
              ]);
            }
            _addOffset(e) {
              return e;
            }
            _getOrigin() {
              const e = !this._dir || 'ltr' == this._dir.value,
                i = this.position;
              let r;
              'above' == i || 'below' == i
                ? (r = {
                    originX: 'center',
                    originY: 'above' == i ? 'top' : 'bottom',
                  })
                : 'before' == i || ('left' == i && e) || ('right' == i && !e)
                ? (r = { originX: 'start', originY: 'center' })
                : ('after' == i ||
                    ('right' == i && e) ||
                    ('left' == i && !e)) &&
                  (r = { originX: 'end', originY: 'center' });
              const { x: o, y: a } = this._invertPosition(r.originX, r.originY);
              return { main: r, fallback: { originX: o, originY: a } };
            }
            _getOverlayPosition() {
              const e = !this._dir || 'ltr' == this._dir.value,
                i = this.position;
              let r;
              'above' == i
                ? (r = { overlayX: 'center', overlayY: 'bottom' })
                : 'below' == i
                ? (r = { overlayX: 'center', overlayY: 'top' })
                : 'before' == i || ('left' == i && e) || ('right' == i && !e)
                ? (r = { overlayX: 'end', overlayY: 'center' })
                : ('after' == i ||
                    ('right' == i && e) ||
                    ('left' == i && !e)) &&
                  (r = { overlayX: 'start', overlayY: 'center' });
              const { x: o, y: a } = this._invertPosition(
                r.overlayX,
                r.overlayY
              );
              return { main: r, fallback: { overlayX: o, overlayY: a } };
            }
            _updateTooltipMessage() {
              this._tooltipInstance &&
                ((this._tooltipInstance.message = this.message),
                this._tooltipInstance._markForCheck(),
                this._ngZone.onMicrotaskEmpty
                  .pipe(ot(1), me(this._destroyed))
                  .subscribe(() => {
                    this._tooltipInstance && this._overlayRef.updatePosition();
                  }));
            }
            _setTooltipClass(e) {
              this._tooltipInstance &&
                ((this._tooltipInstance.tooltipClass = e),
                this._tooltipInstance._markForCheck());
            }
            _invertPosition(e, i) {
              return (
                'above' === this.position || 'below' === this.position
                  ? 'top' === i
                    ? (i = 'bottom')
                    : 'bottom' === i && (i = 'top')
                  : 'end' === e
                  ? (e = 'start')
                  : 'start' === e && (e = 'end'),
                { x: e, y: i }
              );
            }
            _updateCurrentPositionClass(e) {
              const { overlayY: i, originX: r, originY: o } = e;
              let a;
              if (
                ((a =
                  'center' === i
                    ? this._dir && 'rtl' === this._dir.value
                      ? 'end' === r
                        ? 'left'
                        : 'right'
                      : 'start' === r
                      ? 'left'
                      : 'right'
                    : 'bottom' === i && 'top' === o
                    ? 'above'
                    : 'below'),
                a !== this._currentPosition)
              ) {
                const s = this._overlayRef;
                if (s) {
                  const l = `${this._cssClassPrefix}-${LS}-`;
                  s.removePanelClass(l + this._currentPosition),
                    s.addPanelClass(l + a);
                }
                this._currentPosition = a;
              }
            }
            _setupPointerEnterEventsIfNeeded() {
              this._disabled ||
                !this.message ||
                !this._viewInitialized ||
                this._passiveListeners.length ||
                (this._platformSupportsMouseEvents()
                  ? this._passiveListeners.push([
                      'mouseenter',
                      (e) => {
                        let i;
                        this._setupPointerExitEventsIfNeeded(),
                          void 0 !== e.x && void 0 !== e.y && (i = e),
                          this.show(void 0, i);
                      },
                    ])
                  : 'off' !== this.touchGestures &&
                    (this._disableNativeGesturesIfNecessary(),
                    this._passiveListeners.push([
                      'touchstart',
                      (e) => {
                        const i = e.targetTouches?.[0],
                          r = i ? { x: i.clientX, y: i.clientY } : void 0;
                        this._setupPointerExitEventsIfNeeded(),
                          clearTimeout(this._touchstartTimeout),
                          (this._touchstartTimeout = setTimeout(
                            () => this.show(void 0, r),
                            500
                          ));
                      },
                    ])),
                this._addListeners(this._passiveListeners));
            }
            _setupPointerExitEventsIfNeeded() {
              if (this._pointerExitEventsInitialized) return;
              this._pointerExitEventsInitialized = !0;
              const e = [];
              if (this._platformSupportsMouseEvents())
                e.push(
                  [
                    'mouseleave',
                    (i) => {
                      const r = i.relatedTarget;
                      (!r || !this._overlayRef?.overlayElement.contains(r)) &&
                        this.hide();
                    },
                  ],
                  ['wheel', (i) => this._wheelListener(i)]
                );
              else if ('off' !== this.touchGestures) {
                this._disableNativeGesturesIfNecessary();
                const i = () => {
                  clearTimeout(this._touchstartTimeout),
                    this.hide(this._defaultOptions.touchendHideDelay);
                };
                e.push(['touchend', i], ['touchcancel', i]);
              }
              this._addListeners(e), this._passiveListeners.push(...e);
            }
            _addListeners(e) {
              e.forEach(([i, r]) => {
                this._elementRef.nativeElement.addEventListener(i, r, VS);
              });
            }
            _platformSupportsMouseEvents() {
              return !this._platform.IOS && !this._platform.ANDROID;
            }
            _wheelListener(e) {
              if (this._isTooltipVisible()) {
                const i = this._document.elementFromPoint(e.clientX, e.clientY),
                  r = this._elementRef.nativeElement;
                i !== r && !r.contains(i) && this.hide();
              }
            }
            _disableNativeGesturesIfNecessary() {
              const e = this.touchGestures;
              if ('off' !== e) {
                const i = this._elementRef.nativeElement,
                  r = i.style;
                ('on' === e ||
                  ('INPUT' !== i.nodeName && 'TEXTAREA' !== i.nodeName)) &&
                  (r.userSelect =
                    r.msUserSelect =
                    r.webkitUserSelect =
                    r.MozUserSelect =
                      'none'),
                  ('on' === e || !i.draggable) && (r.webkitUserDrag = 'none'),
                  (r.touchAction = 'none'),
                  (r.webkitTapHighlightColor = 'transparent');
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              Ur();
            }),
            (n.ɵdir = S({
              type: n,
              inputs: {
                position: ['matTooltipPosition', 'position'],
                positionAtOrigin: [
                  'matTooltipPositionAtOrigin',
                  'positionAtOrigin',
                ],
                disabled: ['matTooltipDisabled', 'disabled'],
                showDelay: ['matTooltipShowDelay', 'showDelay'],
                hideDelay: ['matTooltipHideDelay', 'hideDelay'],
                touchGestures: ['matTooltipTouchGestures', 'touchGestures'],
                message: ['matTooltip', 'message'],
                tooltipClass: ['matTooltipClass', 'tooltipClass'],
              },
            })),
            n
          );
        })(),
        vU = (() => {
          class n extends _U {
            constructor(e, i, r, o, a, s, l, c, d, u, h, f) {
              super(e, i, r, o, a, s, l, c, d, u, h, f),
                (this._tooltipComponent = yU),
                (this._cssClassPrefix = 'mat-mdc'),
                (this._viewportMargin = 8);
            }
            _addOffset(e) {
              const r = !this._dir || 'ltr' == this._dir.value;
              return (
                'top' === e.originY
                  ? (e.offsetY = -8)
                  : 'bottom' === e.originY
                  ? (e.offsetY = 8)
                  : 'start' === e.originX
                  ? (e.offsetX = r ? -8 : 8)
                  : 'end' === e.originX && (e.offsetX = r ? 8 : -8),
                e
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(Jn),
                m(j),
                m(Ca),
                m(ht),
                m(U),
                m(je),
                m(Q3),
                m(ol),
                m(NS),
                m(Qn, 8),
                m(uU, 8),
                m(oe)
              );
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matTooltip', '']],
              hostAttrs: [1, 'mat-mdc-tooltip-trigger'],
              exportAs: ['matTooltip'],
              features: [F],
            })),
            n
          );
        })(),
        bU = (() => {
          class n {
            constructor(e, i) {
              (this._changeDetectorRef = e),
                (this._closeOnInteraction = !1),
                (this._isVisible = !1),
                (this._onHide = new z()),
                (this._animationsDisabled = 'NoopAnimations' === i);
            }
            show(e) {
              clearTimeout(this._hideTimeoutId),
                (this._showTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!0), (this._showTimeoutId = void 0);
                }, e));
            }
            hide(e) {
              clearTimeout(this._showTimeoutId),
                (this._hideTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!1), (this._hideTimeoutId = void 0);
                }, e));
            }
            afterHidden() {
              return this._onHide;
            }
            isVisible() {
              return this._isVisible;
            }
            ngOnDestroy() {
              this._cancelPendingAnimations(),
                this._onHide.complete(),
                (this._triggerElement = null);
            }
            _handleBodyInteraction() {
              this._closeOnInteraction && this.hide(0);
            }
            _markForCheck() {
              this._changeDetectorRef.markForCheck();
            }
            _handleMouseLeave({ relatedTarget: e }) {
              (!e || !this._triggerElement.contains(e)) &&
                (this.isVisible()
                  ? this.hide(this._mouseLeaveHideDelay)
                  : this._finalizeAnimation(!1));
            }
            _onShow() {}
            _handleAnimationEnd({ animationName: e }) {
              (e === this._showAnimation || e === this._hideAnimation) &&
                this._finalizeAnimation(e === this._showAnimation);
            }
            _cancelPendingAnimations() {
              clearTimeout(this._showTimeoutId),
                clearTimeout(this._hideTimeoutId),
                (this._showTimeoutId = this._hideTimeoutId = void 0);
            }
            _finalizeAnimation(e) {
              e
                ? (this._closeOnInteraction = !0)
                : this.isVisible() || this._onHide.next();
            }
            _toggleVisibility(e) {
              const i = this._tooltip.nativeElement,
                r = this._showAnimation,
                o = this._hideAnimation;
              if (
                (i.classList.remove(e ? o : r),
                i.classList.add(e ? r : o),
                (this._isVisible = e),
                e &&
                  !this._animationsDisabled &&
                  'function' == typeof getComputedStyle)
              ) {
                const a = getComputedStyle(i);
                ('0s' === a.getPropertyValue('animation-duration') ||
                  'none' === a.getPropertyValue('animation-name')) &&
                  (this._animationsDisabled = !0);
              }
              e && this._onShow(),
                this._animationsDisabled &&
                  (i.classList.add('_mat-animation-noopable'),
                  this._finalizeAnimation(e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(mt), m(Yt, 8));
            }),
            (n.ɵdir = S({ type: n })),
            n
          );
        })(),
        yU = (() => {
          class n extends bU {
            constructor(e, i, r) {
              super(e, r),
                (this._elementRef = i),
                (this._isMultiline = !1),
                (this._showAnimation = 'mat-mdc-tooltip-show'),
                (this._hideAnimation = 'mat-mdc-tooltip-hide');
            }
            _onShow() {
              (this._isMultiline = this._isTooltipMultiline()),
                this._markForCheck();
            }
            _isTooltipMultiline() {
              const e = this._elementRef.nativeElement.getBoundingClientRect();
              return e.height > 24 && e.width >= 200;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(mt), m(j), m(Yt, 8));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-tooltip-component']],
              viewQuery: function (e, i) {
                if ((1 & e && Se(aU, 7), 2 & e)) {
                  let r;
                  V((r = B())) && (i._tooltip = r.first);
                }
              },
              hostAttrs: ['aria-hidden', 'true'],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  O('mouseleave', function (o) {
                    return i._handleMouseLeave(o);
                  }),
                  2 & e && hi('zoom', i.isVisible() ? 1 : null);
              },
              features: [F],
              decls: 4,
              vars: 4,
              consts: [
                [
                  1,
                  'mdc-tooltip',
                  'mdc-tooltip--shown',
                  'mat-mdc-tooltip',
                  3,
                  'ngClass',
                  'animationend',
                ],
                ['tooltip', ''],
                [1, 'mdc-tooltip__surface', 'mdc-tooltip__surface-animation'],
              ],
              template: function (e, i) {
                1 & e &&
                  (_(0, 'div', 0, 1),
                  O('animationend', function (o) {
                    return i._handleAnimationEnd(o);
                  }),
                  _(2, 'div', 2),
                  w(3),
                  p()()),
                  2 & e &&
                    (be('mdc-tooltip--multiline', i._isMultiline),
                    D('ngClass', i.tooltipClass),
                    b(3),
                    De(i.message));
              },
              dependencies: [kd],
              styles: [
                '.mdc-tooltip__surface{word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color, #fff)}.mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color, #000)}.mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font, inherit);font-size:var(--mdc-plain-tooltip-supporting-text-size, inherit);font-weight:var(--mdc-plain-tooltip-supporting-text-weight, inherit);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, inherit)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:"";top:-8px;right:-8px;bottom:-8px;left:-8px;z-index:-1;position:absolute}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        wU = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({
              providers: [cU],
              imports: [IM, Tn, hl, Ae, Ae, br],
            })),
            n
          );
        })();
      function CU(n, t) {
        if ((1 & n && (_(0, 'mat-option', 19), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          D('value', e), b(1), Ze(' ', e, ' ');
        }
      }
      function xU(n, t) {
        if (1 & n) {
          const e = ui();
          _(0, 'mat-form-field', 16)(1, 'mat-select', 17),
            O('selectionChange', function (r) {
              return Zt(e), Qt(G(2)._changePageSize(r.value));
            }),
            E(2, CU, 2, 2, 'mat-option', 18),
            p()();
        }
        if (2 & n) {
          const e = G(2);
          D('appearance', e._formFieldAppearance)('color', e.color),
            b(1),
            D('value', e.pageSize)('disabled', e.disabled)(
              'aria-labelledby',
              e._pageSizeLabelId
            )('panelClass', e.selectConfig.panelClass || '')(
              'disableOptionCentering',
              e.selectConfig.disableOptionCentering
            ),
            b(1),
            D('ngForOf', e._displayedPageSizeOptions);
        }
      }
      function DU(n, t) {
        if ((1 & n && (_(0, 'div', 20), w(1), p()), 2 & n)) {
          const e = G(2);
          b(1), De(e.pageSize);
        }
      }
      function MU(n, t) {
        if (
          (1 & n &&
            (_(0, 'div', 12)(1, 'div', 13),
            w(2),
            p(),
            E(3, xU, 3, 8, 'mat-form-field', 14),
            E(4, DU, 2, 1, 'div', 15),
            p()),
          2 & n)
        ) {
          const e = G();
          b(1),
            Wr('id', e._pageSizeLabelId),
            b(1),
            Ze(' ', e._intl.itemsPerPageLabel, ' '),
            b(1),
            D('ngIf', e._displayedPageSizeOptions.length > 1),
            b(1),
            D('ngIf', e._displayedPageSizeOptions.length <= 1);
        }
      }
      function EU(n, t) {
        if (1 & n) {
          const e = ui();
          _(0, 'button', 21),
            O('click', function () {
              return Zt(e), Qt(G().firstPage());
            }),
            ii(),
            _(1, 'svg', 7),
            ne(2, 'path', 22),
            p()();
        }
        if (2 & n) {
          const e = G();
          D('matTooltip', e._intl.firstPageLabel)(
            'matTooltipDisabled',
            e._previousButtonsDisabled()
          )('matTooltipPosition', 'above')(
            'disabled',
            e._previousButtonsDisabled()
          ),
            ve('aria-label', e._intl.firstPageLabel);
        }
      }
      function SU(n, t) {
        if (1 & n) {
          const e = ui();
          ii(),
            es(),
            _(0, 'button', 23),
            O('click', function () {
              return Zt(e), Qt(G().lastPage());
            }),
            ii(),
            _(1, 'svg', 7),
            ne(2, 'path', 24),
            p()();
        }
        if (2 & n) {
          const e = G();
          D('matTooltip', e._intl.lastPageLabel)(
            'matTooltipDisabled',
            e._nextButtonsDisabled()
          )('matTooltipPosition', 'above')(
            'disabled',
            e._nextButtonsDisabled()
          ),
            ve('aria-label', e._intl.lastPageLabel);
        }
      }
      let Bu = (() => {
        class n {
          constructor() {
            (this.changes = new z()),
              (this.itemsPerPageLabel = 'Items per page:'),
              (this.nextPageLabel = 'Next page'),
              (this.previousPageLabel = 'Previous page'),
              (this.firstPageLabel = 'First page'),
              (this.lastPageLabel = 'Last page'),
              (this.getRangeLabel = (e, i, r) => {
                if (0 == r || 0 == i) return `0 of ${r}`;
                const o = e * i;
                return `${o + 1} \u2013 ${
                  o < (r = Math.max(r, 0)) ? Math.min(o + i, r) : o + i
                } of ${r}`;
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      const AU = {
          provide: Bu,
          deps: [[new hn(), new oi(), Bu]],
          useFactory: function kU(n) {
            return n || new Bu();
          },
        },
        IU = new A('MAT_PAGINATOR_DEFAULT_OPTIONS'),
        RU = gu(R4(class {}));
      let OU = (() => {
          class n extends RU {
            get pageIndex() {
              return this._pageIndex;
            }
            set pageIndex(e) {
              (this._pageIndex = Math.max(yi(e), 0)),
                this._changeDetectorRef.markForCheck();
            }
            get length() {
              return this._length;
            }
            set length(e) {
              (this._length = yi(e)), this._changeDetectorRef.markForCheck();
            }
            get pageSize() {
              return this._pageSize;
            }
            set pageSize(e) {
              (this._pageSize = Math.max(yi(e), 0)),
                this._updateDisplayedPageSizeOptions();
            }
            get pageSizeOptions() {
              return this._pageSizeOptions;
            }
            set pageSizeOptions(e) {
              (this._pageSizeOptions = (e || []).map((i) => yi(i))),
                this._updateDisplayedPageSizeOptions();
            }
            get hidePageSize() {
              return this._hidePageSize;
            }
            set hidePageSize(e) {
              this._hidePageSize = ce(e);
            }
            get showFirstLastButtons() {
              return this._showFirstLastButtons;
            }
            set showFirstLastButtons(e) {
              this._showFirstLastButtons = ce(e);
            }
            constructor(e, i, r) {
              if (
                (super(),
                (this._intl = e),
                (this._changeDetectorRef = i),
                (this._pageIndex = 0),
                (this._length = 0),
                (this._pageSizeOptions = []),
                (this._hidePageSize = !1),
                (this._showFirstLastButtons = !1),
                (this.selectConfig = {}),
                (this.page = new re()),
                (this._intlChanges = e.changes.subscribe(() =>
                  this._changeDetectorRef.markForCheck()
                )),
                r)
              ) {
                const {
                  pageSize: o,
                  pageSizeOptions: a,
                  hidePageSize: s,
                  showFirstLastButtons: l,
                } = r;
                null != o && (this._pageSize = o),
                  null != a && (this._pageSizeOptions = a),
                  null != s && (this._hidePageSize = s),
                  null != l && (this._showFirstLastButtons = l);
              }
            }
            ngOnInit() {
              (this._initialized = !0),
                this._updateDisplayedPageSizeOptions(),
                this._markInitialized();
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe();
            }
            nextPage() {
              if (!this.hasNextPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = this.pageIndex + 1), this._emitPageEvent(e);
            }
            previousPage() {
              if (!this.hasPreviousPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = this.pageIndex - 1), this._emitPageEvent(e);
            }
            firstPage() {
              if (!this.hasPreviousPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = 0), this._emitPageEvent(e);
            }
            lastPage() {
              if (!this.hasNextPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = this.getNumberOfPages() - 1),
                this._emitPageEvent(e);
            }
            hasPreviousPage() {
              return this.pageIndex >= 1 && 0 != this.pageSize;
            }
            hasNextPage() {
              const e = this.getNumberOfPages() - 1;
              return this.pageIndex < e && 0 != this.pageSize;
            }
            getNumberOfPages() {
              return this.pageSize ? Math.ceil(this.length / this.pageSize) : 0;
            }
            _changePageSize(e) {
              const r = this.pageIndex;
              (this.pageIndex =
                Math.floor((this.pageIndex * this.pageSize) / e) || 0),
                (this.pageSize = e),
                this._emitPageEvent(r);
            }
            _nextButtonsDisabled() {
              return this.disabled || !this.hasNextPage();
            }
            _previousButtonsDisabled() {
              return this.disabled || !this.hasPreviousPage();
            }
            _updateDisplayedPageSizeOptions() {
              this._initialized &&
                (this.pageSize ||
                  (this._pageSize =
                    0 != this.pageSizeOptions.length
                      ? this.pageSizeOptions[0]
                      : 50),
                (this._displayedPageSizeOptions = this.pageSizeOptions.slice()),
                -1 === this._displayedPageSizeOptions.indexOf(this.pageSize) &&
                  this._displayedPageSizeOptions.push(this.pageSize),
                this._displayedPageSizeOptions.sort((e, i) => e - i),
                this._changeDetectorRef.markForCheck());
            }
            _emitPageEvent(e) {
              this.page.emit({
                previousPageIndex: e,
                pageIndex: this.pageIndex,
                pageSize: this.pageSize,
                length: this.length,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              Ur();
            }),
            (n.ɵdir = S({
              type: n,
              inputs: {
                color: 'color',
                pageIndex: 'pageIndex',
                length: 'length',
                pageSize: 'pageSize',
                pageSizeOptions: 'pageSizeOptions',
                hidePageSize: 'hidePageSize',
                showFirstLastButtons: 'showFirstLastButtons',
                selectConfig: 'selectConfig',
              },
              outputs: { page: 'page' },
              features: [F],
            })),
            n
          );
        })(),
        FU = 0,
        Cr = (() => {
          class n extends OU {
            constructor(e, i, r) {
              super(e, i, r),
                (this._pageSizeLabelId =
                  'mat-paginator-page-size-label-' + FU++),
                (this._formFieldAppearance =
                  r?.formFieldAppearance || 'outline');
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Bu), m(mt), m(IU, 8));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-paginator']],
              hostAttrs: ['role', 'group', 1, 'mat-mdc-paginator'],
              inputs: { disabled: 'disabled' },
              exportAs: ['matPaginator'],
              features: [F],
              decls: 14,
              vars: 14,
              consts: [
                [1, 'mat-mdc-paginator-outer-container'],
                [1, 'mat-mdc-paginator-container'],
                ['class', 'mat-mdc-paginator-page-size', 4, 'ngIf'],
                [1, 'mat-mdc-paginator-range-actions'],
                ['aria-live', 'polite', 1, 'mat-mdc-paginator-range-label'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  'class',
                  'mat-mdc-paginator-navigation-first',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                  4,
                  'ngIf',
                ],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-mdc-paginator-navigation-previous',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                ],
                [
                  'viewBox',
                  '0 0 24 24',
                  'focusable',
                  'false',
                  1,
                  'mat-mdc-paginator-icon',
                ],
                ['d', 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-mdc-paginator-navigation-next',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                ],
                ['d', 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  'class',
                  'mat-mdc-paginator-navigation-last',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                  4,
                  'ngIf',
                ],
                [1, 'mat-mdc-paginator-page-size'],
                [1, 'mat-mdc-paginator-page-size-label', 3, 'id'],
                [
                  'class',
                  'mat-mdc-paginator-page-size-select',
                  3,
                  'appearance',
                  'color',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-mdc-paginator-page-size-value', 4, 'ngIf'],
                [
                  1,
                  'mat-mdc-paginator-page-size-select',
                  3,
                  'appearance',
                  'color',
                ],
                [
                  3,
                  'value',
                  'disabled',
                  'aria-labelledby',
                  'panelClass',
                  'disableOptionCentering',
                  'selectionChange',
                ],
                [3, 'value', 4, 'ngFor', 'ngForOf'],
                [3, 'value'],
                [1, 'mat-mdc-paginator-page-size-value'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-mdc-paginator-navigation-first',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                ],
                [
                  'd',
                  'M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z',
                ],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-mdc-paginator-navigation-last',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                ],
                [
                  'd',
                  'M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z',
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (_(0, 'div', 0)(1, 'div', 1),
                  E(2, MU, 5, 4, 'div', 2),
                  _(3, 'div', 3)(4, 'div', 4),
                  w(5),
                  p(),
                  E(6, EU, 3, 5, 'button', 5),
                  _(7, 'button', 6),
                  O('click', function () {
                    return i.previousPage();
                  }),
                  ii(),
                  _(8, 'svg', 7),
                  ne(9, 'path', 8),
                  p()(),
                  es(),
                  _(10, 'button', 9),
                  O('click', function () {
                    return i.nextPage();
                  }),
                  ii(),
                  _(11, 'svg', 7),
                  ne(12, 'path', 10),
                  p()(),
                  E(13, SU, 3, 5, 'button', 11),
                  p()()()),
                  2 & e &&
                    (b(2),
                    D('ngIf', !i.hidePageSize),
                    b(3),
                    Ze(
                      ' ',
                      i._intl.getRangeLabel(i.pageIndex, i.pageSize, i.length),
                      ' '
                    ),
                    b(1),
                    D('ngIf', i.showFirstLastButtons),
                    b(1),
                    D('matTooltip', i._intl.previousPageLabel)(
                      'matTooltipDisabled',
                      i._previousButtonsDisabled()
                    )('matTooltipPosition', 'above')(
                      'disabled',
                      i._previousButtonsDisabled()
                    ),
                    ve('aria-label', i._intl.previousPageLabel),
                    b(3),
                    D('matTooltip', i._intl.nextPageLabel)(
                      'matTooltipDisabled',
                      i._nextButtonsDisabled()
                    )('matTooltipPosition', 'above')(
                      'disabled',
                      i._nextButtonsDisabled()
                    ),
                    ve('aria-label', i._intl.nextPageLabel),
                    b(3),
                    D('ngIf', i.showFirstLastButtons));
              },
              dependencies: [Ad, An, JM, qi, o_, bu, vU],
              styles: [
                '.mat-mdc-paginator{display:block}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        PU = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ providers: [AU], imports: [Tn, yu, PS, wU] })),
            n
          );
        })();
      const LU = [[['caption']], [['colgroup'], ['col']]],
        VU = ['caption', 'colgroup, col'];
      function a_(n) {
        return class extends n {
          get sticky() {
            return this._sticky;
          }
          set sticky(t) {
            const e = this._sticky;
            (this._sticky = ce(t)),
              (this._hasStickyChanged = e !== this._sticky);
          }
          hasStickyChanged() {
            const t = this._hasStickyChanged;
            return (this._hasStickyChanged = !1), t;
          }
          resetStickyChanged() {
            this._hasStickyChanged = !1;
          }
          constructor(...t) {
            super(...t), (this._sticky = !1), (this._hasStickyChanged = !1);
          }
        };
      }
      const ka = new A('CDK_TABLE');
      let Aa = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ut));
            }),
            (n.ɵdir = S({ type: n, selectors: [['', 'cdkCellDef', '']] })),
            n
          );
        })(),
        Ta = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ut));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'cdkHeaderCellDef', '']],
            })),
            n
          );
        })(),
        Hu = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ut));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'cdkFooterCellDef', '']],
            })),
            n
          );
        })();
      class jU {}
      const UU = a_(jU);
      let Qi = (() => {
        class n extends UU {
          get name() {
            return this._name;
          }
          set name(e) {
            this._setNameInput(e);
          }
          get stickyEnd() {
            return this._stickyEnd;
          }
          set stickyEnd(e) {
            const i = this._stickyEnd;
            (this._stickyEnd = ce(e)),
              (this._hasStickyChanged = i !== this._stickyEnd);
          }
          constructor(e) {
            super(), (this._table = e), (this._stickyEnd = !1);
          }
          _updateColumnCssClassName() {
            this._columnCssClassName = [
              `cdk-column-${this.cssClassFriendlyName}`,
            ];
          }
          _setNameInput(e) {
            e &&
              ((this._name = e),
              (this.cssClassFriendlyName = e.replace(/[^a-z0-9_-]/gi, '-')),
              this._updateColumnCssClassName());
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(ka, 8));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['', 'cdkColumnDef', '']],
            contentQueries: function (e, i, r) {
              if (
                (1 & e && (Me(r, Aa, 5), Me(r, Ta, 5), Me(r, Hu, 5)), 2 & e)
              ) {
                let o;
                V((o = B())) && (i.cell = o.first),
                  V((o = B())) && (i.headerCell = o.first),
                  V((o = B())) && (i.footerCell = o.first);
              }
            },
            inputs: {
              sticky: 'sticky',
              name: ['cdkColumnDef', 'name'],
              stickyEnd: 'stickyEnd',
            },
            features: [
              X([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: n }]),
              F,
            ],
          })),
          n
        );
      })();
      class s_ {
        constructor(t, e) {
          e.nativeElement.classList.add(...t._columnCssClassName);
        }
      }
      let l_ = (() => {
          class n extends s_ {
            constructor(e, i) {
              super(e, i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Qi), m(j));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['cdk-header-cell'], ['th', 'cdk-header-cell', '']],
              hostAttrs: ['role', 'columnheader', 1, 'cdk-header-cell'],
              features: [F],
            })),
            n
          );
        })(),
        c_ = (() => {
          class n extends s_ {
            constructor(e, i) {
              if (
                (super(e, i),
                1 === e._table?._elementRef.nativeElement.nodeType)
              ) {
                const r =
                  e._table._elementRef.nativeElement.getAttribute('role');
                i.nativeElement.setAttribute(
                  'role',
                  'grid' === r || 'treegrid' === r ? 'gridcell' : 'cell'
                );
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Qi), m(j));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['cdk-cell'], ['td', 'cdk-cell', '']],
              hostAttrs: [1, 'cdk-cell'],
              features: [F],
            })),
            n
          );
        })();
      class HS {
        constructor() {
          (this.tasks = []), (this.endTasks = []);
        }
      }
      const d_ = new A('_COALESCED_STYLE_SCHEDULER');
      let zS = (() => {
          class n {
            constructor(e) {
              (this._ngZone = e),
                (this._currentSchedule = null),
                (this._destroyed = new z());
            }
            schedule(e) {
              this._createScheduleIfNeeded(),
                this._currentSchedule.tasks.push(e);
            }
            scheduleEnd(e) {
              this._createScheduleIfNeeded(),
                this._currentSchedule.endTasks.push(e);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _createScheduleIfNeeded() {
              this._currentSchedule ||
                ((this._currentSchedule = new HS()),
                this._getScheduleObservable()
                  .pipe(me(this._destroyed))
                  .subscribe(() => {
                    for (
                      ;
                      this._currentSchedule.tasks.length ||
                      this._currentSchedule.endTasks.length;

                    ) {
                      const e = this._currentSchedule;
                      this._currentSchedule = new HS();
                      for (const i of e.tasks) i();
                      for (const i of e.endTasks) i();
                    }
                    this._currentSchedule = null;
                  }));
            }
            _getScheduleObservable() {
              return this._ngZone.isStable
                ? at(Promise.resolve(void 0))
                : this._ngZone.onStable.pipe(ot(1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(U));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        u_ = (() => {
          class n {
            constructor(e, i) {
              (this.template = e), (this._differs = i);
            }
            ngOnChanges(e) {
              if (!this._columnsDiffer) {
                const i = (e.columns && e.columns.currentValue) || [];
                (this._columnsDiffer = this._differs.find(i).create()),
                  this._columnsDiffer.diff(i);
              }
            }
            getColumnsDiff() {
              return this._columnsDiffer.diff(this.columns);
            }
            extractCellTemplate(e) {
              return this instanceof yl
                ? e.headerCell.template
                : this instanceof wl
                ? e.footerCell.template
                : e.cell.template;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ut), m(zi));
            }),
            (n.ɵdir = S({ type: n, features: [dt] })),
            n
          );
        })();
      class $U extends u_ {}
      const GU = a_($U);
      let yl = (() => {
        class n extends GU {
          constructor(e, i, r) {
            super(e, i), (this._table = r);
          }
          ngOnChanges(e) {
            super.ngOnChanges(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(ut), m(zi), m(ka, 8));
          }),
          (n.ɵdir = S({
            type: n,
            selectors: [['', 'cdkHeaderRowDef', '']],
            inputs: {
              columns: ['cdkHeaderRowDef', 'columns'],
              sticky: ['cdkHeaderRowDefSticky', 'sticky'],
            },
            features: [F, dt],
          })),
          n
        );
      })();
      class WU extends u_ {}
      const YU = a_(WU);
      let wl = (() => {
          class n extends YU {
            constructor(e, i, r) {
              super(e, i), (this._table = r);
            }
            ngOnChanges(e) {
              super.ngOnChanges(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ut), m(zi), m(ka, 8));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'cdkFooterRowDef', '']],
              inputs: {
                columns: ['cdkFooterRowDef', 'columns'],
                sticky: ['cdkFooterRowDefSticky', 'sticky'],
              },
              features: [F, dt],
            })),
            n
          );
        })(),
        zu = (() => {
          class n extends u_ {
            constructor(e, i, r) {
              super(e, i), (this._table = r);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ut), m(zi), m(ka, 8));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'cdkRowDef', '']],
              inputs: {
                columns: ['cdkRowDefColumns', 'columns'],
                when: ['cdkRowDefWhen', 'when'],
              },
              features: [F],
            })),
            n
          );
        })(),
        Ji = (() => {
          class n {
            constructor(e) {
              (this._viewContainer = e), (n.mostRecentCellOutlet = this);
            }
            ngOnDestroy() {
              n.mostRecentCellOutlet === this &&
                (n.mostRecentCellOutlet = null);
            }
          }
          return (
            (n.mostRecentCellOutlet = null),
            (n.ɵfac = function (e) {
              return new (e || n)(m(ht));
            }),
            (n.ɵdir = S({ type: n, selectors: [['', 'cdkCellOutlet', '']] })),
            n
          );
        })(),
        h_ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['cdk-header-row'], ['tr', 'cdk-header-row', '']],
              hostAttrs: ['role', 'row', 1, 'cdk-header-row'],
              decls: 1,
              vars: 0,
              consts: [['cdkCellOutlet', '']],
              template: function (e, i) {
                1 & e && di(0, 0);
              },
              dependencies: [Ji],
              encapsulation: 2,
            })),
            n
          );
        })(),
        f_ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['cdk-row'], ['tr', 'cdk-row', '']],
              hostAttrs: ['role', 'row', 1, 'cdk-row'],
              decls: 1,
              vars: 0,
              consts: [['cdkCellOutlet', '']],
              template: function (e, i) {
                1 & e && di(0, 0);
              },
              dependencies: [Ji],
              encapsulation: 2,
            })),
            n
          );
        })(),
        ju = (() => {
          class n {
            constructor(e) {
              (this.templateRef = e),
                (this._contentClassName = 'cdk-no-data-row');
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ut));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['ng-template', 'cdkNoDataRow', '']],
            })),
            n
          );
        })();
      const jS = ['top', 'bottom', 'left', 'right'];
      class qU {
        constructor(t, e, i, r, o = !0, a = !0, s) {
          (this._isNativeHtmlTable = t),
            (this._stickCellCss = e),
            (this.direction = i),
            (this._coalescedStyleScheduler = r),
            (this._isBrowser = o),
            (this._needsPositionStickyOnElement = a),
            (this._positionListener = s),
            (this._cachedCellWidths = []),
            (this._borderCellCss = {
              top: `${e}-border-elem-top`,
              bottom: `${e}-border-elem-bottom`,
              left: `${e}-border-elem-left`,
              right: `${e}-border-elem-right`,
            });
        }
        clearStickyPositioning(t, e) {
          const i = [];
          for (const r of t)
            if (r.nodeType === r.ELEMENT_NODE) {
              i.push(r);
              for (let o = 0; o < r.children.length; o++) i.push(r.children[o]);
            }
          this._coalescedStyleScheduler.schedule(() => {
            for (const r of i) this._removeStickyStyle(r, e);
          });
        }
        updateStickyColumns(t, e, i, r = !0) {
          if (
            !t.length ||
            !this._isBrowser ||
            (!e.some((h) => h) && !i.some((h) => h))
          )
            return void (
              this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({ sizes: [] }),
              this._positionListener.stickyEndColumnsUpdated({ sizes: [] }))
            );
          const o = t[0],
            a = o.children.length,
            s = this._getCellWidths(o, r),
            l = this._getStickyStartColumnPositions(s, e),
            c = this._getStickyEndColumnPositions(s, i),
            d = e.lastIndexOf(!0),
            u = i.indexOf(!0);
          this._coalescedStyleScheduler.schedule(() => {
            const h = 'rtl' === this.direction,
              f = h ? 'right' : 'left',
              g = h ? 'left' : 'right';
            for (const v of t)
              for (let y = 0; y < a; y++) {
                const x = v.children[y];
                e[y] && this._addStickyStyle(x, f, l[y], y === d),
                  i[y] && this._addStickyStyle(x, g, c[y], y === u);
              }
            this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({
                sizes:
                  -1 === d
                    ? []
                    : s.slice(0, d + 1).map((v, y) => (e[y] ? v : null)),
              }),
              this._positionListener.stickyEndColumnsUpdated({
                sizes:
                  -1 === u
                    ? []
                    : s
                        .slice(u)
                        .map((v, y) => (i[y + u] ? v : null))
                        .reverse(),
              }));
          });
        }
        stickRows(t, e, i) {
          if (!this._isBrowser) return;
          const r = 'bottom' === i ? t.slice().reverse() : t,
            o = 'bottom' === i ? e.slice().reverse() : e,
            a = [],
            s = [],
            l = [];
          for (let d = 0, u = 0; d < r.length; d++) {
            if (!o[d]) continue;
            a[d] = u;
            const h = r[d];
            l[d] = this._isNativeHtmlTable ? Array.from(h.children) : [h];
            const f = h.getBoundingClientRect().height;
            (u += f), (s[d] = f);
          }
          const c = o.lastIndexOf(!0);
          this._coalescedStyleScheduler.schedule(() => {
            for (let d = 0; d < r.length; d++) {
              if (!o[d]) continue;
              const u = a[d],
                h = d === c;
              for (const f of l[d]) this._addStickyStyle(f, i, u, h);
            }
            'top' === i
              ? this._positionListener?.stickyHeaderRowsUpdated({
                  sizes: s,
                  offsets: a,
                  elements: l,
                })
              : this._positionListener?.stickyFooterRowsUpdated({
                  sizes: s,
                  offsets: a,
                  elements: l,
                });
          });
        }
        updateStickyFooterContainer(t, e) {
          if (!this._isNativeHtmlTable) return;
          const i = t.querySelector('tfoot');
          this._coalescedStyleScheduler.schedule(() => {
            e.some((r) => !r)
              ? this._removeStickyStyle(i, ['bottom'])
              : this._addStickyStyle(i, 'bottom', 0, !1);
          });
        }
        _removeStickyStyle(t, e) {
          for (const r of e)
            (t.style[r] = ''), t.classList.remove(this._borderCellCss[r]);
          jS.some((r) => -1 === e.indexOf(r) && t.style[r])
            ? (t.style.zIndex = this._getCalculatedZIndex(t))
            : ((t.style.zIndex = ''),
              this._needsPositionStickyOnElement && (t.style.position = ''),
              t.classList.remove(this._stickCellCss));
        }
        _addStickyStyle(t, e, i, r) {
          t.classList.add(this._stickCellCss),
            r && t.classList.add(this._borderCellCss[e]),
            (t.style[e] = `${i}px`),
            (t.style.zIndex = this._getCalculatedZIndex(t)),
            this._needsPositionStickyOnElement &&
              (t.style.cssText +=
                'position: -webkit-sticky; position: sticky; ');
        }
        _getCalculatedZIndex(t) {
          const e = { top: 100, bottom: 10, left: 1, right: 1 };
          let i = 0;
          for (const r of jS) t.style[r] && (i += e[r]);
          return i ? `${i}` : '';
        }
        _getCellWidths(t, e = !0) {
          if (!e && this._cachedCellWidths.length)
            return this._cachedCellWidths;
          const i = [],
            r = t.children;
          for (let o = 0; o < r.length; o++)
            i.push(r[o].getBoundingClientRect().width);
          return (this._cachedCellWidths = i), i;
        }
        _getStickyStartColumnPositions(t, e) {
          const i = [];
          let r = 0;
          for (let o = 0; o < t.length; o++) e[o] && ((i[o] = r), (r += t[o]));
          return i;
        }
        _getStickyEndColumnPositions(t, e) {
          const i = [];
          let r = 0;
          for (let o = t.length; o > 0; o--) e[o] && ((i[o] = r), (r += t[o]));
          return i;
        }
      }
      const p_ = new A('CDK_SPL');
      let Uu = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ht), m(j));
            }),
            (n.ɵdir = S({ type: n, selectors: [['', 'rowOutlet', '']] })),
            n
          );
        })(),
        $u = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ht), m(j));
            }),
            (n.ɵdir = S({ type: n, selectors: [['', 'headerRowOutlet', '']] })),
            n
          );
        })(),
        Gu = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ht), m(j));
            }),
            (n.ɵdir = S({ type: n, selectors: [['', 'footerRowOutlet', '']] })),
            n
          );
        })(),
        Wu = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ht), m(j));
            }),
            (n.ɵdir = S({ type: n, selectors: [['', 'noDataRowOutlet', '']] })),
            n
          );
        })(),
        Yu = (() => {
          class n {
            get trackBy() {
              return this._trackByFn;
            }
            set trackBy(e) {
              this._trackByFn = e;
            }
            get dataSource() {
              return this._dataSource;
            }
            set dataSource(e) {
              this._dataSource !== e && this._switchDataSource(e);
            }
            get multiTemplateDataRows() {
              return this._multiTemplateDataRows;
            }
            set multiTemplateDataRows(e) {
              (this._multiTemplateDataRows = ce(e)),
                this._rowOutlet &&
                  this._rowOutlet.viewContainer.length &&
                  (this._forceRenderDataRows(),
                  this.updateStickyColumnStyles());
            }
            get fixedLayout() {
              return this._fixedLayout;
            }
            set fixedLayout(e) {
              (this._fixedLayout = ce(e)),
                (this._forceRecalculateCellWidths = !0),
                (this._stickyColumnStylesNeedReset = !0);
            }
            constructor(e, i, r, o, a, s, l, c, d, u, h, f) {
              (this._differs = e),
                (this._changeDetectorRef = i),
                (this._elementRef = r),
                (this._dir = a),
                (this._platform = l),
                (this._viewRepeater = c),
                (this._coalescedStyleScheduler = d),
                (this._viewportRuler = u),
                (this._stickyPositioningListener = h),
                (this._ngZone = f),
                (this._onDestroy = new z()),
                (this._columnDefsByName = new Map()),
                (this._customColumnDefs = new Set()),
                (this._customRowDefs = new Set()),
                (this._customHeaderRowDefs = new Set()),
                (this._customFooterRowDefs = new Set()),
                (this._headerRowDefChanged = !0),
                (this._footerRowDefChanged = !0),
                (this._stickyColumnStylesNeedReset = !0),
                (this._forceRecalculateCellWidths = !0),
                (this._cachedRenderRowsMap = new Map()),
                (this.stickyCssClass = 'cdk-table-sticky'),
                (this.needsPositionStickyOnElement = !0),
                (this._isShowingNoDataRow = !1),
                (this._multiTemplateDataRows = !1),
                (this._fixedLayout = !1),
                (this.contentChanged = new re()),
                (this.viewChange = new Lt({ start: 0, end: Number.MAX_VALUE })),
                o ||
                  this._elementRef.nativeElement.setAttribute('role', 'table'),
                (this._document = s),
                (this._isNativeHtmlTable =
                  'TABLE' === this._elementRef.nativeElement.nodeName);
            }
            ngOnInit() {
              this._setupStickyStyler(),
                this._isNativeHtmlTable && this._applyNativeTableSections(),
                (this._dataDiffer = this._differs
                  .find([])
                  .create((e, i) =>
                    this.trackBy ? this.trackBy(i.dataIndex, i.data) : i
                  )),
                this._viewportRuler
                  .change()
                  .pipe(me(this._onDestroy))
                  .subscribe(() => {
                    this._forceRecalculateCellWidths = !0;
                  });
            }
            ngAfterContentChecked() {
              this._cacheRowDefs(), this._cacheColumnDefs();
              const i =
                this._renderUpdatedColumns() ||
                this._headerRowDefChanged ||
                this._footerRowDefChanged;
              (this._stickyColumnStylesNeedReset =
                this._stickyColumnStylesNeedReset || i),
                (this._forceRecalculateCellWidths = i),
                this._headerRowDefChanged &&
                  (this._forceRenderHeaderRows(),
                  (this._headerRowDefChanged = !1)),
                this._footerRowDefChanged &&
                  (this._forceRenderFooterRows(),
                  (this._footerRowDefChanged = !1)),
                this.dataSource &&
                this._rowDefs.length > 0 &&
                !this._renderChangeSubscription
                  ? this._observeRenderChanges()
                  : this._stickyColumnStylesNeedReset &&
                    this.updateStickyColumnStyles(),
                this._checkStickyStates();
            }
            ngOnDestroy() {
              [
                this._rowOutlet.viewContainer,
                this._headerRowOutlet.viewContainer,
                this._footerRowOutlet.viewContainer,
                this._cachedRenderRowsMap,
                this._customColumnDefs,
                this._customRowDefs,
                this._customHeaderRowDefs,
                this._customFooterRowDefs,
                this._columnDefsByName,
              ].forEach((e) => {
                e.clear();
              }),
                (this._headerRowDefs = []),
                (this._footerRowDefs = []),
                (this._defaultRowDef = null),
                this._onDestroy.next(),
                this._onDestroy.complete(),
                Bg(this.dataSource) && this.dataSource.disconnect(this);
            }
            renderRows() {
              this._renderRows = this._getAllRenderRows();
              const e = this._dataDiffer.diff(this._renderRows);
              if (!e)
                return this._updateNoDataRow(), void this.contentChanged.next();
              const i = this._rowOutlet.viewContainer;
              this._viewRepeater.applyChanges(
                e,
                i,
                (r, o, a) => this._getEmbeddedViewArgs(r.item, a),
                (r) => r.item.data,
                (r) => {
                  1 === r.operation &&
                    r.context &&
                    this._renderCellTemplateForItem(
                      r.record.item.rowDef,
                      r.context
                    );
                }
              ),
                this._updateRowIndexContext(),
                e.forEachIdentityChange((r) => {
                  i.get(r.currentIndex).context.$implicit = r.item.data;
                }),
                this._updateNoDataRow(),
                this._ngZone && U.isInAngularZone()
                  ? this._ngZone.onStable
                      .pipe(ot(1), me(this._onDestroy))
                      .subscribe(() => {
                        this.updateStickyColumnStyles();
                      })
                  : this.updateStickyColumnStyles(),
                this.contentChanged.next();
            }
            addColumnDef(e) {
              this._customColumnDefs.add(e);
            }
            removeColumnDef(e) {
              this._customColumnDefs.delete(e);
            }
            addRowDef(e) {
              this._customRowDefs.add(e);
            }
            removeRowDef(e) {
              this._customRowDefs.delete(e);
            }
            addHeaderRowDef(e) {
              this._customHeaderRowDefs.add(e),
                (this._headerRowDefChanged = !0);
            }
            removeHeaderRowDef(e) {
              this._customHeaderRowDefs.delete(e),
                (this._headerRowDefChanged = !0);
            }
            addFooterRowDef(e) {
              this._customFooterRowDefs.add(e),
                (this._footerRowDefChanged = !0);
            }
            removeFooterRowDef(e) {
              this._customFooterRowDefs.delete(e),
                (this._footerRowDefChanged = !0);
            }
            setNoDataRow(e) {
              this._customNoDataRow = e;
            }
            updateStickyHeaderRowStyles() {
              const e = this._getRenderedRows(this._headerRowOutlet),
                r = this._elementRef.nativeElement.querySelector('thead');
              r && (r.style.display = e.length ? '' : 'none');
              const o = this._headerRowDefs.map((a) => a.sticky);
              this._stickyStyler.clearStickyPositioning(e, ['top']),
                this._stickyStyler.stickRows(e, o, 'top'),
                this._headerRowDefs.forEach((a) => a.resetStickyChanged());
            }
            updateStickyFooterRowStyles() {
              const e = this._getRenderedRows(this._footerRowOutlet),
                r = this._elementRef.nativeElement.querySelector('tfoot');
              r && (r.style.display = e.length ? '' : 'none');
              const o = this._footerRowDefs.map((a) => a.sticky);
              this._stickyStyler.clearStickyPositioning(e, ['bottom']),
                this._stickyStyler.stickRows(e, o, 'bottom'),
                this._stickyStyler.updateStickyFooterContainer(
                  this._elementRef.nativeElement,
                  o
                ),
                this._footerRowDefs.forEach((a) => a.resetStickyChanged());
            }
            updateStickyColumnStyles() {
              const e = this._getRenderedRows(this._headerRowOutlet),
                i = this._getRenderedRows(this._rowOutlet),
                r = this._getRenderedRows(this._footerRowOutlet);
              ((this._isNativeHtmlTable && !this._fixedLayout) ||
                this._stickyColumnStylesNeedReset) &&
                (this._stickyStyler.clearStickyPositioning(
                  [...e, ...i, ...r],
                  ['left', 'right']
                ),
                (this._stickyColumnStylesNeedReset = !1)),
                e.forEach((o, a) => {
                  this._addStickyColumnStyles([o], this._headerRowDefs[a]);
                }),
                this._rowDefs.forEach((o) => {
                  const a = [];
                  for (let s = 0; s < i.length; s++)
                    this._renderRows[s].rowDef === o && a.push(i[s]);
                  this._addStickyColumnStyles(a, o);
                }),
                r.forEach((o, a) => {
                  this._addStickyColumnStyles([o], this._footerRowDefs[a]);
                }),
                Array.from(this._columnDefsByName.values()).forEach((o) =>
                  o.resetStickyChanged()
                );
            }
            _getAllRenderRows() {
              const e = [],
                i = this._cachedRenderRowsMap;
              this._cachedRenderRowsMap = new Map();
              for (let r = 0; r < this._data.length; r++) {
                let o = this._data[r];
                const a = this._getRenderRowsForData(o, r, i.get(o));
                this._cachedRenderRowsMap.has(o) ||
                  this._cachedRenderRowsMap.set(o, new WeakMap());
                for (let s = 0; s < a.length; s++) {
                  let l = a[s];
                  const c = this._cachedRenderRowsMap.get(l.data);
                  c.has(l.rowDef)
                    ? c.get(l.rowDef).push(l)
                    : c.set(l.rowDef, [l]),
                    e.push(l);
                }
              }
              return e;
            }
            _getRenderRowsForData(e, i, r) {
              return this._getRowDefs(e, i).map((a) => {
                const s = r && r.has(a) ? r.get(a) : [];
                if (s.length) {
                  const l = s.shift();
                  return (l.dataIndex = i), l;
                }
                return { data: e, rowDef: a, dataIndex: i };
              });
            }
            _cacheColumnDefs() {
              this._columnDefsByName.clear(),
                qu(
                  this._getOwnDefs(this._contentColumnDefs),
                  this._customColumnDefs
                ).forEach((i) => {
                  this._columnDefsByName.has(i.name),
                    this._columnDefsByName.set(i.name, i);
                });
            }
            _cacheRowDefs() {
              (this._headerRowDefs = qu(
                this._getOwnDefs(this._contentHeaderRowDefs),
                this._customHeaderRowDefs
              )),
                (this._footerRowDefs = qu(
                  this._getOwnDefs(this._contentFooterRowDefs),
                  this._customFooterRowDefs
                )),
                (this._rowDefs = qu(
                  this._getOwnDefs(this._contentRowDefs),
                  this._customRowDefs
                ));
              const e = this._rowDefs.filter((i) => !i.when);
              this._defaultRowDef = e[0];
            }
            _renderUpdatedColumns() {
              const e = (a, s) => a || !!s.getColumnsDiff(),
                i = this._rowDefs.reduce(e, !1);
              i && this._forceRenderDataRows();
              const r = this._headerRowDefs.reduce(e, !1);
              r && this._forceRenderHeaderRows();
              const o = this._footerRowDefs.reduce(e, !1);
              return o && this._forceRenderFooterRows(), i || r || o;
            }
            _switchDataSource(e) {
              (this._data = []),
                Bg(this.dataSource) && this.dataSource.disconnect(this),
                this._renderChangeSubscription &&
                  (this._renderChangeSubscription.unsubscribe(),
                  (this._renderChangeSubscription = null)),
                e ||
                  (this._dataDiffer && this._dataDiffer.diff([]),
                  this._rowOutlet.viewContainer.clear()),
                (this._dataSource = e);
            }
            _observeRenderChanges() {
              if (!this.dataSource) return;
              let e;
              Bg(this.dataSource)
                ? (e = this.dataSource.connect(this))
                : (function NU(n) {
                    return (
                      !!n &&
                      (n instanceof Fe || (Ce(n.lift) && Ce(n.subscribe)))
                    );
                  })(this.dataSource)
                ? (e = this.dataSource)
                : Array.isArray(this.dataSource) && (e = H(this.dataSource)),
                (this._renderChangeSubscription = e
                  .pipe(me(this._onDestroy))
                  .subscribe((i) => {
                    (this._data = i || []), this.renderRows();
                  }));
            }
            _forceRenderHeaderRows() {
              this._headerRowOutlet.viewContainer.length > 0 &&
                this._headerRowOutlet.viewContainer.clear(),
                this._headerRowDefs.forEach((e, i) =>
                  this._renderRow(this._headerRowOutlet, e, i)
                ),
                this.updateStickyHeaderRowStyles();
            }
            _forceRenderFooterRows() {
              this._footerRowOutlet.viewContainer.length > 0 &&
                this._footerRowOutlet.viewContainer.clear(),
                this._footerRowDefs.forEach((e, i) =>
                  this._renderRow(this._footerRowOutlet, e, i)
                ),
                this.updateStickyFooterRowStyles();
            }
            _addStickyColumnStyles(e, i) {
              const r = Array.from(i.columns || []).map((s) =>
                  this._columnDefsByName.get(s)
                ),
                o = r.map((s) => s.sticky),
                a = r.map((s) => s.stickyEnd);
              this._stickyStyler.updateStickyColumns(
                e,
                o,
                a,
                !this._fixedLayout || this._forceRecalculateCellWidths
              );
            }
            _getRenderedRows(e) {
              const i = [];
              for (let r = 0; r < e.viewContainer.length; r++) {
                const o = e.viewContainer.get(r);
                i.push(o.rootNodes[0]);
              }
              return i;
            }
            _getRowDefs(e, i) {
              if (1 == this._rowDefs.length) return [this._rowDefs[0]];
              let r = [];
              if (this.multiTemplateDataRows)
                r = this._rowDefs.filter((o) => !o.when || o.when(i, e));
              else {
                let o =
                  this._rowDefs.find((a) => a.when && a.when(i, e)) ||
                  this._defaultRowDef;
                o && r.push(o);
              }
              return r;
            }
            _getEmbeddedViewArgs(e, i) {
              return {
                templateRef: e.rowDef.template,
                context: { $implicit: e.data },
                index: i,
              };
            }
            _renderRow(e, i, r, o = {}) {
              const a = e.viewContainer.createEmbeddedView(i.template, o, r);
              return this._renderCellTemplateForItem(i, o), a;
            }
            _renderCellTemplateForItem(e, i) {
              for (let r of this._getCellTemplates(e))
                Ji.mostRecentCellOutlet &&
                  Ji.mostRecentCellOutlet._viewContainer.createEmbeddedView(
                    r,
                    i
                  );
              this._changeDetectorRef.markForCheck();
            }
            _updateRowIndexContext() {
              const e = this._rowOutlet.viewContainer;
              for (let i = 0, r = e.length; i < r; i++) {
                const a = e.get(i).context;
                (a.count = r),
                  (a.first = 0 === i),
                  (a.last = i === r - 1),
                  (a.even = i % 2 == 0),
                  (a.odd = !a.even),
                  this.multiTemplateDataRows
                    ? ((a.dataIndex = this._renderRows[i].dataIndex),
                      (a.renderIndex = i))
                    : (a.index = this._renderRows[i].dataIndex);
              }
            }
            _getCellTemplates(e) {
              return e && e.columns
                ? Array.from(e.columns, (i) => {
                    const r = this._columnDefsByName.get(i);
                    return e.extractCellTemplate(r);
                  })
                : [];
            }
            _applyNativeTableSections() {
              const e = this._document.createDocumentFragment(),
                i = [
                  { tag: 'thead', outlets: [this._headerRowOutlet] },
                  {
                    tag: 'tbody',
                    outlets: [this._rowOutlet, this._noDataRowOutlet],
                  },
                  { tag: 'tfoot', outlets: [this._footerRowOutlet] },
                ];
              for (const r of i) {
                const o = this._document.createElement(r.tag);
                o.setAttribute('role', 'rowgroup');
                for (const a of r.outlets)
                  o.appendChild(a.elementRef.nativeElement);
                e.appendChild(o);
              }
              this._elementRef.nativeElement.appendChild(e);
            }
            _forceRenderDataRows() {
              this._dataDiffer.diff([]),
                this._rowOutlet.viewContainer.clear(),
                this.renderRows();
            }
            _checkStickyStates() {
              const e = (i, r) => i || r.hasStickyChanged();
              this._headerRowDefs.reduce(e, !1) &&
                this.updateStickyHeaderRowStyles(),
                this._footerRowDefs.reduce(e, !1) &&
                  this.updateStickyFooterRowStyles(),
                Array.from(this._columnDefsByName.values()).reduce(e, !1) &&
                  ((this._stickyColumnStylesNeedReset = !0),
                  this.updateStickyColumnStyles());
            }
            _setupStickyStyler() {
              (this._stickyStyler = new qU(
                this._isNativeHtmlTable,
                this.stickyCssClass,
                this._dir ? this._dir.value : 'ltr',
                this._coalescedStyleScheduler,
                this._platform.isBrowser,
                this.needsPositionStickyOnElement,
                this._stickyPositioningListener
              )),
                (this._dir ? this._dir.change : H())
                  .pipe(me(this._onDestroy))
                  .subscribe((i) => {
                    (this._stickyStyler.direction = i),
                      this.updateStickyColumnStyles();
                  });
            }
            _getOwnDefs(e) {
              return e.filter((i) => !i._table || i._table === this);
            }
            _updateNoDataRow() {
              const e = this._customNoDataRow || this._noDataRow;
              if (!e) return;
              const i = 0 === this._rowOutlet.viewContainer.length;
              if (i === this._isShowingNoDataRow) return;
              const r = this._noDataRowOutlet.viewContainer;
              if (i) {
                const o = r.createEmbeddedView(e.templateRef),
                  a = o.rootNodes[0];
                1 === o.rootNodes.length &&
                  a?.nodeType === this._document.ELEMENT_NODE &&
                  (a.setAttribute('role', 'row'),
                  a.classList.add(e._contentClassName));
              } else r.clear();
              this._isShowingNoDataRow = i;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(zi),
                m(mt),
                m(j),
                cr('role'),
                m(Qn, 8),
                m(oe),
                m(je),
                m(fl),
                m(d_),
                m(xa),
                m(p_, 12),
                m(U, 8)
              );
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['cdk-table'], ['table', 'cdk-table', '']],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e &&
                    (Me(r, ju, 5),
                    Me(r, Qi, 5),
                    Me(r, zu, 5),
                    Me(r, yl, 5),
                    Me(r, wl, 5)),
                  2 & e)
                ) {
                  let o;
                  V((o = B())) && (i._noDataRow = o.first),
                    V((o = B())) && (i._contentColumnDefs = o),
                    V((o = B())) && (i._contentRowDefs = o),
                    V((o = B())) && (i._contentHeaderRowDefs = o),
                    V((o = B())) && (i._contentFooterRowDefs = o);
                }
              },
              viewQuery: function (e, i) {
                if (
                  (1 & e && (Se(Uu, 7), Se($u, 7), Se(Gu, 7), Se(Wu, 7)), 2 & e)
                ) {
                  let r;
                  V((r = B())) && (i._rowOutlet = r.first),
                    V((r = B())) && (i._headerRowOutlet = r.first),
                    V((r = B())) && (i._footerRowOutlet = r.first),
                    V((r = B())) && (i._noDataRowOutlet = r.first);
                }
              },
              hostAttrs: [1, 'cdk-table'],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && be('cdk-table-fixed-layout', i.fixedLayout);
              },
              inputs: {
                trackBy: 'trackBy',
                dataSource: 'dataSource',
                multiTemplateDataRows: 'multiTemplateDataRows',
                fixedLayout: 'fixedLayout',
              },
              outputs: { contentChanged: 'contentChanged' },
              exportAs: ['cdkTable'],
              features: [
                X([
                  { provide: ka, useExisting: n },
                  { provide: fl, useClass: TE },
                  { provide: d_, useClass: zS },
                  { provide: p_, useValue: null },
                ]),
              ],
              ngContentSelectors: VU,
              decls: 6,
              vars: 0,
              consts: [
                ['headerRowOutlet', ''],
                ['rowOutlet', ''],
                ['noDataRowOutlet', ''],
                ['footerRowOutlet', ''],
              ],
              template: function (e, i) {
                1 & e && (Xe(LU), Y(0), Y(1, 1), di(2, 0)(3, 1)(4, 2)(5, 3));
              },
              dependencies: [Uu, $u, Gu, Wu],
              styles: ['.cdk-table-fixed-layout{table-layout:fixed}'],
              encapsulation: 2,
            })),
            n
          );
        })();
      function qu(n, t) {
        return n.concat(Array.from(t));
      }
      let XU = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = he({ type: n })),
          (n.ɵinj = de({ imports: [Tg] })),
          n
        );
      })();
      const ZU = [[['caption']], [['colgroup'], ['col']]],
        QU = ['caption', 'colgroup, col'];
      let Cl = (() => {
          class n extends Yu {
            constructor() {
              super(...arguments),
                (this.stickyCssClass = 'mat-mdc-table-sticky'),
                (this.needsPositionStickyOnElement = !1);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._isNativeHtmlTable &&
                  this._elementRef.nativeElement
                    .querySelector('tbody')
                    .classList.add('mdc-data-table__content');
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-table'], ['table', 'mat-table', '']],
              hostAttrs: [1, 'mat-mdc-table', 'mdc-data-table__table'],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && be('mdc-table-fixed-layout', i.fixedLayout);
              },
              exportAs: ['matTable'],
              features: [
                X([
                  { provide: Yu, useExisting: n },
                  { provide: ka, useExisting: n },
                  { provide: d_, useClass: zS },
                  { provide: fl, useClass: TE },
                  { provide: p_, useValue: null },
                ]),
                F,
              ],
              ngContentSelectors: QU,
              decls: 6,
              vars: 0,
              consts: [
                ['headerRowOutlet', ''],
                ['rowOutlet', ''],
                ['noDataRowOutlet', ''],
                ['footerRowOutlet', ''],
              ],
              template: function (e, i) {
                1 & e && (Xe(ZU), Y(0), Y(1, 1), di(2, 0)(3, 1)(4, 2)(5, 3));
              },
              dependencies: [Uu, $u, Gu, Wu],
              styles: [
                '.mdc-data-table{border-radius:var(--mdc-shape-medium, 4px);border-width:1px;border-style:solid}.mdc-data-table .mdc-data-table__header-cell:first-child{border-top-left-radius:var(--mdc-shape-medium, 4px)}[dir=rtl] .mdc-data-table .mdc-data-table__header-cell:first-child,.mdc-data-table .mdc-data-table__header-cell:first-child[dir=rtl]{border-top-right-radius:var(--mdc-shape-medium, 4px);border-top-left-radius:0}.mdc-data-table .mdc-data-table__header-cell:last-child{border-top-right-radius:var(--mdc-shape-medium, 4px)}[dir=rtl] .mdc-data-table .mdc-data-table__header-cell:last-child,.mdc-data-table .mdc-data-table__header-cell:last-child[dir=rtl]{border-top-left-radius:var(--mdc-shape-medium, 4px);border-top-right-radius:0}.mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:first-child{border-bottom-left-radius:var(--mdc-shape-medium, 4px)}[dir=rtl] .mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:first-child,.mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:first-child[dir=rtl]{border-bottom-right-radius:var(--mdc-shape-medium, 4px);border-bottom-left-radius:0}.mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:last-child{border-bottom-right-radius:var(--mdc-shape-medium, 4px)}[dir=rtl] .mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:last-child,.mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:last-child[dir=rtl]{border-bottom-left-radius:var(--mdc-shape-medium, 4px);border-bottom-right-radius:0}.mdc-data-table__cell,.mdc-data-table__header-cell{border-bottom-width:1px;border-bottom-style:solid}.mdc-data-table__pagination{border-top-width:1px;border-top-style:solid}.mdc-data-table__row:last-child .mdc-data-table__cell{border-bottom:none}.mdc-data-table__row{height:52px}.mdc-data-table__pagination{min-height:52px}.mdc-data-table__header-row{height:56px}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__cell--checkbox{width:1px}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--checkbox{width:1px}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__sort-icon-button{width:28px;height:28px;padding:2px;transform:rotate(0.0001deg);margin-left:4px;margin-right:0;opacity:0}.mdc-data-table__sort-icon-button .mdc-icon-button__focus-ring{max-height:28px;max-width:28px}.mdc-data-table__sort-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:28px;height:28px;margin-top:0px;margin-bottom:0px;margin-right:0px;margin-left:0px}.mdc-data-table__sort-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:28px;max-width:28px}.mdc-data-table__sort-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:28px;left:50%;width:28px;transform:translate(-50%, -50%)}[dir=rtl] .mdc-data-table__sort-icon-button,.mdc-data-table__sort-icon-button[dir=rtl]{margin-left:0;margin-right:4px}.mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button{margin-left:0;margin-right:4px}[dir=rtl] .mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button,.mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button[dir=rtl]{margin-left:4px;margin-right:0}.mdc-data-table__header-cell--sorted-descending .mdc-data-table__sort-icon-button{transform:rotate(-180deg)}.mdc-data-table__sort-icon-button:focus,.mdc-data-table__header-cell:hover .mdc-data-table__sort-icon-button,.mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button{opacity:1}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__header-cell--with-sort{cursor:pointer}.mdc-data-table__sort-status-label{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.mdc-data-table--sticky-header .mdc-data-table__header-cell{position:sticky;top:0;z-index:1}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--checkbox{width:1px}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__sort-icon-button{width:28px;height:28px;padding:2px;transform:rotate(0.0001deg);margin-left:4px;margin-right:0;opacity:0}.mdc-data-table__sort-icon-button .mdc-icon-button__focus-ring{max-height:28px;max-width:28px}.mdc-data-table__sort-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:28px;height:28px;margin-top:0px;margin-bottom:0px;margin-right:0px;margin-left:0px}.mdc-data-table__sort-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:28px;max-width:28px}.mdc-data-table__sort-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:28px;left:50%;width:28px;transform:translate(-50%, -50%)}[dir=rtl] .mdc-data-table__sort-icon-button,.mdc-data-table__sort-icon-button[dir=rtl]{margin-left:0;margin-right:4px}.mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button{margin-left:0;margin-right:4px}[dir=rtl] .mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button,.mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button[dir=rtl]{margin-left:4px;margin-right:0}.mdc-data-table__header-cell--sorted-descending .mdc-data-table__sort-icon-button{transform:rotate(-180deg)}.mdc-data-table__sort-icon-button:focus,.mdc-data-table__header-cell:hover .mdc-data-table__sort-icon-button,.mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button{opacity:1}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__header-cell--with-sort{cursor:pointer}.mdc-data-table__sort-status-label{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__cell--checkbox{width:1px}.mdc-data-table__pagination{box-sizing:border-box;display:flex;justify-content:flex-end}.mdc-data-table__pagination-trailing{margin-left:4px;margin-right:0;align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-end}[dir=rtl] .mdc-data-table__pagination-trailing,.mdc-data-table__pagination-trailing[dir=rtl]{margin-left:0;margin-right:4px}.mdc-data-table__pagination-navigation{align-items:center;display:flex}.mdc-data-table__pagination-button{margin-left:0;margin-right:4px}[dir=rtl] .mdc-data-table__pagination-button .mdc-button__icon,.mdc-data-table__pagination-button .mdc-button__icon[dir=rtl]{transform:rotate(180deg)}[dir=rtl] .mdc-data-table__pagination-button,.mdc-data-table__pagination-button[dir=rtl]{margin-left:4px;margin-right:0}.mdc-data-table__pagination-total{margin-left:14px;margin-right:36px;white-space:nowrap}[dir=rtl] .mdc-data-table__pagination-total,.mdc-data-table__pagination-total[dir=rtl]{margin-left:36px;margin-right:14px}.mdc-data-table__pagination-rows-per-page{margin-left:0;margin-right:22px;align-items:center;display:inline-flex}[dir=rtl] .mdc-data-table__pagination-rows-per-page,.mdc-data-table__pagination-rows-per-page[dir=rtl]{margin-left:22px;margin-right:0}.mdc-data-table__pagination-rows-per-page-label{margin-left:0;margin-right:12px;white-space:nowrap}[dir=rtl] .mdc-data-table__pagination-rows-per-page-label,.mdc-data-table__pagination-rows-per-page-label[dir=rtl]{margin-left:12px;margin-right:0}.mdc-data-table__pagination-rows-per-page-select{min-width:var(--mdc-menu-min-width, 80px);margin:8px 0}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor{width:100%;min-width:80px}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor{height:36px}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor .mdc-floating-label--float-above{font-size:.75rem}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-data-table__pagination-rows-per-page-select .mdc-select__dropdown-icon{width:20px;height:20px}.mdc-data-table__pagination-rows-per-page-select.mdc-select--outlined .mdc-select__anchor :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 56px)}.mdc-data-table__pagination-rows-per-page-select .mdc-list-item.mdc-list-item--with-one-line{height:36px}.mdc-data-table__progress-indicator{display:none;position:absolute;width:100%}.mdc-data-table--in-progress .mdc-data-table__progress-indicator{display:block}.mdc-data-table__scrim{background-color:var(--mdc-theme-surface, #fff);height:100%;opacity:.32;position:absolute;top:0;width:100%}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table-sticky{position:sticky !important}.mat-mdc-table{table-layout:auto;white-space:normal}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table .mat-mdc-row:hover,.mat-mdc-table .mat-mdc-footer-row:hover{background-color:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}',
              ],
              encapsulation: 2,
            })),
            n
          );
        })(),
        Ia = (() => {
          class n extends Aa {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matCellDef', '']],
              features: [X([{ provide: Aa, useExisting: n }]), F],
            })),
            n
          );
        })(),
        Ra = (() => {
          class n extends Ta {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matHeaderCellDef', '']],
              features: [X([{ provide: Ta, useExisting: n }]), F],
            })),
            n
          );
        })(),
        Oa = (() => {
          class n extends Qi {
            get name() {
              return this._name;
            }
            set name(e) {
              this._setNameInput(e);
            }
            _updateColumnCssClassName() {
              super._updateColumnCssClassName(),
                this._columnCssClassName.push(
                  `mat-column-${this.cssClassFriendlyName}`
                );
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matColumnDef', '']],
              inputs: { sticky: 'sticky', name: ['matColumnDef', 'name'] },
              features: [
                X([
                  { provide: Qi, useExisting: n },
                  { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: n },
                ]),
                F,
              ],
            })),
            n
          );
        })(),
        Fa = (() => {
          class n extends l_ {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['mat-header-cell'], ['th', 'mat-header-cell', '']],
              hostAttrs: [
                'role',
                'columnheader',
                1,
                'mat-mdc-header-cell',
                'mdc-data-table__header-cell',
              ],
              features: [F],
            })),
            n
          );
        })(),
        Pa = (() => {
          class n extends c_ {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['mat-cell'], ['td', 'mat-cell', '']],
              hostAttrs: [1, 'mat-mdc-cell', 'mdc-data-table__cell'],
              features: [F],
            })),
            n
          );
        })(),
        xl = (() => {
          class n extends yl {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matHeaderRowDef', '']],
              inputs: {
                columns: ['matHeaderRowDef', 'columns'],
                sticky: ['matHeaderRowDefSticky', 'sticky'],
              },
              features: [X([{ provide: yl, useExisting: n }]), F],
            })),
            n
          );
        })(),
        Dl = (() => {
          class n extends zu {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matRowDef', '']],
              inputs: {
                columns: ['matRowDefColumns', 'columns'],
                when: ['matRowDefWhen', 'when'],
              },
              features: [X([{ provide: zu, useExisting: n }]), F],
            })),
            n
          );
        })(),
        Ml = (() => {
          class n extends h_ {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-header-row'], ['tr', 'mat-header-row', '']],
              hostAttrs: [
                'role',
                'row',
                1,
                'mat-mdc-header-row',
                'mdc-data-table__header-row',
              ],
              exportAs: ['matHeaderRow'],
              features: [X([{ provide: h_, useExisting: n }]), F],
              decls: 1,
              vars: 0,
              consts: [['cdkCellOutlet', '']],
              template: function (e, i) {
                1 & e && di(0, 0);
              },
              dependencies: [Ji],
              encapsulation: 2,
            })),
            n
          );
        })(),
        El = (() => {
          class n extends f_ {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-row'], ['tr', 'mat-row', '']],
              hostAttrs: [
                'role',
                'row',
                1,
                'mat-mdc-row',
                'mdc-data-table__row',
              ],
              exportAs: ['matRow'],
              features: [X([{ provide: f_, useExisting: n }]), F],
              decls: 1,
              vars: 0,
              consts: [['cdkCellOutlet', '']],
              template: function (e, i) {
                1 & e && di(0, 0);
              },
              dependencies: [Ji],
              encapsulation: 2,
            })),
            n
          );
        })(),
        c5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, XU, Ae] })),
            n
          );
        })();
      class u5 extends jj {
        get data() {
          return this._data.value;
        }
        set data(t) {
          (t = Array.isArray(t) ? t : []),
            this._data.next(t),
            this._renderChangesSubscription || this._filterData(t);
        }
        get filter() {
          return this._filter.value;
        }
        set filter(t) {
          this._filter.next(t),
            this._renderChangesSubscription || this._filterData(this.data);
        }
        get sort() {
          return this._sort;
        }
        set sort(t) {
          (this._sort = t), this._updateChangeSubscription();
        }
        get paginator() {
          return this._paginator;
        }
        set paginator(t) {
          (this._paginator = t), this._updateChangeSubscription();
        }
        constructor(t = []) {
          super(),
            (this._renderData = new Lt([])),
            (this._filter = new Lt('')),
            (this._internalPageChanges = new z()),
            (this._renderChangesSubscription = null),
            (this.sortingDataAccessor = (e, i) => {
              const r = e[i];
              if (pM(r)) {
                const o = Number(r);
                return o < 9007199254740991 ? o : r;
              }
              return r;
            }),
            (this.sortData = (e, i) => {
              const r = i.active,
                o = i.direction;
              return r && '' != o
                ? e.sort((a, s) => {
                    let l = this.sortingDataAccessor(a, r),
                      c = this.sortingDataAccessor(s, r);
                    const d = typeof l,
                      u = typeof c;
                    d !== u &&
                      ('number' === d && (l += ''),
                      'number' === u && (c += ''));
                    let h = 0;
                    return (
                      null != l && null != c
                        ? l > c
                          ? (h = 1)
                          : l < c && (h = -1)
                        : null != l
                        ? (h = 1)
                        : null != c && (h = -1),
                      h * ('asc' == o ? 1 : -1)
                    );
                  })
                : e;
            }),
            (this.filterPredicate = (e, i) => {
              const r = Object.keys(e)
                  .reduce((a, s) => a + e[s] + '\u25ec', '')
                  .toLowerCase(),
                o = i.trim().toLowerCase();
              return -1 != r.indexOf(o);
            }),
            (this._data = new Lt(t)),
            this._updateChangeSubscription();
        }
        _updateChangeSubscription() {
          const t = this._sort
              ? on(this._sort.sortChange, this._sort.initialized)
              : H(null),
            e = this._paginator
              ? on(
                  this._paginator.page,
                  this._internalPageChanges,
                  this._paginator.initialized
                )
              : H(null),
            r = aa([this._data, this._filter]).pipe(
              q(([s]) => this._filterData(s))
            ),
            o = aa([r, t]).pipe(q(([s]) => this._orderData(s))),
            a = aa([o, e]).pipe(q(([s]) => this._pageData(s)));
          this._renderChangesSubscription?.unsubscribe(),
            (this._renderChangesSubscription = a.subscribe((s) =>
              this._renderData.next(s)
            ));
        }
        _filterData(t) {
          return (
            (this.filteredData =
              null == this.filter || '' === this.filter
                ? t
                : t.filter((e) => this.filterPredicate(e, this.filter))),
            this.paginator && this._updatePaginator(this.filteredData.length),
            this.filteredData
          );
        }
        _orderData(t) {
          return this.sort ? this.sortData(t.slice(), this.sort) : t;
        }
        _pageData(t) {
          if (!this.paginator) return t;
          const e = this.paginator.pageIndex * this.paginator.pageSize;
          return t.slice(e, e + this.paginator.pageSize);
        }
        _updatePaginator(t) {
          Promise.resolve().then(() => {
            const e = this.paginator;
            if (e && ((e.length = t), e.pageIndex > 0)) {
              const i = Math.ceil(e.length / e.pageSize) - 1 || 0,
                r = Math.min(e.pageIndex, i);
              r !== e.pageIndex &&
                ((e.pageIndex = r), this._internalPageChanges.next());
            }
          });
        }
        connect() {
          return (
            this._renderChangesSubscription || this._updateChangeSubscription(),
            this._renderData
          );
        }
        disconnect() {
          this._renderChangesSubscription?.unsubscribe(),
            (this._renderChangesSubscription = null);
        }
      }
      class xr extends u5 {}
      const g__baseUrl = 'https://dreis-os-api.herokuapp.com';
      class Ku {}
      class __ {}
      class er {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  'string' == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split('\n').forEach((e) => {
                            const i = e.indexOf(':');
                            if (i > 0) {
                              const r = e.slice(0, i),
                                o = r.toLowerCase(),
                                a = e.slice(i + 1).trim();
                              this.maybeSetNormalizedName(r, o),
                                this.headers.has(o)
                                  ? this.headers.get(o).push(a)
                                  : this.headers.set(o, [a]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let i = t[e];
                            const r = e.toLowerCase();
                            'string' == typeof i && (i = [i]),
                              i.length > 0 &&
                                (this.headers.set(r, i),
                                this.maybeSetNormalizedName(e, r));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: 'a' });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: 's' });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: 'd' });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof er
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((t) => this.applyUpdate(t)),
              (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)),
                this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new er();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof er
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case 'a':
            case 's':
              let i = t.value;
              if (('string' == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const r = ('a' === t.op ? this.headers.get(e) : void 0) || [];
              r.push(...i), this.headers.set(e, r);
              break;
            case 'd':
              const o = t.value;
              if (o) {
                let a = this.headers.get(e);
                if (!a) return;
                (a = a.filter((s) => -1 === o.indexOf(s))),
                  0 === a.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, a);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              t(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class h5 {
        encodeKey(t) {
          return $S(t);
        }
        encodeValue(t) {
          return $S(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      const f5 = /%(\d[a-f0-9])/gi,
        p5 = {
          40: '@',
          '3A': ':',
          24: '$',
          '2C': ',',
          '3B': ';',
          '3D': '=',
          '3F': '?',
          '2F': '/',
        };
      function $S(n) {
        return encodeURIComponent(n).replace(f5, (t, e) => p5[e] ?? t);
      }
      function Xu(n) {
        return `${n}`;
      }
      class Dr {
        constructor(t = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = t.encoder || new h5()),
            t.fromString)
          ) {
            if (t.fromObject)
              throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function m5(n, t) {
              const e = new Map();
              return (
                n.length > 0 &&
                  n
                    .replace(/^\?/, '')
                    .split('&')
                    .forEach((r) => {
                      const o = r.indexOf('='),
                        [a, s] =
                          -1 == o
                            ? [t.decodeKey(r), '']
                            : [
                                t.decodeKey(r.slice(0, o)),
                                t.decodeValue(r.slice(o + 1)),
                              ],
                        l = e.get(a) || [];
                      l.push(s), e.set(a, l);
                    }),
                e
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const i = t.fromObject[e],
                    r = Array.isArray(i) ? i.map(Xu) : [Xu(i)];
                  this.map.set(e, r);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: 'a' });
        }
        appendAll(t) {
          const e = [];
          return (
            Object.keys(t).forEach((i) => {
              const r = t[i];
              Array.isArray(r)
                ? r.forEach((o) => {
                    e.push({ param: i, value: o, op: 'a' });
                  })
                : e.push({ param: i, value: r, op: 'a' });
            }),
            this.clone(e)
          );
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: 's' });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((i) => e + '=' + this.encoder.encodeValue(i))
                  .join('&');
              })
              .filter((t) => '' !== t)
              .join('&')
          );
        }
        clone(t) {
          const e = new Dr({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(t)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case 'a':
                  case 's':
                    const e =
                      ('a' === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(Xu(t.value)), this.map.set(t.param, e);
                    break;
                  case 'd':
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let i = this.map.get(t.param) || [];
                      const r = i.indexOf(Xu(t.value));
                      -1 !== r && i.splice(r, 1),
                        i.length > 0
                          ? this.map.set(t.param, i)
                          : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class g5 {
        constructor() {
          this.map = new Map();
        }
        set(t, e) {
          return this.map.set(t, e), this;
        }
        get(t) {
          return (
            this.map.has(t) || this.map.set(t, t.defaultValue()),
            this.map.get(t)
          );
        }
        delete(t) {
          return this.map.delete(t), this;
        }
        has(t) {
          return this.map.has(t);
        }
        keys() {
          return this.map.keys();
        }
      }
      function GS(n) {
        return typeof ArrayBuffer < 'u' && n instanceof ArrayBuffer;
      }
      function WS(n) {
        return typeof Blob < 'u' && n instanceof Blob;
      }
      function YS(n) {
        return typeof FormData < 'u' && n instanceof FormData;
      }
      class Sl {
        constructor(t, e, i, r) {
          let o;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = t.toUpperCase()),
            (function _5(n) {
              switch (n) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== i ? i : null), (o = r))
              : (o = i),
            o &&
              ((this.reportProgress = !!o.reportProgress),
              (this.withCredentials = !!o.withCredentials),
              o.responseType && (this.responseType = o.responseType),
              o.headers && (this.headers = o.headers),
              o.context && (this.context = o.context),
              o.params && (this.params = o.params)),
            this.headers || (this.headers = new er()),
            this.context || (this.context = new g5()),
            this.params)
          ) {
            const a = this.params.toString();
            if (0 === a.length) this.urlWithParams = e;
            else {
              const s = e.indexOf('?');
              this.urlWithParams =
                e + (-1 === s ? '?' : s < e.length - 1 ? '&' : '') + a;
            }
          } else (this.params = new Dr()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : GS(this.body) ||
              WS(this.body) ||
              YS(this.body) ||
              (function v5(n) {
                return (
                  typeof URLSearchParams < 'u' && n instanceof URLSearchParams
                );
              })(this.body) ||
              'string' == typeof this.body
            ? this.body
            : this.body instanceof Dr
            ? this.body.toString()
            : 'object' == typeof this.body ||
              'boolean' == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || YS(this.body)
            ? null
            : WS(this.body)
            ? this.body.type || null
            : GS(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof Dr
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body ||
              'number' == typeof this.body ||
              'boolean' == typeof this.body
            ? 'application/json'
            : null;
        }
        clone(t = {}) {
          const e = t.method || this.method,
            i = t.url || this.url,
            r = t.responseType || this.responseType,
            o = void 0 !== t.body ? t.body : this.body,
            a =
              void 0 !== t.withCredentials
                ? t.withCredentials
                : this.withCredentials,
            s =
              void 0 !== t.reportProgress
                ? t.reportProgress
                : this.reportProgress;
          let l = t.headers || this.headers,
            c = t.params || this.params;
          const d = t.context ?? this.context;
          return (
            void 0 !== t.setHeaders &&
              (l = Object.keys(t.setHeaders).reduce(
                (u, h) => u.set(h, t.setHeaders[h]),
                l
              )),
            t.setParams &&
              (c = Object.keys(t.setParams).reduce(
                (u, h) => u.set(h, t.setParams[h]),
                c
              )),
            new Sl(e, i, o, {
              params: c,
              headers: l,
              context: d,
              reportProgress: s,
              responseType: r,
              withCredentials: a,
            })
          );
        }
      }
      var bt = (() => (
        ((bt = bt || {})[(bt.Sent = 0)] = 'Sent'),
        (bt[(bt.UploadProgress = 1)] = 'UploadProgress'),
        (bt[(bt.ResponseHeader = 2)] = 'ResponseHeader'),
        (bt[(bt.DownloadProgress = 3)] = 'DownloadProgress'),
        (bt[(bt.Response = 4)] = 'Response'),
        (bt[(bt.User = 5)] = 'User'),
        bt
      ))();
      class v_ {
        constructor(t, e = 200, i = 'OK') {
          (this.headers = t.headers || new er()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || i),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class b_ extends v_ {
        constructor(t = {}) {
          super(t), (this.type = bt.ResponseHeader);
        }
        clone(t = {}) {
          return new b_({
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class Zu extends v_ {
        constructor(t = {}) {
          super(t),
            (this.type = bt.Response),
            (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new Zu({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class qS extends v_ {
        constructor(t) {
          super(t, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${t.url || '(unknown url)'}`
                : `Http failure response for ${t.url || '(unknown url)'}: ${
                    t.status
                  } ${t.statusText}`),
            (this.error = t.error || null);
        }
      }
      function y_(n, t) {
        return {
          body: t,
          headers: n.headers,
          context: n.context,
          observe: n.observe,
          params: n.params,
          reportProgress: n.reportProgress,
          responseType: n.responseType,
          withCredentials: n.withCredentials,
        };
      }
      let Na = (() => {
        class n {
          constructor(e) {
            this.handler = e;
          }
          request(e, i, r = {}) {
            let o;
            if (e instanceof Sl) o = e;
            else {
              let l, c;
              (l = r.headers instanceof er ? r.headers : new er(r.headers)),
                r.params &&
                  (c =
                    r.params instanceof Dr
                      ? r.params
                      : new Dr({ fromObject: r.params })),
                (o = new Sl(e, i, void 0 !== r.body ? r.body : null, {
                  headers: l,
                  context: r.context,
                  params: c,
                  reportProgress: r.reportProgress,
                  responseType: r.responseType || 'json',
                  withCredentials: r.withCredentials,
                }));
            }
            const a = H(o).pipe(fr((l) => this.handler.handle(l)));
            if (e instanceof Sl || 'events' === r.observe) return a;
            const s = a.pipe(Qe((l) => l instanceof Zu));
            switch (r.observe || 'body') {
              case 'body':
                switch (o.responseType) {
                  case 'arraybuffer':
                    return s.pipe(
                      q((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error('Response is not an ArrayBuffer.');
                        return l.body;
                      })
                    );
                  case 'blob':
                    return s.pipe(
                      q((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error('Response is not a Blob.');
                        return l.body;
                      })
                    );
                  case 'text':
                    return s.pipe(
                      q((l) => {
                        if (null !== l.body && 'string' != typeof l.body)
                          throw new Error('Response is not a string.');
                        return l.body;
                      })
                    );
                  default:
                    return s.pipe(q((l) => l.body));
                }
              case 'response':
                return s;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${r.observe}}`
                );
            }
          }
          delete(e, i = {}) {
            return this.request('DELETE', e, i);
          }
          get(e, i = {}) {
            return this.request('GET', e, i);
          }
          head(e, i = {}) {
            return this.request('HEAD', e, i);
          }
          jsonp(e, i) {
            return this.request('JSONP', e, {
              params: new Dr().append(i, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(e, i = {}) {
            return this.request('OPTIONS', e, i);
          }
          patch(e, i, r = {}) {
            return this.request('PATCH', e, y_(r, i));
          }
          post(e, i, r = {}) {
            return this.request('POST', e, y_(r, i));
          }
          put(e, i, r = {}) {
            return this.request('PUT', e, y_(r, i));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(Ku));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function KS(n, t) {
        return t(n);
      }
      function b5(n, t) {
        return (e, i) => t.intercept(e, { handle: (r) => n(r, i) });
      }
      const w5 = new A('HTTP_INTERCEPTORS'),
        kl = new A('HTTP_INTERCEPTOR_FNS');
      function C5() {
        let n = null;
        return (t, e) => (
          null === n &&
            (n = (ie(w5, { optional: !0 }) ?? []).reduceRight(b5, KS)),
          n(t, e)
        );
      }
      let XS = (() => {
        class n extends Ku {
          constructor(e, i) {
            super(),
              (this.backend = e),
              (this.injector = i),
              (this.chain = null);
          }
          handle(e) {
            if (null === this.chain) {
              const i = Array.from(new Set(this.injector.get(kl)));
              this.chain = i.reduceRight(
                (r, o) =>
                  (function y5(n, t, e) {
                    return (i, r) => e.runInContext(() => t(i, (o) => n(o, r)));
                  })(r, o, this.injector),
                KS
              );
            }
            return this.chain(e, (i) => this.backend.handle(i));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(__), C(si));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const E5 = /^\)\]\}',?\n/;
      let QS = (() => {
        class n {
          constructor(e) {
            this.xhrFactory = e;
          }
          handle(e) {
            if ('JSONP' === e.method)
              throw new Error(
                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.'
              );
            return new Fe((i) => {
              const r = this.xhrFactory.build();
              if (
                (r.open(e.method, e.urlWithParams),
                e.withCredentials && (r.withCredentials = !0),
                e.headers.forEach((f, g) => r.setRequestHeader(f, g.join(','))),
                e.headers.has('Accept') ||
                  r.setRequestHeader(
                    'Accept',
                    'application/json, text/plain, */*'
                  ),
                !e.headers.has('Content-Type'))
              ) {
                const f = e.detectContentTypeHeader();
                null !== f && r.setRequestHeader('Content-Type', f);
              }
              if (e.responseType) {
                const f = e.responseType.toLowerCase();
                r.responseType = 'json' !== f ? f : 'text';
              }
              const o = e.serializeBody();
              let a = null;
              const s = () => {
                  if (null !== a) return a;
                  const f = r.statusText || 'OK',
                    g = new er(r.getAllResponseHeaders()),
                    v =
                      (function S5(n) {
                        return 'responseURL' in n && n.responseURL
                          ? n.responseURL
                          : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
                          ? n.getResponseHeader('X-Request-URL')
                          : null;
                      })(r) || e.url;
                  return (
                    (a = new b_({
                      headers: g,
                      status: r.status,
                      statusText: f,
                      url: v,
                    })),
                    a
                  );
                },
                l = () => {
                  let { headers: f, status: g, statusText: v, url: y } = s(),
                    x = null;
                  204 !== g &&
                    (x = typeof r.response > 'u' ? r.responseText : r.response),
                    0 === g && (g = x ? 200 : 0);
                  let R = g >= 200 && g < 300;
                  if ('json' === e.responseType && 'string' == typeof x) {
                    const M = x;
                    x = x.replace(E5, '');
                    try {
                      x = '' !== x ? JSON.parse(x) : null;
                    } catch (N) {
                      (x = M), R && ((R = !1), (x = { error: N, text: x }));
                    }
                  }
                  R
                    ? (i.next(
                        new Zu({
                          body: x,
                          headers: f,
                          status: g,
                          statusText: v,
                          url: y || void 0,
                        })
                      ),
                      i.complete())
                    : i.error(
                        new qS({
                          error: x,
                          headers: f,
                          status: g,
                          statusText: v,
                          url: y || void 0,
                        })
                      );
                },
                c = (f) => {
                  const { url: g } = s(),
                    v = new qS({
                      error: f,
                      status: r.status || 0,
                      statusText: r.statusText || 'Unknown Error',
                      url: g || void 0,
                    });
                  i.error(v);
                };
              let d = !1;
              const u = (f) => {
                  d || (i.next(s()), (d = !0));
                  let g = { type: bt.DownloadProgress, loaded: f.loaded };
                  f.lengthComputable && (g.total = f.total),
                    'text' === e.responseType &&
                      r.responseText &&
                      (g.partialText = r.responseText),
                    i.next(g);
                },
                h = (f) => {
                  let g = { type: bt.UploadProgress, loaded: f.loaded };
                  f.lengthComputable && (g.total = f.total), i.next(g);
                };
              return (
                r.addEventListener('load', l),
                r.addEventListener('error', c),
                r.addEventListener('timeout', c),
                r.addEventListener('abort', c),
                e.reportProgress &&
                  (r.addEventListener('progress', u),
                  null !== o &&
                    r.upload &&
                    r.upload.addEventListener('progress', h)),
                r.send(o),
                i.next({ type: bt.Sent }),
                () => {
                  r.removeEventListener('error', c),
                    r.removeEventListener('abort', c),
                    r.removeEventListener('load', l),
                    r.removeEventListener('timeout', c),
                    e.reportProgress &&
                      (r.removeEventListener('progress', u),
                      null !== o &&
                        r.upload &&
                        r.upload.removeEventListener('progress', h)),
                    r.readyState !== r.DONE && r.abort();
                }
              );
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(Sx));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const w_ = new A('XSRF_ENABLED'),
        JS = 'XSRF-TOKEN',
        ek = new A('XSRF_COOKIE_NAME', {
          providedIn: 'root',
          factory: () => JS,
        }),
        tk = 'X-XSRF-TOKEN',
        nk = new A('XSRF_HEADER_NAME', {
          providedIn: 'root',
          factory: () => tk,
        });
      class ik {}
      let k5 = (() => {
        class n {
          constructor(e, i, r) {
            (this.doc = e),
              (this.platform = i),
              (this.cookieName = r),
              (this.lastCookieString = ''),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ('server' === this.platform) return null;
            const e = this.doc.cookie || '';
            return (
              e !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = gx(e, this.cookieName)),
                (this.lastCookieString = e)),
              this.lastToken
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(oe), C(md), C(ek));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function A5(n, t) {
        const e = n.url.toLowerCase();
        if (
          !ie(w_) ||
          'GET' === n.method ||
          'HEAD' === n.method ||
          e.startsWith('http://') ||
          e.startsWith('https://')
        )
          return t(n);
        const i = ie(ik).getToken(),
          r = ie(nk);
        return (
          null != i &&
            !n.headers.has(r) &&
            (n = n.clone({ headers: n.headers.set(r, i) })),
          t(n)
        );
      }
      var ct = (() => (
        ((ct = ct || {})[(ct.Interceptors = 0)] = 'Interceptors'),
        (ct[(ct.LegacyInterceptors = 1)] = 'LegacyInterceptors'),
        (ct[(ct.CustomXsrfConfiguration = 2)] = 'CustomXsrfConfiguration'),
        (ct[(ct.NoXsrfProtection = 3)] = 'NoXsrfProtection'),
        (ct[(ct.JsonpSupport = 4)] = 'JsonpSupport'),
        (ct[(ct.RequestsMadeViaParent = 5)] = 'RequestsMadeViaParent'),
        ct
      ))();
      function La(n, t) {
        return { ɵkind: n, ɵproviders: t };
      }
      function T5(...n) {
        const t = [
          Na,
          QS,
          XS,
          { provide: Ku, useExisting: XS },
          { provide: __, useExisting: QS },
          { provide: kl, useValue: A5, multi: !0 },
          { provide: w_, useValue: !0 },
          { provide: ik, useClass: k5 },
        ];
        for (const e of n) t.push(...e.ɵproviders);
        return (function jI(n) {
          return { ɵproviders: n };
        })(t);
      }
      const rk = new A('LEGACY_INTERCEPTOR_FN');
      function R5({ cookieName: n, headerName: t }) {
        const e = [];
        return (
          void 0 !== n && e.push({ provide: ek, useValue: n }),
          void 0 !== t && e.push({ provide: nk, useValue: t }),
          La(ct.CustomXsrfConfiguration, e)
        );
      }
      let O5 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = he({ type: n })),
          (n.ɵinj = de({
            providers: [
              T5(
                La(ct.LegacyInterceptors, [
                  { provide: rk, useFactory: C5 },
                  { provide: kl, useExisting: rk, multi: !0 },
                ]),
                R5({ cookieName: JS, headerName: tk })
              ),
            ],
          })),
          n
        );
      })();
      function F5(n, t) {
        if (1 & n) {
          const e = ui();
          _(0, 'div', 2)(1, 'button', 3),
            O('click', function () {
              return Zt(e), Qt(G().action());
            }),
            w(2),
            p()();
        }
        if (2 & n) {
          const e = G();
          b(2), Ze(' ', e.data.action, ' ');
        }
      }
      const P5 = ['label'];
      function N5(n, t) {}
      const L5 = Math.pow(2, 31) - 1;
      class C_ {
        constructor(t, e) {
          (this._overlayRef = e),
            (this._afterDismissed = new z()),
            (this._afterOpened = new z()),
            (this._onAction = new z()),
            (this._dismissedByAction = !1),
            (this.containerInstance = t),
            t._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete(),
            this.dismiss()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(t) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(t, L5)
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      const ok = new A('MatSnackBarData');
      class Qu {
        constructor() {
          (this.politeness = 'assertive'),
            (this.announcementMessage = ''),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = 'center'),
            (this.verticalPosition = 'bottom');
        }
      }
      let V5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matSnackBarLabel', '']],
              hostAttrs: [1, 'mat-mdc-snack-bar-label', 'mdc-snackbar__label'],
            })),
            n
          );
        })(),
        B5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matSnackBarActions', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-actions',
                'mdc-snackbar__actions',
              ],
            })),
            n
          );
        })(),
        H5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matSnackBarAction', '']],
              hostAttrs: [
                1,
                'mat-mdc-snack-bar-action',
                'mdc-snackbar__action',
              ],
            })),
            n
          );
        })(),
        z5 = (() => {
          class n {
            constructor(e, i) {
              (this.snackBarRef = e), (this.data = i);
            }
            action() {
              this.snackBarRef.dismissWithAction();
            }
            get hasAction() {
              return !!this.data.action;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(C_), m(ok));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['simple-snack-bar']],
              hostAttrs: [1, 'mat-mdc-simple-snack-bar'],
              exportAs: ['matSnackBar'],
              decls: 3,
              vars: 2,
              consts: [
                ['matSnackBarLabel', ''],
                ['matSnackBarActions', '', 4, 'ngIf'],
                ['matSnackBarActions', ''],
                ['mat-button', '', 'matSnackBarAction', '', 3, 'click'],
              ],
              template: function (e, i) {
                1 & e && (_(0, 'div', 0), w(1), p(), E(2, F5, 3, 1, 'div', 1)),
                  2 & e &&
                    (b(1),
                    Ze(' ', i.data.message, '\n'),
                    b(1),
                    D('ngIf', i.hasAction));
              },
              dependencies: [An, wi, V5, B5, H5],
              styles: ['.mat-mdc-simple-snack-bar{display:flex}'],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      const j5 = {
        snackBarState: Ci('state', [
          On('void, hidden', Ye({ transform: 'scale(0.8)', opacity: 0 })),
          On('visible', Ye({ transform: 'scale(1)', opacity: 1 })),
          At('* => visible', Vt('150ms cubic-bezier(0, 0, 0.2, 1)')),
          At(
            '* => void, * => hidden',
            Vt('75ms cubic-bezier(0.4, 0.0, 1, 1)', Ye({ opacity: 0 }))
          ),
        ]),
      };
      let U5 = (() => {
          class n extends Rg {
            constructor(e, i, r, o, a) {
              super(),
                (this._ngZone = e),
                (this._elementRef = i),
                (this._changeDetectorRef = r),
                (this._platform = o),
                (this.snackBarConfig = a),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new z()),
                (this._onExit = new z()),
                (this._onEnter = new z()),
                (this._animationState = 'void'),
                (this.attachDomPortal = (s) => {
                  this._assertNotAttached();
                  const l = this._portalOutlet.attachDomPortal(s);
                  return this._afterPortalAttached(), l;
                }),
                (this._live =
                  'assertive' !== a.politeness || a.announcementMessage
                    ? 'off' === a.politeness
                      ? 'off'
                      : 'polite'
                    : 'assertive'),
                this._platform.FIREFOX &&
                  ('polite' === this._live && (this._role = 'status'),
                  'assertive' === this._live && (this._role = 'alert'));
            }
            attachComponentPortal(e) {
              this._assertNotAttached();
              const i = this._portalOutlet.attachComponentPortal(e);
              return this._afterPortalAttached(), i;
            }
            attachTemplatePortal(e) {
              this._assertNotAttached();
              const i = this._portalOutlet.attachTemplatePortal(e);
              return this._afterPortalAttached(), i;
            }
            onAnimationEnd(e) {
              const { fromState: i, toState: r } = e;
              if (
                ((('void' === r && 'void' !== i) || 'hidden' === r) &&
                  this._completeExit(),
                'visible' === r)
              ) {
                const o = this._onEnter;
                this._ngZone.run(() => {
                  o.next(), o.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = 'visible'),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                this._ngZone.run(() => {
                  (this._animationState = 'hidden'),
                    this._elementRef.nativeElement.setAttribute('mat-exit', ''),
                    clearTimeout(this._announceTimeoutId);
                }),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0), this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe(ot(1)).subscribe(() => {
                this._ngZone.run(() => {
                  this._onExit.next(), this._onExit.complete();
                });
              });
            }
            _afterPortalAttached() {
              const e = this._elementRef.nativeElement,
                i = this.snackBarConfig.panelClass;
              i &&
                (Array.isArray(i)
                  ? i.forEach((r) => e.classList.add(r))
                  : e.classList.add(i));
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const e =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-hidden]'
                        ),
                      i =
                        this._elementRef.nativeElement.querySelector(
                          '[aria-live]'
                        );
                    if (e && i) {
                      let r = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        e.contains(document.activeElement) &&
                        (r = document.activeElement),
                        e.removeAttribute('aria-hidden'),
                        i.appendChild(e),
                        r?.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(U), m(j), m(mt), m(je), m(Qu));
            }),
            (n.ɵdir = S({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && Se(rE, 7), 2 & e)) {
                  let r;
                  V((r = B())) && (i._portalOutlet = r.first);
                }
              },
              features: [F],
            })),
            n
          );
        })(),
        $5 = (() => {
          class n extends U5 {
            _afterPortalAttached() {
              super._afterPortalAttached();
              const e = this._label.nativeElement,
                i = 'mdc-snackbar__label';
              e.classList.toggle(i, !e.querySelector(`.${i}`));
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-snack-bar-container']],
              viewQuery: function (e, i) {
                if ((1 & e && Se(P5, 7), 2 & e)) {
                  let r;
                  V((r = B())) && (i._label = r.first);
                }
              },
              hostAttrs: [
                1,
                'mdc-snackbar',
                'mat-mdc-snack-bar-container',
                'mdc-snackbar--open',
              ],
              hostVars: 1,
              hostBindings: function (e, i) {
                1 & e &&
                  Jc('@state.done', function (o) {
                    return i.onAnimationEnd(o);
                  }),
                  2 & e && nd('@state', i._animationState);
              },
              features: [F],
              decls: 6,
              vars: 2,
              consts: [
                [1, 'mdc-snackbar__surface'],
                [1, 'mat-mdc-snack-bar-label'],
                ['label', ''],
                ['aria-hidden', 'true'],
                ['cdkPortalOutlet', ''],
              ],
              template: function (e, i) {
                1 & e &&
                  (_(0, 'div', 0)(1, 'div', 1, 2)(3, 'div', 3),
                  E(4, N5, 0, 0, 'ng-template', 4),
                  p(),
                  ne(5, 'div'),
                  p()()),
                  2 & e && (b(5), ve('aria-live', i._live)('role', i._role));
              },
              dependencies: [rE],
              styles: [
                '.mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss svg,.mat-mdc-snack-bar-container .mdc-snackbar__dismiss img{width:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px));height:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size, inherit);font-family:var(--mdc-snackbar-supporting-text-font, inherit);font-weight:var(--mdc-snackbar-supporting-text-weight, inherit);line-height:var(--mdc-snackbar-supporting-text-line-height, inherit)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-mdc-snack-bar-button-color, transparent);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}',
              ],
              encapsulation: 2,
              data: { animation: [j5.snackBarState] },
            })),
            n
          );
        })(),
        ak = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [hl, Og, Tn, yu, Ae, Ae] })),
            n
          );
        })();
      const sk = new A('mat-snack-bar-default-options', {
        providedIn: 'root',
        factory: function G5() {
          return new Qu();
        },
      });
      let W5 = (() => {
          class n {
            get _openedSnackBarRef() {
              const e = this._parentSnackBar;
              return e ? e._openedSnackBarRef : this._snackBarRefAtThisLevel;
            }
            set _openedSnackBarRef(e) {
              this._parentSnackBar
                ? (this._parentSnackBar._openedSnackBarRef = e)
                : (this._snackBarRefAtThisLevel = e);
            }
            constructor(e, i, r, o, a, s) {
              (this._overlay = e),
                (this._live = i),
                (this._injector = r),
                (this._breakpointObserver = o),
                (this._parentSnackBar = a),
                (this._defaultConfig = s),
                (this._snackBarRefAtThisLevel = null);
            }
            openFromComponent(e, i) {
              return this._attach(e, i);
            }
            openFromTemplate(e, i) {
              return this._attach(e, i);
            }
            open(e, i = '', r) {
              const o = { ...this._defaultConfig, ...r };
              return (
                (o.data = { message: e, action: i }),
                o.announcementMessage === e && (o.announcementMessage = void 0),
                this.openFromComponent(this.simpleSnackBarComponent, o)
              );
            }
            dismiss() {
              this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
            }
            ngOnDestroy() {
              this._snackBarRefAtThisLevel &&
                this._snackBarRefAtThisLevel.dismiss();
            }
            _attachSnackBarContainer(e, i) {
              const o = Dt.create({
                  parent:
                    (i && i.viewContainerRef && i.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: Qu, useValue: i }],
                }),
                a = new xu(
                  this.snackBarContainerComponent,
                  i.viewContainerRef,
                  o
                ),
                s = e.attach(a);
              return (s.instance.snackBarConfig = i), s.instance;
            }
            _attach(e, i) {
              const r = { ...new Qu(), ...this._defaultConfig, ...i },
                o = this._createOverlay(r),
                a = this._attachSnackBarContainer(o, r),
                s = new C_(a, o);
              if (e instanceof ut) {
                const l = new Du(e, null, {
                  $implicit: r.data,
                  snackBarRef: s,
                });
                s.instance = a.attachTemplatePortal(l);
              } else {
                const l = this._createInjector(r, s),
                  c = new xu(e, void 0, l),
                  d = a.attachComponentPortal(c);
                s.instance = d.instance;
              }
              return (
                this._breakpointObserver
                  .observe('(max-width: 599.98px) and (orientation: portrait)')
                  .pipe(me(o.detachments()))
                  .subscribe((l) => {
                    o.overlayElement.classList.toggle(
                      this.handsetCssClass,
                      l.matches
                    );
                  }),
                r.announcementMessage &&
                  a._onAnnounce.subscribe(() => {
                    this._live.announce(r.announcementMessage, r.politeness);
                  }),
                this._animateSnackBar(s, r),
                (this._openedSnackBarRef = s),
                this._openedSnackBarRef
              );
            }
            _animateSnackBar(e, i) {
              e.afterDismissed().subscribe(() => {
                this._openedSnackBarRef == e &&
                  (this._openedSnackBarRef = null),
                  i.announcementMessage && this._live.clear();
              }),
                this._openedSnackBarRef
                  ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                      e.containerInstance.enter();
                    }),
                    this._openedSnackBarRef.dismiss())
                  : e.containerInstance.enter(),
                i.duration &&
                  i.duration > 0 &&
                  e.afterOpened().subscribe(() => e._dismissAfter(i.duration));
            }
            _createOverlay(e) {
              const i = new Mu();
              i.direction = e.direction;
              let r = this._overlay.position().global();
              const o = 'rtl' === e.direction,
                a =
                  'left' === e.horizontalPosition ||
                  ('start' === e.horizontalPosition && !o) ||
                  ('end' === e.horizontalPosition && o),
                s = !a && 'center' !== e.horizontalPosition;
              return (
                a ? r.left('0') : s ? r.right('0') : r.centerHorizontally(),
                'top' === e.verticalPosition ? r.top('0') : r.bottom('0'),
                (i.positionStrategy = r),
                this._overlay.create(i)
              );
            }
            _createInjector(e, i) {
              return Dt.create({
                parent:
                  (e && e.viewContainerRef && e.viewContainerRef.injector) ||
                  this._injector,
                providers: [
                  { provide: C_, useValue: i },
                  { provide: ok, useValue: e.data },
                ],
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(Jn), C(yg), C(Dt), C(pg), C(n, 12), C(sk));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        x_ = (() => {
          class n extends W5 {
            constructor(e, i, r, o, a, s) {
              super(e, i, r, o, a, s),
                (this.simpleSnackBarComponent = z5),
                (this.snackBarContainerComponent = $5),
                (this.handsetCssClass = 'mat-mdc-snack-bar-handset');
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(Jn), C(yg), C(Dt), C(pg), C(n, 12), C(sk));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: ak })),
            n
          );
        })();
      class gn {
        constructor(t, e) {
          (this.http = t), (this.snackBar = e), (this.baseUrl = g__baseUrl);
        }
        findAll() {
          return this.http.get(`${this.baseUrl}/tecnicos`);
        }
        findById(t) {
          return this.http.get(`${this.baseUrl}/tecnicos/${t}`);
        }
        create(t) {
          return this.http.post(`${this.baseUrl}/tecnicos`, t);
        }
        update(t) {
          return this.http.put(`${this.baseUrl}/tecnicos/${t.id}`, t);
        }
        delete(t) {
          return this.http.delete(`${this.baseUrl}/tecnicos/${t.id}`);
        }
        message(t) {
          this.snackBar.open(`${t}`, 'OK', {
            horizontalPosition: 'end',
            verticalPosition: 'top',
            duration: 4e3,
          });
        }
      }
      (gn.ɵfac = function (t) {
        return new (t || gn)(C(Na), C(x_));
      }),
        (gn.ɵprov = I({ token: gn, factory: gn.ɵfac, providedIn: 'root' }));
      const Y5 = ['*'];
      let Ju;
      function Al(n) {
        return (
          (function q5() {
            if (void 0 === Ju && ((Ju = null), typeof window < 'u')) {
              const n = window;
              void 0 !== n.trustedTypes &&
                (Ju = n.trustedTypes.createPolicy('angular#components', {
                  createHTML: (t) => t,
                }));
            }
            return Ju;
          })()?.createHTML(n) || n
        );
      }
      function lk(n) {
        return Error(`Unable to find icon with the name "${n}"`);
      }
      function ck(n) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${n}".`
        );
      }
      function dk(n) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${n}".`
        );
      }
      class uo {
        constructor(t, e, i) {
          (this.url = t), (this.svgText = e), (this.options = i);
        }
      }
      let eh = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._httpClient = e),
              (this._sanitizer = i),
              (this._errorHandler = o),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = [
                'material-icons',
                'mat-ligature-font',
              ]),
              (this._document = r);
          }
          addSvgIcon(e, i, r) {
            return this.addSvgIconInNamespace('', e, i, r);
          }
          addSvgIconLiteral(e, i, r) {
            return this.addSvgIconLiteralInNamespace('', e, i, r);
          }
          addSvgIconInNamespace(e, i, r, o) {
            return this._addSvgIconConfig(e, i, new uo(r, null, o));
          }
          addSvgIconResolver(e) {
            return this._resolvers.push(e), this;
          }
          addSvgIconLiteralInNamespace(e, i, r, o) {
            const a = this._sanitizer.sanitize(Re.HTML, r);
            if (!a) throw dk(r);
            const s = Al(a);
            return this._addSvgIconConfig(e, i, new uo('', s, o));
          }
          addSvgIconSet(e, i) {
            return this.addSvgIconSetInNamespace('', e, i);
          }
          addSvgIconSetLiteral(e, i) {
            return this.addSvgIconSetLiteralInNamespace('', e, i);
          }
          addSvgIconSetInNamespace(e, i, r) {
            return this._addSvgIconSetConfig(e, new uo(i, null, r));
          }
          addSvgIconSetLiteralInNamespace(e, i, r) {
            const o = this._sanitizer.sanitize(Re.HTML, i);
            if (!o) throw dk(i);
            const a = Al(o);
            return this._addSvgIconSetConfig(e, new uo('', a, r));
          }
          registerFontClassAlias(e, i = e) {
            return this._fontCssClassesByAlias.set(e, i), this;
          }
          classNameForFontAlias(e) {
            return this._fontCssClassesByAlias.get(e) || e;
          }
          setDefaultFontSetClass(...e) {
            return (this._defaultFontSetClass = e), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(e) {
            const i = this._sanitizer.sanitize(Re.RESOURCE_URL, e);
            if (!i) throw ck(e);
            const r = this._cachedIconsByUrl.get(i);
            return r
              ? H(th(r))
              : this._loadSvgIconFromConfig(new uo(e, null)).pipe(
                  _t((o) => this._cachedIconsByUrl.set(i, o)),
                  q((o) => th(o))
                );
          }
          getNamedSvgIcon(e, i = '') {
            const r = uk(i, e);
            let o = this._svgIconConfigs.get(r);
            if (o) return this._getSvgFromConfig(o);
            if (((o = this._getIconConfigFromResolvers(i, e)), o))
              return this._svgIconConfigs.set(r, o), this._getSvgFromConfig(o);
            const a = this._iconSetConfigs.get(i);
            return a ? this._getSvgFromIconSetConfigs(e, a) : sa(lk(r));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(e) {
            return e.svgText
              ? H(th(this._svgElementFromConfig(e)))
              : this._loadSvgIconFromConfig(e).pipe(q((i) => th(i)));
          }
          _getSvgFromIconSetConfigs(e, i) {
            const r = this._extractIconWithNameFromAnySet(e, i);
            return r
              ? H(r)
              : RE(
                  i
                    .filter((a) => !a.svgText)
                    .map((a) =>
                      this._loadSvgIconSetFromConfig(a).pipe(
                        $i((s) => {
                          const c = `Loading icon set URL: ${this._sanitizer.sanitize(
                            Re.RESOURCE_URL,
                            a.url
                          )} failed: ${s.message}`;
                          return (
                            this._errorHandler.handleError(new Error(c)),
                            H(null)
                          );
                        })
                      )
                    )
                ).pipe(
                  q(() => {
                    const a = this._extractIconWithNameFromAnySet(e, i);
                    if (!a) throw lk(e);
                    return a;
                  })
                );
          }
          _extractIconWithNameFromAnySet(e, i) {
            for (let r = i.length - 1; r >= 0; r--) {
              const o = i[r];
              if (o.svgText && o.svgText.toString().indexOf(e) > -1) {
                const a = this._svgElementFromConfig(o),
                  s = this._extractSvgIconFromSet(a, e, o.options);
                if (s) return s;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(e) {
            return this._fetchIcon(e).pipe(
              _t((i) => (e.svgText = i)),
              q(() => this._svgElementFromConfig(e))
            );
          }
          _loadSvgIconSetFromConfig(e) {
            return e.svgText
              ? H(null)
              : this._fetchIcon(e).pipe(_t((i) => (e.svgText = i)));
          }
          _extractSvgIconFromSet(e, i, r) {
            const o = e.querySelector(`[id="${i}"]`);
            if (!o) return null;
            const a = o.cloneNode(!0);
            if ((a.removeAttribute('id'), 'svg' === a.nodeName.toLowerCase()))
              return this._setSvgAttributes(a, r);
            if ('symbol' === a.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(a), r);
            const s = this._svgElementFromString(Al('<svg></svg>'));
            return s.appendChild(a), this._setSvgAttributes(s, r);
          }
          _svgElementFromString(e) {
            const i = this._document.createElement('DIV');
            i.innerHTML = e;
            const r = i.querySelector('svg');
            if (!r) throw Error('<svg> tag not found');
            return r;
          }
          _toSvgElement(e) {
            const i = this._svgElementFromString(Al('<svg></svg>')),
              r = e.attributes;
            for (let o = 0; o < r.length; o++) {
              const { name: a, value: s } = r[o];
              'id' !== a && i.setAttribute(a, s);
            }
            for (let o = 0; o < e.childNodes.length; o++)
              e.childNodes[o].nodeType === this._document.ELEMENT_NODE &&
                i.appendChild(e.childNodes[o].cloneNode(!0));
            return i;
          }
          _setSvgAttributes(e, i) {
            return (
              e.setAttribute('fit', ''),
              e.setAttribute('height', '100%'),
              e.setAttribute('width', '100%'),
              e.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              e.setAttribute('focusable', 'false'),
              i && i.viewBox && e.setAttribute('viewBox', i.viewBox),
              e
            );
          }
          _fetchIcon(e) {
            const { url: i, options: r } = e,
              o = r?.withCredentials ?? !1;
            if (!this._httpClient)
              throw (function K5() {
                return Error(
                  'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.'
                );
              })();
            if (null == i) throw Error(`Cannot fetch icon from URL "${i}".`);
            const a = this._sanitizer.sanitize(Re.RESOURCE_URL, i);
            if (!a) throw ck(i);
            const s = this._inProgressUrlFetches.get(a);
            if (s) return s;
            const l = this._httpClient
              .get(a, { responseType: 'text', withCredentials: o })
              .pipe(
                q((c) => Al(c)),
                Vd(() => this._inProgressUrlFetches.delete(a)),
                Ev()
              );
            return this._inProgressUrlFetches.set(a, l), l;
          }
          _addSvgIconConfig(e, i, r) {
            return this._svgIconConfigs.set(uk(e, i), r), this;
          }
          _addSvgIconSetConfig(e, i) {
            const r = this._iconSetConfigs.get(e);
            return r ? r.push(i) : this._iconSetConfigs.set(e, [i]), this;
          }
          _svgElementFromConfig(e) {
            if (!e.svgElement) {
              const i = this._svgElementFromString(e.svgText);
              this._setSvgAttributes(i, e.options), (e.svgElement = i);
            }
            return e.svgElement;
          }
          _getIconConfigFromResolvers(e, i) {
            for (let r = 0; r < this._resolvers.length; r++) {
              const o = this._resolvers[r](i, e);
              if (o)
                return Z5(o) ? new uo(o.url, null, o.options) : new uo(o, null);
            }
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(Na, 8), C(Ap), C(oe, 8), C(Li));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      function th(n) {
        return n.cloneNode(!0);
      }
      function uk(n, t) {
        return n + ':' + t;
      }
      function Z5(n) {
        return !(!n.url || !n.options);
      }
      const Q5 = Cg(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          }
        ),
        J5 = new A('MAT_ICON_DEFAULT_OPTIONS'),
        e$ = new A('mat-icon-location', {
          providedIn: 'root',
          factory: function t$() {
            const n = ie(oe),
              t = n ? n.location : null;
            return { getPathname: () => (t ? t.pathname + t.search : '') };
          },
        }),
        hk = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        n$ = hk.map((n) => `[${n}]`).join(', '),
        i$ = /^url\(['"]?#(.*?)['"]?\)$/;
      let nh = (() => {
          class n extends Q5 {
            get inline() {
              return this._inline;
            }
            set inline(e) {
              this._inline = ce(e);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(e) {
              e !== this._svgIcon &&
                (e
                  ? this._updateSvgIcon(e)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = e));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(e) {
              const i = this._cleanupFontValue(e);
              i !== this._fontSet &&
                ((this._fontSet = i), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(e) {
              const i = this._cleanupFontValue(e);
              i !== this._fontIcon &&
                ((this._fontIcon = i), this._updateFontIconClasses());
            }
            constructor(e, i, r, o, a, s) {
              super(e),
                (this._iconRegistry = i),
                (this._location = o),
                (this._errorHandler = a),
                (this._inline = !1),
                (this._previousFontSetClass = []),
                (this._currentIconFetch = Oe.EMPTY),
                s &&
                  (s.color && (this.color = this.defaultColor = s.color),
                  s.fontSet && (this.fontSet = s.fontSet)),
                r || e.nativeElement.setAttribute('aria-hidden', 'true');
            }
            _splitIconName(e) {
              if (!e) return ['', ''];
              const i = e.split(':');
              switch (i.length) {
                case 1:
                  return ['', i[0]];
                case 2:
                  return i;
                default:
                  throw Error(`Invalid icon name: "${e}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const e = this._elementsWithExternalReferences;
              if (e && e.size) {
                const i = this._location.getPathname();
                i !== this._previousPath &&
                  ((this._previousPath = i), this._prependPathToReferences(i));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(e) {
              this._clearSvgElement();
              const i = this._location.getPathname();
              (this._previousPath = i),
                this._cacheChildrenWithExternalReferences(e),
                this._prependPathToReferences(i),
                this._elementRef.nativeElement.appendChild(e);
            }
            _clearSvgElement() {
              const e = this._elementRef.nativeElement;
              let i = e.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                i--;

              ) {
                const r = e.childNodes[i];
                (1 !== r.nodeType || 'svg' === r.nodeName.toLowerCase()) &&
                  r.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const e = this._elementRef.nativeElement,
                i = (
                  this.fontSet
                    ? this._iconRegistry
                        .classNameForFontAlias(this.fontSet)
                        .split(/ +/)
                    : this._iconRegistry.getDefaultFontSetClass()
                ).filter((r) => r.length > 0);
              this._previousFontSetClass.forEach((r) => e.classList.remove(r)),
                i.forEach((r) => e.classList.add(r)),
                (this._previousFontSetClass = i),
                this.fontIcon !== this._previousFontIconClass &&
                  !i.includes('mat-ligature-font') &&
                  (this._previousFontIconClass &&
                    e.classList.remove(this._previousFontIconClass),
                  this.fontIcon && e.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(e) {
              return 'string' == typeof e ? e.trim().split(' ')[0] : e;
            }
            _prependPathToReferences(e) {
              const i = this._elementsWithExternalReferences;
              i &&
                i.forEach((r, o) => {
                  r.forEach((a) => {
                    o.setAttribute(a.name, `url('${e}#${a.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(e) {
              const i = e.querySelectorAll(n$),
                r = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let o = 0; o < i.length; o++)
                hk.forEach((a) => {
                  const s = i[o],
                    l = s.getAttribute(a),
                    c = l ? l.match(i$) : null;
                  if (c) {
                    let d = r.get(s);
                    d || ((d = []), r.set(s, d)),
                      d.push({ name: a, value: c[1] });
                  }
                });
            }
            _updateSvgIcon(e) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                e)
              ) {
                const [i, r] = this._splitIconName(e);
                i && (this._svgNamespace = i),
                  r && (this._svgName = r),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(r, i)
                    .pipe(ot(1))
                    .subscribe(
                      (o) => this._setSvgElement(o),
                      (o) => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${i}:${r}! ${o.message}`
                          )
                        );
                      }
                    ));
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(j),
                m(eh),
                cr('aria-hidden'),
                m(e$),
                m(Li),
                m(J5, 8)
              );
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 8,
              hostBindings: function (e, i) {
                2 & e &&
                  (ve(
                    'data-mat-icon-type',
                    i._usingFontIcon() ? 'font' : 'svg'
                  )('data-mat-icon-name', i._svgName || i.fontIcon)(
                    'data-mat-icon-namespace',
                    i._svgNamespace || i.fontSet
                  )('fontIcon', i._usingFontIcon() ? i.fontIcon : null),
                  be('mat-icon-inline', i.inline)(
                    'mat-icon-no-color',
                    'primary' !== i.color &&
                      'accent' !== i.color &&
                      'warn' !== i.color
                  ));
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                svgIcon: 'svgIcon',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
              },
              exportAs: ['matIcon'],
              features: [F],
              ngContentSelectors: Y5,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Xe(), Y(0));
              },
              styles: [
                '.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        r$ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, Ae] })),
            n
          );
        })();
      function o$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' Id '), p());
      }
      function a$(n, t) {
        if ((1 & n && (_(0, 'td', 16), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), Ze(' ', e.id, ' ');
        }
      }
      function s$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' Nome '), p());
      }
      function l$(n, t) {
        if ((1 & n && (_(0, 'td', 16), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), Ze(' ', e.nome, ' ');
        }
      }
      function c$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' CPF '), p());
      }
      function d$(n, t) {
        if ((1 & n && (_(0, 'td', 16), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), Ze(' ', e.cpf, ' ');
        }
      }
      function u$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' Telefone '), p());
      }
      function h$(n, t) {
        if ((1 & n && (_(0, 'td', 16), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), Ze(' ', e.telefone, ' ');
        }
      }
      function m$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' A\xe7\xf5es '), p());
      }
      function f$(n, t) {
        if (
          (1 & n &&
            (_(0, 'td', 16)(1, 'a', 17)(2, 'i', 18),
            w(3, 'edit'),
            p()(),
            _(4, 'a', 17)(5, 'i', 19),
            w(6, 'delete'),
            p()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          b(1),
            Gn('routerLink', 'update/', e.id, ''),
            b(3),
            Gn('routerLink', 'delete/', e.id, '');
        }
      }
      function p$(n, t) {
        1 & n && ne(0, 'tr', 20);
      }
      function g$(n, t) {
        1 & n && ne(0, 'tr', 21);
      }
      const _$ = function () {
        return [1, 5, 10, 15, 20];
      };
      class Tl {
        constructor(t, e) {
          (this.service = t),
            (this.router = e),
            (this.listadeTecnicos = []),
            (this.displayedColumns = [
              'id',
              'nome',
              'cpf',
              'telefone',
              'acoes',
            ]),
            (this.dataSource = new xr(this.listadeTecnicos));
        }
        ngAfterViewInit() {
          this.findAll();
        }
        findAll() {
          this.service.findAll().subscribe((t) => {
            (this.listadeTecnicos = t),
              (this.dataSource = new xr(this.listadeTecnicos)),
              (this.dataSource.paginator = this.paginator);
          });
        }
        navigate2Create() {
          this.router.navigate(['tecnicos/create']);
        }
      }
      (Tl.ɵfac = function (t) {
        return new (t || Tl)(m(gn), m(We));
      }),
        (Tl.ɵcmp = W({
          type: Tl,
          selectors: [['app-tecnico-read']],
          viewQuery: function (t, e) {
            if ((1 & t && Se(Cr, 5), 2 & t)) {
              let i;
              V((i = B())) && (e.paginator = i.first);
            }
          },
          decls: 27,
          vars: 5,
          consts: [
            [1, 'create'],
            [1, 'mat-elevation-z8', 'container'],
            ['mat-table', '', 3, 'dataSource'],
            ['matColumnDef', 'id'],
            ['mat-header-cell', '', 4, 'matHeaderCellDef'],
            ['mat-cell', '', 4, 'matCellDef'],
            ['matColumnDef', 'nome'],
            ['matColumnDef', 'cpf'],
            ['matColumnDef', 'telefone'],
            ['matColumnDef', 'acoes'],
            ['mat-header-row', '', 4, 'matHeaderRowDef'],
            ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
            [
              'showFirstLastButtons',
              '',
              'aria-label',
              'Select page of periodic elements',
              3,
              'pageSizeOptions',
            ],
            [1, 'fab-container'],
            [
              'mat-fab',
              '',
              'color',
              'warn',
              'aria-label',
              'Example icon button with a home icon',
              3,
              'click',
            ],
            ['mat-header-cell', ''],
            ['mat-cell', ''],
            [3, 'routerLink'],
            ['id', 'edit', 1, 'material-icons'],
            ['id', 'delete', 1, 'material-icons'],
            ['mat-header-row', ''],
            ['mat-row', ''],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'div', 0)(1, 'h1'),
              w(2, 'T\xe9cnicos'),
              p()(),
              _(3, 'div', 1)(4, 'table', 2),
              Be(5, 3),
              E(6, o$, 2, 0, 'th', 4),
              E(7, a$, 2, 1, 'td', 5),
              He(),
              Be(8, 6),
              E(9, s$, 2, 0, 'th', 4),
              E(10, l$, 2, 1, 'td', 5),
              He(),
              Be(11, 7),
              E(12, c$, 2, 0, 'th', 4),
              E(13, d$, 2, 1, 'td', 5),
              He(),
              Be(14, 8),
              E(15, u$, 2, 0, 'th', 4),
              E(16, h$, 2, 1, 'td', 5),
              He(),
              Be(17, 9),
              E(18, m$, 2, 0, 'th', 4),
              E(19, f$, 7, 2, 'td', 5),
              He(),
              E(20, p$, 1, 0, 'tr', 10),
              E(21, g$, 1, 0, 'tr', 11),
              p(),
              ne(22, 'mat-paginator', 12),
              p(),
              _(23, 'div', 13)(24, 'button', 14),
              O('click', function () {
                return e.navigate2Create();
              }),
              _(25, 'mat-icon'),
              w(26, 'add'),
              p()()()),
              2 & t &&
                (b(4),
                D('dataSource', e.dataSource),
                b(16),
                D('matHeaderRowDef', e.displayedColumns),
                b(1),
                D('matRowDefColumns', e.displayedColumns),
                b(1),
                D('pageSizeOptions', Ms(4, _$)));
          },
          dependencies: [
            gr,
            nh,
            Eg,
            Cl,
            Ra,
            xl,
            Oa,
            Ia,
            Dl,
            Fa,
            Pa,
            Ml,
            El,
            Cr,
          ],
          styles: [
            '.container[_ngcontent-%COMP%]{width:86%;margin-left:auto;margin-right:auto}table[_ngcontent-%COMP%]{width:100%}.fab-container[_ngcontent-%COMP%]{inset:auto 10px 60px auto!important;position:fixed!important}.create[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:.2}#edit[_ngcontent-%COMP%]{color:#75d1e8;padding-right:1rem}#delete[_ngcontent-%COMP%]{color:red;padding-left:1rem}',
          ],
        }));
      const mk = ro({ passive: !0 });
      let v$ = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._ngZone = i),
                (this._monitoredElements = new Map());
            }
            monitor(e) {
              if (!this._platform.isBrowser) return Vn;
              const i = Wi(e),
                r = this._monitoredElements.get(i);
              if (r) return r.subject;
              const o = new z(),
                a = 'cdk-text-field-autofilled',
                s = (l) => {
                  'cdk-text-field-autofill-start' !== l.animationName ||
                  i.classList.contains(a)
                    ? 'cdk-text-field-autofill-end' === l.animationName &&
                      i.classList.contains(a) &&
                      (i.classList.remove(a),
                      this._ngZone.run(() =>
                        o.next({ target: l.target, isAutofilled: !1 })
                      ))
                    : (i.classList.add(a),
                      this._ngZone.run(() =>
                        o.next({ target: l.target, isAutofilled: !0 })
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  i.addEventListener('animationstart', s, mk),
                    i.classList.add('cdk-text-field-autofill-monitored');
                }),
                this._monitoredElements.set(i, {
                  subject: o,
                  unlisten: () => {
                    i.removeEventListener('animationstart', s, mk);
                  },
                }),
                o
              );
            }
            stopMonitoring(e) {
              const i = Wi(e),
                r = this._monitoredElements.get(i);
              r &&
                (r.unlisten(),
                r.subject.complete(),
                i.classList.remove('cdk-text-field-autofill-monitored'),
                i.classList.remove('cdk-text-field-autofilled'),
                this._monitoredElements.delete(i));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((e, i) => this.stopMonitoring(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(C(je), C(U));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        b$ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({})),
            n
          );
        })();
      const fk = new A('MAT_INPUT_VALUE_ACCESSOR'),
        y$ = [
          'button',
          'checkbox',
          'file',
          'hidden',
          'image',
          'radio',
          'range',
          'reset',
          'submit',
        ];
      let w$ = 0;
      const C$ = FM(
        class {
          constructor(n, t, e, i) {
            (this._defaultErrorStateMatcher = n),
              (this._parentForm = t),
              (this._parentFormGroup = e),
              (this.ngControl = i),
              (this.stateChanges = new z());
          }
        }
      );
      let Mr = (() => {
          class n extends C$ {
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ce(e)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(e) {
              this._id = e || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(qt.required) ??
                !1
              );
            }
            set required(e) {
              this._required = ce(e);
            }
            get type() {
              return this._type;
            }
            set type(e) {
              (this._type = e || 'text'),
                this._validateType(),
                !this._isTextarea &&
                  uM().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(e) {
              e !== this.value &&
                ((this._inputValueAccessor.value = e),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(e) {
              this._readonly = ce(e);
            }
            constructor(e, i, r, o, a, s, l, c, d, u) {
              super(s, o, a, r),
                (this._elementRef = e),
                (this._platform = i),
                (this._autofillMonitor = c),
                (this._formField = u),
                (this._uid = 'mat-input-' + w$++),
                (this.focused = !1),
                (this.stateChanges = new z()),
                (this.controlType = 'mat-input'),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = 'text'),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  'date',
                  'datetime',
                  'datetime-local',
                  'month',
                  'time',
                  'week',
                ].filter((g) => uM().has(g))),
                (this._iOSKeyupListener = (g) => {
                  const v = g.target;
                  !v.value &&
                    0 === v.selectionStart &&
                    0 === v.selectionEnd &&
                    (v.setSelectionRange(1, 1), v.setSelectionRange(0, 0));
                });
              const h = this._elementRef.nativeElement,
                f = h.nodeName.toLowerCase();
              (this._inputValueAccessor = l || h),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                i.IOS &&
                  d.runOutsideAngular(() => {
                    e.nativeElement.addEventListener(
                      'keyup',
                      this._iOSKeyupListener
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = 'select' === f),
                (this._isTextarea = 'textarea' === f),
                (this._isInFormField = !!u),
                this._isNativeSelect &&
                  (this.controlType = h.multiple
                    ? 'mat-native-select-multiple'
                    : 'mat-native-select');
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe((e) => {
                    (this.autofilled = e.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    'keyup',
                    this._iOSKeyupListener
                  );
            }
            ngDoCheck() {
              this.ngControl &&
                (this.updateErrorState(),
                null !== this.ngControl.disabled &&
                  this.ngControl.disabled !== this.disabled &&
                  ((this.disabled = this.ngControl.disabled),
                  this.stateChanges.next())),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _focusChanged(e) {
              e !== this.focused &&
                ((this.focused = e), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const e = this._elementRef.nativeElement.value;
              this._previousNativeValue !== e &&
                ((this._previousNativeValue = e), this.stateChanges.next());
            }
            _dirtyCheckPlaceholder() {
              const e = this._getPlaceholder();
              if (e !== this._previousPlaceholder) {
                const i = this._elementRef.nativeElement;
                (this._previousPlaceholder = e),
                  e
                    ? i.setAttribute('placeholder', e)
                    : i.removeAttribute('placeholder');
              }
            }
            _getPlaceholder() {
              return this.placeholder || null;
            }
            _validateType() {
              y$.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let e = this._elementRef.nativeElement.validity;
              return e && e.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const e = this._elementRef.nativeElement,
                  i = e.options[0];
                return (
                  this.focused ||
                  e.multiple ||
                  !this.empty ||
                  !!(e.selectedIndex > -1 && i && i.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    'aria-describedby',
                    e.join(' ')
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    'aria-describedby'
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const e = this._elementRef.nativeElement;
              return this._isNativeSelect && (e.multiple || e.size > 1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(j),
                m(je),
                m(Di, 10),
                m(pn, 8),
                m(bl, 8),
                m(NM),
                m(fk, 10),
                m(v$),
                m(U),
                m(ku, 8)
              );
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['input', 'matInput', ''],
                ['textarea', 'matInput', ''],
                ['select', 'matNativeControl', ''],
                ['input', 'matNativeControl', ''],
                ['textarea', 'matNativeControl', ''],
              ],
              hostAttrs: [1, 'mat-mdc-input-element'],
              hostVars: 18,
              hostBindings: function (e, i) {
                1 & e &&
                  O('focus', function () {
                    return i._focusChanged(!0);
                  })('blur', function () {
                    return i._focusChanged(!1);
                  })('input', function () {
                    return i._onInput();
                  }),
                  2 & e &&
                    (qr('id', i.id)('disabled', i.disabled)(
                      'required',
                      i.required
                    ),
                    ve('name', i.name || null)(
                      'readonly',
                      (i.readonly && !i._isNativeSelect) || null
                    )(
                      'aria-invalid',
                      i.empty && i.required ? null : i.errorState
                    )('aria-required', i.required)('id', i.id),
                    be('mat-input-server', i._isServer)(
                      'mat-mdc-form-field-textarea-control',
                      i._isInFormField && i._isTextarea
                    )('mat-mdc-form-field-input-control', i._isInFormField)(
                      'mdc-text-field__input',
                      i._isInFormField
                    )('mat-mdc-native-select-inline', i._isInlineSelect()));
              },
              inputs: {
                disabled: 'disabled',
                id: 'id',
                placeholder: 'placeholder',
                name: 'name',
                required: 'required',
                type: 'type',
                errorStateMatcher: 'errorStateMatcher',
                userAriaDescribedBy: [
                  'aria-describedby',
                  'userAriaDescribedBy',
                ],
                value: 'value',
                readonly: 'readonly',
              },
              exportAs: ['matInput'],
              features: [X([{ provide: Lg, useExisting: n }]), F, dt],
            })),
            n
          );
        })(),
        x$ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, Vg, Vg, b$, Ae] })),
            n
          );
        })();
      function D$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaNome());
        }
      }
      function M$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaCpf());
        }
      }
      function E$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaTelefone());
        }
      }
      class Il {
        constructor(t, e) {
          (this.router = t),
            (this.service = e),
            (this.tecnico = { id: '', nome: '', cpf: '', telefone: '' }),
            (this.nome = new rn('', [qt.minLength(5)])),
            (this.cpf = new rn('', [qt.minLength(11)])),
            (this.telefone = new rn('', [qt.minLength(11)]));
        }
        cancelaCadastro() {
          this.router.navigate(['/tecnicos']);
        }
        create() {
          this.service.create(this.tecnico).subscribe(
            (t) => {
              this.router.navigate(['/tecnicos']),
                this.service.message('T\xe9cnico criado com sucesso!');
            },
            (t) => {
              t.error.error.match('j\xe1 cadastrado')
                ? this.service.message(t.error.error)
                : t.error.listadeErros[0].messagemErro.match('(CPF)') &&
                  this.service.message('CPF inv\xe1lido!');
            }
          );
        }
        validaNome() {
          return (
            !!this.nome.invalid && 'O nome deve ter entre 5 e 100 caractecres'
          );
        }
        validaCpf() {
          return (
            !!this.cpf.invalid && 'O CPF deve ter entre 11 e 15 caracteres'
          );
        }
        validaTelefone() {
          return (
            !!this.telefone.invalid &&
            'O telefone deve ter entre 8 e 18 caractecres'
          );
        }
      }
      function S$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaNome());
        }
      }
      function k$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaCpf());
        }
      }
      function A$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaTelefone());
        }
      }
      (Il.ɵfac = function (t) {
        return new (t || Il)(m(We), m(gn));
      }),
        (Il.ɵcmp = W({
          type: Il,
          selectors: [['app-tecnico-create']],
          decls: 22,
          vars: 10,
          consts: [
            [1, 'form', 'mat-elevation-z8'],
            [1, 'full-width'],
            [
              'required',
              '',
              'name',
              'nome',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              'Jo\xe3o Silva',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [4, 'ngIf'],
            [
              'required',
              '',
              'name',
              'cpf',
              'maxlength',
              '15',
              'matInput',
              '',
              'placeholder',
              '000.000.000-00',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [
              'required',
              '',
              'name',
              'telefone',
              'maxlength',
              '18',
              'matInput',
              '',
              'placeholder',
              '(00)91234-5678',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'accent',
              1,
              'mat-elevation-z8',
              3,
              'disabled',
              'click',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'form', 0)(1, 'h1'),
              w(2, 'Cadastrar um novo T\xe9cnico'),
              p(),
              _(3, 'mat-form-field', 1)(4, 'mat-label'),
              w(5, 'Nome'),
              p(),
              _(6, 'input', 2),
              O('ngModelChange', function (r) {
                return (e.tecnico.nome = r);
              }),
              p(),
              E(7, D$, 2, 1, 'mat-error', 3),
              p(),
              _(8, 'mat-form-field', 1)(9, 'mat-label'),
              w(10, 'CPF'),
              p(),
              _(11, 'input', 4),
              O('ngModelChange', function (r) {
                return (e.tecnico.cpf = r);
              }),
              p(),
              E(12, M$, 2, 1, 'mat-error', 3),
              p(),
              _(13, 'mat-form-field', 1)(14, 'mat-label'),
              w(15, 'Telefone'),
              p(),
              _(16, 'input', 5),
              O('ngModelChange', function (r) {
                return (e.tecnico.telefone = r);
              }),
              p(),
              E(17, E$, 2, 1, 'mat-error', 3),
              p(),
              _(18, 'button', 6),
              O('click', function () {
                return e.create();
              }),
              w(19, 'CADASTRAR'),
              p(),
              _(20, 'button', 7),
              O('click', function () {
                return e.cancelaCadastro();
              }),
              w(21, 'CANCELAR'),
              p()()),
              2 & t &&
                (b(6),
                D('ngModel', e.tecnico.nome)('formControl', e.nome),
                b(1),
                D('ngIf', e.nome.invalid),
                b(4),
                D('ngModel', e.tecnico.cpf)('formControl', e.cpf),
                b(1),
                D('ngIf', e.cpf.invalid),
                b(4),
                D('ngModel', e.tecnico.telefone)('formControl', e.telefone),
                b(1),
                D('ngIf', e.telefone.invalid),
                b(1),
                D(
                  'disabled',
                  e.validaNome() || e.validaCpf() || e.validaTelefone()
                ));
          },
          dependencies: [
            An,
            Zi,
            ei,
            Ki,
            Xi,
            co,
            Mi,
            pn,
            Sa,
            wi,
            qi,
            xi,
            Eu,
            Mr,
          ],
          styles: [
            '.form[_ngcontent-%COMP%]{width:40%;margin:auto;padding:4rem 2rem}h1[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:4rem}button[_ngcontent-%COMP%]{width:100%;margin-bottom:.2rem}.full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}',
          ],
        }));
      class Rl {
        constructor(t, e, i) {
          (this.router = t),
            (this.service = e),
            (this.route = i),
            (this.tecnico = { id: '', nome: '', cpf: '', telefone: '' }),
            (this.nome = new rn('', [qt.minLength(5)])),
            (this.cpf = new rn('', [qt.minLength(11)])),
            (this.telefone = new rn('', [qt.minLength(11)]));
        }
        ngOnInit() {
          let t = Number(this.route.snapshot.paramMap.get('id'));
          this.service.findById(t).subscribe((e) => {
            this.tecnico = e;
          });
        }
        update() {
          this.service.update(this.tecnico).subscribe(
            (t) => {
              this.router.navigate(['/tecnicos']),
                this.service.message('T\xe9cnico atualizado com sucesso!');
            },
            (t) => {
              t.error.error.match('j\xe1 cadastrado')
                ? this.service.message(t.error.error)
                : t.error.listadeErros[0].messagemErro.match('(CPF)') &&
                  this.service.message('CPF inv\xe1lido!');
            }
          );
        }
        cancelaCadastro() {
          this.router.navigate(['/tecnicos']);
        }
        validaNome() {
          return (
            !!this.nome.invalid && 'O nome deve ter entre 5 e 100 caractecres'
          );
        }
        validaCpf() {
          return (
            !!this.cpf.invalid && 'O CPF deve ter entre 11 e 15 caracteres'
          );
        }
        validaTelefone() {
          return (
            !!this.telefone.invalid &&
            'O telefone deve ter entre 8 e 18 caractecres'
          );
        }
      }
      (Rl.ɵfac = function (t) {
        return new (t || Rl)(m(We), m(gn), m(In));
      }),
        (Rl.ɵcmp = W({
          type: Rl,
          selectors: [['app-tecnico-update']],
          decls: 22,
          vars: 10,
          consts: [
            [1, 'form', 'mat-elevation-z8'],
            [1, 'full-width'],
            [
              'required',
              '',
              'name',
              'nome',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              'Jo\xe3o Silva',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [4, 'ngIf'],
            [
              'required',
              '',
              'name',
              'cpf',
              'maxlength',
              '15',
              'matInput',
              '',
              'placeholder',
              '000.000.000-00',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [
              'required',
              '',
              'name',
              'telefone',
              'maxlength',
              '18',
              'matInput',
              '',
              'placeholder',
              '(00)91234-5678',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'accent',
              1,
              'mat-elevation-z8',
              3,
              'disabled',
              'click',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'form', 0)(1, 'h1'),
              w(2, 'Atualiza o cadastro do T\xe9cnico'),
              p(),
              _(3, 'mat-form-field', 1)(4, 'mat-label'),
              w(5, 'Nome'),
              p(),
              _(6, 'input', 2),
              O('ngModelChange', function (r) {
                return (e.tecnico.nome = r);
              }),
              p(),
              E(7, S$, 2, 1, 'mat-error', 3),
              p(),
              _(8, 'mat-form-field', 1)(9, 'mat-label'),
              w(10, 'CPF'),
              p(),
              _(11, 'input', 4),
              O('ngModelChange', function (r) {
                return (e.tecnico.cpf = r);
              }),
              p(),
              E(12, k$, 2, 1, 'mat-error', 3),
              p(),
              _(13, 'mat-form-field', 1)(14, 'mat-label'),
              w(15, 'Telefone'),
              p(),
              _(16, 'input', 5),
              O('ngModelChange', function (r) {
                return (e.tecnico.telefone = r);
              }),
              p(),
              E(17, A$, 2, 1, 'mat-error', 3),
              p(),
              _(18, 'button', 6),
              O('click', function () {
                return e.update();
              }),
              w(19, 'ATUALIZA CADASTRO'),
              p(),
              _(20, 'button', 7),
              O('click', function () {
                return e.cancelaCadastro();
              }),
              w(21, 'CANCELAR'),
              p()()),
              2 & t &&
                (b(6),
                D('ngModel', e.tecnico.nome)('formControl', e.nome),
                b(1),
                D('ngIf', e.nome.invalid),
                b(4),
                D('ngModel', e.tecnico.cpf)('formControl', e.cpf),
                b(1),
                D('ngIf', e.cpf.invalid),
                b(4),
                D('ngModel', e.tecnico.telefone)('formControl', e.telefone),
                b(1),
                D('ngIf', e.telefone.invalid),
                b(1),
                D(
                  'disabled',
                  e.validaNome() || e.validaCpf() || e.validaTelefone()
                ));
          },
          dependencies: [
            An,
            Zi,
            ei,
            Ki,
            Xi,
            co,
            Mi,
            pn,
            Sa,
            wi,
            qi,
            xi,
            Eu,
            Mr,
          ],
          styles: [
            '.form[_ngcontent-%COMP%]{width:40%;margin:auto;padding:4rem 2rem}h1[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:4rem}button[_ngcontent-%COMP%]{width:100%;margin-bottom:.2rem}.full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}',
          ],
        }));
      class Ol {
        constructor(t, e, i) {
          (this.router = t),
            (this.service = e),
            (this.route = i),
            (this.tecnico = { id: '', nome: '', cpf: '', telefone: '' });
        }
        ngOnInit() {
          let t = Number(this.route.snapshot.paramMap.get('id'));
          this.service.findById(t).subscribe((e) => {
            this.tecnico = e;
          });
        }
        cancelaCadastro() {
          this.router.navigate(['/tecnicos']);
        }
        delete() {
          this.service.delete(this.tecnico).subscribe(
            (t) => {
              this.router.navigate(['/tecnicos']),
                this.service.message('T\xe9cnico deletado com sucesso!');
            },
            (t) => {
              t.error.error.match('ordens de servi\xe7o')
                ? this.service.message(
                    'T\xe9cnico possui ordens de servi\xe7o pendentes.'
                  )
                : console.log(t);
            }
          );
        }
      }
      (Ol.ɵfac = function (t) {
        return new (t || Ol)(m(We), m(gn), m(In));
      }),
        (Ol.ɵcmp = W({
          type: Ol,
          selectors: [['app-tecnico-delete']],
          decls: 19,
          vars: 3,
          consts: [
            [1, 'form', 'mat-elevation-z8'],
            [1, 'full-width'],
            [
              'disabled',
              '',
              'name',
              'nome',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              'Jo\xe3o Silva',
              3,
              'ngModel',
              'ngModelChange',
            ],
            [
              'disabled',
              '',
              'name',
              'cpf',
              'maxlength',
              '15',
              'matInput',
              '',
              'placeholder',
              '000.000.000-00',
              3,
              'ngModel',
              'ngModelChange',
            ],
            [
              'disabled',
              '',
              'name',
              'telefone',
              'maxlength',
              '18',
              'matInput',
              '',
              'placeholder',
              '(00)91234-5678',
              3,
              'ngModel',
              'ngModelChange',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'accent',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'form', 0)(1, 'h1'),
              w(2, 'Exclui o cadastro de um T\xe9cnico'),
              p(),
              _(3, 'mat-form-field', 1)(4, 'mat-label'),
              w(5, 'Nome'),
              p(),
              _(6, 'input', 2),
              O('ngModelChange', function (r) {
                return (e.tecnico.nome = r);
              }),
              p()(),
              _(7, 'mat-form-field', 1)(8, 'mat-label'),
              w(9, 'CPF'),
              p(),
              _(10, 'input', 3),
              O('ngModelChange', function (r) {
                return (e.tecnico.cpf = r);
              }),
              p()(),
              _(11, 'mat-form-field', 1)(12, 'mat-label'),
              w(13, 'Telefone'),
              p(),
              _(14, 'input', 4),
              O('ngModelChange', function (r) {
                return (e.tecnico.telefone = r);
              }),
              p()(),
              _(15, 'button', 5),
              O('click', function () {
                return e.delete();
              }),
              w(16, 'EXCLUIR T\xc9CNICO'),
              p(),
              _(17, 'button', 6),
              O('click', function () {
                return e.cancelaCadastro();
              }),
              w(18, 'CANCELAR'),
              p()()),
              2 & t &&
                (b(6),
                D('ngModel', e.tecnico.nome),
                b(4),
                D('ngModel', e.tecnico.cpf),
                b(4),
                D('ngModel', e.tecnico.telefone));
          },
          dependencies: [Zi, ei, Ki, Xi, Mi, Ea, pn, wi, qi, xi, Mr],
          styles: [
            '.form[_ngcontent-%COMP%]{width:40%;margin:auto;padding:4rem 2rem}h1[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:4rem}button[_ngcontent-%COMP%]{width:100%;margin-bottom:.2rem}.full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}',
          ],
        }));
      class _n {
        constructor(t, e) {
          (this.http = t), (this.snackBar = e), (this.baseUrl = g__baseUrl);
        }
        findAll() {
          return this.http.get(`${this.baseUrl}/clientes`);
        }
        findById(t) {
          return this.http.get(`${this.baseUrl}/clientes/${t}`);
        }
        create(t) {
          return this.http.post(`${this.baseUrl}/clientes`, t);
        }
        update(t) {
          return this.http.put(`${this.baseUrl}/clientes/${t.id}`, t);
        }
        delete(t) {
          return this.http.delete(`${this.baseUrl}/clientes/${t.id}`);
        }
        message(t) {
          this.snackBar.open(`${t}`, 'OK', {
            horizontalPosition: 'end',
            verticalPosition: 'top',
            duration: 4e3,
          });
        }
      }
      function T$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' Id '), p());
      }
      function I$(n, t) {
        if ((1 & n && (_(0, 'td', 16), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), Ze(' ', e.id, ' ');
        }
      }
      function R$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' Nome '), p());
      }
      function O$(n, t) {
        if ((1 & n && (_(0, 'td', 16), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), Ze(' ', e.nome, ' ');
        }
      }
      function F$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' CPF '), p());
      }
      function P$(n, t) {
        if ((1 & n && (_(0, 'td', 16), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), Ze(' ', e.cpf, ' ');
        }
      }
      function N$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' Id '), p());
      }
      function L$(n, t) {
        if ((1 & n && (_(0, 'td', 16), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), Ze(' ', e.telefone, ' ');
        }
      }
      function V$(n, t) {
        1 & n && (_(0, 'th', 15), w(1, ' A\xe7\xf5es '), p());
      }
      function B$(n, t) {
        if (
          (1 & n &&
            (_(0, 'td', 16)(1, 'a', 17)(2, 'i', 18),
            w(3, 'edit'),
            p()(),
            _(4, 'a', 17)(5, 'i', 19),
            w(6, 'delete'),
            p()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          b(1),
            Gn('routerLink', 'update/', e.id, ''),
            b(3),
            Gn('routerLink', 'delete/', e.id, '');
        }
      }
      function H$(n, t) {
        1 & n && ne(0, 'tr', 20);
      }
      function z$(n, t) {
        1 & n && ne(0, 'tr', 21);
      }
      (_n.ɵfac = function (t) {
        return new (t || _n)(C(Na), C(x_));
      }),
        (_n.ɵprov = I({ token: _n, factory: _n.ɵfac, providedIn: 'root' }));
      const j$ = function () {
        return [1, 5, 10, 15, 20];
      };
      class Fl {
        constructor(t, e) {
          (this.service = t),
            (this.router = e),
            (this.listadeClientes = []),
            (this.displayedColumns = [
              'id',
              'nome',
              'cpf',
              'telefone',
              'acoes',
            ]),
            (this.dataSource = new xr(this.listadeClientes));
        }
        ngAfterViewInit() {
          this.findAll();
        }
        findAll() {
          this.service.findAll().subscribe((t) => {
            (this.listadeClientes = t),
              (this.dataSource = new xr(this.listadeClientes)),
              (this.dataSource.paginator = this.paginator);
          });
        }
        navigate2Create() {
          this.router.navigate(['clientes/create']);
        }
      }
      function U$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaNome());
        }
      }
      function $$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaCpf());
        }
      }
      function G$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaTelefone());
        }
      }
      (Fl.ɵfac = function (t) {
        return new (t || Fl)(m(_n), m(We));
      }),
        (Fl.ɵcmp = W({
          type: Fl,
          selectors: [['app-cliente-read']],
          viewQuery: function (t, e) {
            if ((1 & t && Se(Cr, 5), 2 & t)) {
              let i;
              V((i = B())) && (e.paginator = i.first);
            }
          },
          decls: 27,
          vars: 5,
          consts: [
            [1, 'create'],
            [1, 'mat-elevation-z8', 'container'],
            ['mat-table', '', 3, 'dataSource'],
            ['matColumnDef', 'id'],
            ['mat-header-cell', '', 4, 'matHeaderCellDef'],
            ['mat-cell', '', 4, 'matCellDef'],
            ['matColumnDef', 'nome'],
            ['matColumnDef', 'cpf'],
            ['matColumnDef', 'telefone'],
            ['matColumnDef', 'acoes'],
            ['mat-header-row', '', 4, 'matHeaderRowDef'],
            ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
            [
              'showFirstLastButtons',
              '',
              'aria-label',
              'Sele\xe7\xe3o de um cliente',
              3,
              'pageSizeOptions',
            ],
            [1, 'fab-container'],
            [
              'mat-fab',
              '',
              'color',
              'warn',
              'aria-label',
              'Example icon button with a home icon',
              3,
              'click',
            ],
            ['mat-header-cell', ''],
            ['mat-cell', ''],
            [3, 'routerLink'],
            ['id', 'edit', 1, 'material-icons'],
            ['id', 'delete', 1, 'material-icons'],
            ['mat-header-row', ''],
            ['mat-row', ''],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'div', 0)(1, 'h1'),
              w(2, 'Clientes'),
              p()(),
              _(3, 'div', 1)(4, 'table', 2),
              Be(5, 3),
              E(6, T$, 2, 0, 'th', 4),
              E(7, I$, 2, 1, 'td', 5),
              He(),
              Be(8, 6),
              E(9, R$, 2, 0, 'th', 4),
              E(10, O$, 2, 1, 'td', 5),
              He(),
              Be(11, 7),
              E(12, F$, 2, 0, 'th', 4),
              E(13, P$, 2, 1, 'td', 5),
              He(),
              Be(14, 8),
              E(15, N$, 2, 0, 'th', 4),
              E(16, L$, 2, 1, 'td', 5),
              He(),
              Be(17, 9),
              E(18, V$, 2, 0, 'th', 4),
              E(19, B$, 7, 2, 'td', 5),
              He(),
              E(20, H$, 1, 0, 'tr', 10),
              E(21, z$, 1, 0, 'tr', 11),
              p(),
              ne(22, 'mat-paginator', 12),
              p(),
              _(23, 'div', 13)(24, 'button', 14),
              O('click', function () {
                return e.navigate2Create();
              }),
              _(25, 'mat-icon'),
              w(26, 'add'),
              p()()()),
              2 & t &&
                (b(4),
                D('dataSource', e.dataSource),
                b(16),
                D('matHeaderRowDef', e.displayedColumns),
                b(1),
                D('matRowDefColumns', e.displayedColumns),
                b(1),
                D('pageSizeOptions', Ms(4, j$)));
          },
          dependencies: [
            gr,
            nh,
            Eg,
            Cl,
            Ra,
            xl,
            Oa,
            Ia,
            Dl,
            Fa,
            Pa,
            Ml,
            El,
            Cr,
          ],
          styles: [
            '.container[_ngcontent-%COMP%]{width:86%;margin-left:auto;margin-right:auto}table[_ngcontent-%COMP%]{width:100%}.fab-container[_ngcontent-%COMP%]{inset:auto 10px 60px auto!important;position:fixed!important}.create[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:.2}#edit[_ngcontent-%COMP%]{color:#75d1e8;padding-right:1rem}#delete[_ngcontent-%COMP%]{color:red;padding-left:1rem}',
          ],
        }));
      class Pl {
        constructor(t, e) {
          (this.service = t),
            (this.router = e),
            (this.cliente = { nome: '', cpf: '', telefone: '' }),
            (this.nome = new rn('', [qt.minLength(5)])),
            (this.cpf = new rn('', [qt.minLength(11)])),
            (this.telefone = new rn('', [qt.minLength(11)]));
        }
        create() {
          this.service.create(this.cliente).subscribe(
            (t) => {
              this.router.navigate(['/clientes']),
                this.service.message('Cliente cadastrado com sucesso!');
            },
            (t) => {
              t.error.error.match('j\xe1 cadastrado')
                ? this.service.message(t.error.error)
                : t.error.listadeErros[0].messagemErro.match('(CPF)') &&
                  this.service.message('CPF inv\xe1lido!');
            }
          );
        }
        cancelaCadastro() {
          this.router.navigate(['/clientes']);
        }
        validaNome() {
          return (
            !!this.nome.invalid && 'O nome deve ter entre 5 e 100 caractecres'
          );
        }
        validaCpf() {
          return (
            !!this.cpf.invalid && 'O CPF deve ter entre 11 e 15 caracteres'
          );
        }
        validaTelefone() {
          return (
            !!this.telefone.invalid &&
            'O telefone deve ter entre 8 e 18 caractecres'
          );
        }
      }
      function W$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaNome());
        }
      }
      function Y$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaCpf());
        }
      }
      function q$(n, t) {
        if ((1 & n && (_(0, 'mat-error'), w(1), p()), 2 & n)) {
          const e = G();
          b(1), De(e.validaTelefone());
        }
      }
      (Pl.ɵfac = function (t) {
        return new (t || Pl)(m(_n), m(We));
      }),
        (Pl.ɵcmp = W({
          type: Pl,
          selectors: [['app-cliente-create']],
          decls: 22,
          vars: 10,
          consts: [
            [1, 'form', 'mat-elevation-z8'],
            [1, 'full-width'],
            [
              'required',
              '',
              'name',
              'nome',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              'Jo\xe3o Silva',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [4, 'ngIf'],
            [
              'required',
              '',
              'name',
              'cpf',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              '000.000.000-00',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [
              'required',
              '',
              'name',
              'cpf',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              '(00)99999-9999',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'accent',
              1,
              'mat-elevation-z8',
              3,
              'disabled',
              'click',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'form', 0)(1, 'h1'),
              w(2, 'Cadastrar um novo Cliente'),
              p(),
              _(3, 'mat-form-field', 1)(4, 'mat-label'),
              w(5, 'Nome'),
              p(),
              _(6, 'input', 2),
              O('ngModelChange', function (r) {
                return (e.cliente.nome = r);
              }),
              p(),
              E(7, U$, 2, 1, 'mat-error', 3),
              p(),
              _(8, 'mat-form-field', 1)(9, 'mat-label'),
              w(10, 'CPF'),
              p(),
              _(11, 'input', 4),
              O('ngModelChange', function (r) {
                return (e.cliente.cpf = r);
              }),
              p(),
              E(12, $$, 2, 1, 'mat-error', 3),
              p(),
              _(13, 'mat-form-field', 1)(14, 'mat-label'),
              w(15, 'Telefone'),
              p(),
              _(16, 'input', 5),
              O('ngModelChange', function (r) {
                return (e.cliente.telefone = r);
              }),
              p(),
              E(17, G$, 2, 1, 'mat-error', 3),
              p(),
              _(18, 'button', 6),
              O('click', function () {
                return e.create();
              }),
              w(19, ' CADASTRAR '),
              p(),
              _(20, 'button', 7),
              O('click', function () {
                return e.cancelaCadastro();
              }),
              w(21, ' CANCELAR '),
              p()()),
              2 & t &&
                (b(6),
                D('ngModel', e.cliente.nome)('formControl', e.nome),
                b(1),
                D('ngIf', e.nome.invalid),
                b(4),
                D('ngModel', e.cliente.cpf)('formControl', e.cpf),
                b(1),
                D('ngIf', e.cpf.invalid),
                b(4),
                D('ngModel', e.cliente.telefone)('formControl', e.telefone),
                b(1),
                D('ngIf', e.telefone.invalid),
                b(1),
                D(
                  'disabled',
                  e.validaNome() || e.validaCpf() || e.validaTelefone()
                ));
          },
          dependencies: [
            An,
            Zi,
            ei,
            Ki,
            Xi,
            co,
            Mi,
            pn,
            Sa,
            wi,
            qi,
            xi,
            Eu,
            Mr,
          ],
          styles: [
            '.form[_ngcontent-%COMP%]{width:40%;margin:auto;padding:4rem 2rem}h1[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:4rem}button[_ngcontent-%COMP%]{width:100%;margin-bottom:.2rem}.full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}',
          ],
        }));
      class Nl {
        constructor(t, e, i) {
          (this.service = t),
            (this.router = e),
            (this.route = i),
            (this.cliente = { nome: '', cpf: '', telefone: '' }),
            (this.nome = new rn('', [qt.minLength(5)])),
            (this.cpf = new rn('', [qt.minLength(11)])),
            (this.telefone = new rn('', [qt.minLength(11)]));
        }
        ngOnInit() {
          const t = Number(this.route.snapshot.paramMap.get('id'));
          this.service.findById(t).subscribe((e) => {
            this.cliente = e;
          });
        }
        update() {
          this.service.update(this.cliente).subscribe(
            (t) => {
              this.service.message(
                'Cadastro do Cliente Atualizado com Sucesso!'
              ),
                this.router.navigate(['/clientes']);
            },
            (t) => {
              t.error.error.match('j\xe1 cadastrado')
                ? this.service.message(t.error.error)
                : t.error.listadeErros[0].messagemErro.match('(CPF)') &&
                  this.service.message('CPF inv\xe1lido!');
            }
          );
        }
        cancelaCadastro() {
          this.router.navigate(['/clientes']);
        }
        validaNome() {
          return (
            !!this.nome.invalid && 'O nome deve ter entre 5 e 100 caractecres'
          );
        }
        validaCpf() {
          return (
            !!this.cpf.invalid && 'O CPF deve ter entre 11 e 15 caracteres'
          );
        }
        validaTelefone() {
          return (
            !!this.telefone.invalid &&
            'O telefone deve ter entre 8 e 18 caractecres'
          );
        }
      }
      (Nl.ɵfac = function (t) {
        return new (t || Nl)(m(_n), m(We), m(In));
      }),
        (Nl.ɵcmp = W({
          type: Nl,
          selectors: [['app-cliente-update']],
          decls: 22,
          vars: 10,
          consts: [
            [1, 'form', 'mat-elevation-z8'],
            [1, 'full-width'],
            [
              'required',
              '',
              'name',
              'nome',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              'Jo\xe3o Silva',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [4, 'ngIf'],
            [
              'required',
              '',
              'name',
              'cpf',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              '000.000.000-00',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [
              'required',
              '',
              'name',
              'cpf',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              '(00)99999-9999',
              3,
              'ngModel',
              'formControl',
              'ngModelChange',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'accent',
              1,
              'mat-elevation-z8',
              3,
              'disabled',
              'click',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'form', 0)(1, 'h1'),
              w(2, 'Atualiza o Cadastro do Cliente'),
              p(),
              _(3, 'mat-form-field', 1)(4, 'mat-label'),
              w(5, 'Nome'),
              p(),
              _(6, 'input', 2),
              O('ngModelChange', function (r) {
                return (e.cliente.nome = r);
              }),
              p(),
              E(7, W$, 2, 1, 'mat-error', 3),
              p(),
              _(8, 'mat-form-field', 1)(9, 'mat-label'),
              w(10, 'CPF'),
              p(),
              _(11, 'input', 4),
              O('ngModelChange', function (r) {
                return (e.cliente.cpf = r);
              }),
              p(),
              E(12, Y$, 2, 1, 'mat-error', 3),
              p(),
              _(13, 'mat-form-field', 1)(14, 'mat-label'),
              w(15, 'Telefone'),
              p(),
              _(16, 'input', 5),
              O('ngModelChange', function (r) {
                return (e.cliente.telefone = r);
              }),
              p(),
              E(17, q$, 2, 1, 'mat-error', 3),
              p(),
              _(18, 'button', 6),
              O('click', function () {
                return e.update();
              }),
              w(19, ' ATUALIZA CADASTRO '),
              p(),
              _(20, 'button', 7),
              O('click', function () {
                return e.cancelaCadastro();
              }),
              w(21, ' CANCELAR '),
              p()()),
              2 & t &&
                (b(6),
                D('ngModel', e.cliente.nome)('formControl', e.nome),
                b(1),
                D('ngIf', e.nome.invalid),
                b(4),
                D('ngModel', e.cliente.cpf)('formControl', e.cpf),
                b(1),
                D('ngIf', e.cpf.invalid),
                b(4),
                D('ngModel', e.cliente.telefone)('formControl', e.telefone),
                b(1),
                D('ngIf', e.telefone.invalid),
                b(1),
                D(
                  'disabled',
                  e.validaNome() || e.validaCpf() || e.validaTelefone()
                ));
          },
          dependencies: [
            An,
            Zi,
            ei,
            Ki,
            Xi,
            co,
            Mi,
            pn,
            Sa,
            wi,
            qi,
            xi,
            Eu,
            Mr,
          ],
          styles: [
            '.form[_ngcontent-%COMP%]{width:40%;margin:auto;padding:4rem 2rem}h1[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:4rem}button[_ngcontent-%COMP%]{width:100%;margin-bottom:.2rem}.full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}',
          ],
        }));
      class Ll {
        constructor(t, e, i) {
          (this.router = t),
            (this.service = e),
            (this.route = i),
            (this.cliente = { id: '', nome: '', cpf: '', telefone: '' });
        }
        ngOnInit() {
          let t = Number(this.route.snapshot.paramMap.get('id'));
          this.service.findById(t).subscribe((e) => {
            this.cliente = e;
          });
        }
        cancelaCadastro() {
          this.router.navigate(['/clientes']);
        }
        delete() {
          this.service.delete(this.cliente).subscribe(
            (t) => {
              this.router.navigate(['/clientes']),
                this.service.message('Cliente deletado com sucesso!');
            },
            (t) => {
              t.error.error.match('ordens de servi\xe7o')
                ? this.service.message(
                    'Cliente possui ordens de servi\xe7o pendentes.'
                  )
                : console.log(t);
            }
          );
        }
      }
      (Ll.ɵfac = function (t) {
        return new (t || Ll)(m(We), m(_n), m(In));
      }),
        (Ll.ɵcmp = W({
          type: Ll,
          selectors: [['app-cliente-delete']],
          decls: 19,
          vars: 3,
          consts: [
            [1, 'form', 'mat-elevation-z8'],
            [1, 'full-width'],
            [
              'disabled',
              '',
              'name',
              'nome',
              'maxlength',
              '100',
              'matInput',
              '',
              'placeholder',
              'Jo\xe3o Silva',
              3,
              'ngModel',
              'ngModelChange',
            ],
            [
              'disabled',
              '',
              'name',
              'cpf',
              'maxlength',
              '15',
              'matInput',
              '',
              'placeholder',
              '000.000.000-00',
              3,
              'ngModel',
              'ngModelChange',
            ],
            [
              'disabled',
              '',
              'name',
              'telefone',
              'maxlength',
              '18',
              'matInput',
              '',
              'placeholder',
              '(00)91234-5678',
              3,
              'ngModel',
              'ngModelChange',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'accent',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'form', 0)(1, 'h1'),
              w(2, 'Exclui o cadastro de um Cliente'),
              p(),
              _(3, 'mat-form-field', 1)(4, 'mat-label'),
              w(5, 'Nome'),
              p(),
              _(6, 'input', 2),
              O('ngModelChange', function (r) {
                return (e.cliente.nome = r);
              }),
              p()(),
              _(7, 'mat-form-field', 1)(8, 'mat-label'),
              w(9, 'CPF'),
              p(),
              _(10, 'input', 3),
              O('ngModelChange', function (r) {
                return (e.cliente.cpf = r);
              }),
              p()(),
              _(11, 'mat-form-field', 1)(12, 'mat-label'),
              w(13, 'Telefone'),
              p(),
              _(14, 'input', 4),
              O('ngModelChange', function (r) {
                return (e.cliente.telefone = r);
              }),
              p()(),
              _(15, 'button', 5),
              O('click', function () {
                return e.delete();
              }),
              w(16, 'EXCLUIR CLIENTE'),
              p(),
              _(17, 'button', 6),
              O('click', function () {
                return e.cancelaCadastro();
              }),
              w(18, 'CANCELAR'),
              p()()),
              2 & t &&
                (b(6),
                D('ngModel', e.cliente.nome),
                b(4),
                D('ngModel', e.cliente.cpf),
                b(4),
                D('ngModel', e.cliente.telefone));
          },
          dependencies: [Zi, ei, Ki, Xi, Mi, Ea, pn, wi, qi, xi, Mr],
          styles: [
            '.form[_ngcontent-%COMP%]{width:40%;margin:auto;padding:4rem 2rem}h1[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:4rem}button[_ngcontent-%COMP%]{width:100%;margin-bottom:.2rem}.full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}',
          ],
        }));
      class Ei {
        constructor(t, e) {
          (this.http = t), (this.snackBar = e), (this.baseUrl = g__baseUrl);
        }
        findAll() {
          return this.http.get(`${this.baseUrl}/ordens`);
        }
        findById(t) {
          return this.http.get(`${this.baseUrl}/ordens/${t}`);
        }
        create(t) {
          return this.http.post(`${this.baseUrl}/ordens`, t);
        }
        update(t) {
          return this.http.put(`${this.baseUrl}/ordens/${t.id}`, t);
        }
        delete(t) {
          return this.http.delete(`${this.baseUrl}/ordens/${t.id}`);
        }
        message(t) {
          this.snackBar.open(`${t}`, 'OK', {
            horizontalPosition: 'end',
            verticalPosition: 'top',
            duration: 4e3,
          });
        }
      }
      function K$(n, t) {
        1 & n && (_(0, 'th', 18), w(1, 'cliente'), p());
      }
      function X$(n, t) {
        if ((1 & n && (_(0, 'td', 19), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.idCliente);
        }
      }
      function Z$(n, t) {
        1 & n && (_(0, 'th', 18), w(1, 't\xe9cnico'), p());
      }
      function Q$(n, t) {
        if ((1 & n && (_(0, 'td', 19), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.idTecnico);
        }
      }
      function J$(n, t) {
        1 & n && (_(0, 'th', 18), w(1, 'abertura'), p());
      }
      function e6(n, t) {
        if ((1 & n && (_(0, 'td', 19), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.dataAbertura);
        }
      }
      function t6(n, t) {
        1 & n && (_(0, 'th', 18), w(1, 'fechamento'), p());
      }
      function n6(n, t) {
        if ((1 & n && (_(0, 'td', 19), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.dataFechamento);
        }
      }
      function r6(n, t) {
        1 & n && (_(0, 'th', 18), w(1, 'prioridade'), p());
      }
      function o6(n, t) {
        if ((1 & n && (_(0, 'td', 19), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          bf(G().prioridade(e.prioridade)), b(1), Ze(' ', e.prioridade, ' ');
        }
      }
      function a6(n, t) {
        1 & n && (_(0, 'th', 18), w(1, 'status'), p());
      }
      function s6(n, t) {
        if ((1 & n && (_(0, 'td', 19), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.status);
        }
      }
      function l6(n, t) {
        1 & n && (_(0, 'th', 18), w(1, 'a\xe7\xf5es'), p());
      }
      function c6(n, t) {
        if (
          (1 & n &&
            (_(0, 'td', 19)(1, 'a', 20)(2, 'i', 21),
            w(3, 'edit'),
            p()(),
            _(4, 'a', 20)(5, 'i', 22),
            w(6, 'visibility'),
            p()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          b(1),
            Gn('routerLink', 'update/', e.id, ''),
            b(3),
            Gn('routerLink', 'view/', e.id, '');
        }
      }
      function d6(n, t) {
        1 & n && ne(0, 'tr', 23);
      }
      function u6(n, t) {
        1 & n && ne(0, 'tr', 24);
      }
      (Ei.ɵfac = function (t) {
        return new (t || Ei)(C(Na), C(x_));
      }),
        (Ei.ɵprov = I({ token: Ei, factory: Ei.ɵfac, providedIn: 'root' }));
      const h6 = function () {
        return [1, 5, 10, 15, 20];
      };
      class Vl {
        constructor(t, e, i, r) {
          (this.ordemService = t),
            (this.router = e),
            (this.clienteService = i),
            (this.tecnicoService = r),
            (this.listadeOrdens = []),
            (this.displayedColumns = [
              'cliente',
              'tecnico',
              'abertura',
              'fechamento',
              'prioridade',
              'status',
              'acoes',
            ]),
            (this.dataSource = new xr(this.listadeOrdens));
        }
        ngAfterViewInit() {
          this.findAll();
        }
        findAll() {
          this.ordemService.findAll().subscribe(
            (t) => {
              t.forEach((e) => {
                'ENCERRADO' != e.status && this.listadeOrdens.push(e);
              }),
                this.listadeOrdens.forEach((e) => {
                  this.clienteService.findById(e.idCliente).subscribe(
                    (i) => {
                      e.idCliente = i.nome;
                    },
                    (i) => {
                      console.log(i);
                    }
                  ),
                    this.tecnicoService.findById(e.idTecnico).subscribe(
                      (i) => {
                        e.idTecnico = i.nome;
                      },
                      (i) => {
                        console.log(i);
                      }
                    );
                }),
                console.log(t),
                (this.dataSource = new xr(this.listadeOrdens)),
                (this.dataSource.paginator = this.paginator);
            },
            (t) => {
              console.log(t);
            }
          );
        }
        navigate2Create() {
          this.router.navigate(['ordens/create']);
        }
        prioridade(t) {
          switch (t) {
            case 'ALTA':
              return 'alta';
            case 'MEDIA':
              return 'media';
            default:
              return 'baixa';
          }
        }
      }
      function m6(n, t) {
        if ((1 & n && (_(0, 'mat-option', 13), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          Wr('value', e.id), b(1), De(e.nome);
        }
      }
      function f6(n, t) {
        if ((1 & n && (_(0, 'mat-option', 13), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          Wr('value', e.id), b(1), De(e.nome);
        }
      }
      (Vl.ɵfac = function (t) {
        return new (t || Vl)(m(Ei), m(We), m(_n), m(gn));
      }),
        (Vl.ɵcmp = W({
          type: Vl,
          selectors: [['app-ordem-read']],
          viewQuery: function (t, e) {
            if ((1 & t && Se(Cr, 5), 2 & t)) {
              let i;
              V((i = B())) && (e.paginator = i.first);
            }
          },
          decls: 33,
          vars: 5,
          consts: [
            [1, 'create'],
            [1, 'mat-elevation-z8', 'container'],
            ['mat-table', '', 3, 'dataSource'],
            ['matColumnDef', 'cliente'],
            ['mat-header-cell', '', 4, 'matHeaderCellDef'],
            ['mat-cell', '', 4, 'matCellDef'],
            ['matColumnDef', 'tecnico'],
            ['matColumnDef', 'abertura'],
            ['matColumnDef', 'fechamento'],
            ['matColumnDef', 'prioridade'],
            ['mat-cell', '', 3, 'class', 4, 'matCellDef'],
            ['matColumnDef', 'status'],
            ['matColumnDef', 'acoes'],
            ['mat-header-row', '', 4, 'matHeaderRowDef'],
            ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
            [
              'showFirstLastButtons',
              '',
              'aria-label',
              'Select page of periodic elements',
              3,
              'pageSizeOptions',
            ],
            [1, 'fab-container'],
            [
              'mat-fab',
              '',
              'color',
              'warn',
              'aria-label',
              'Example icon button with a home icon',
              3,
              'click',
            ],
            ['mat-header-cell', ''],
            ['mat-cell', ''],
            [3, 'routerLink'],
            ['id', 'edit', 1, 'material-icons'],
            ['id', 'view', 1, 'material-icons'],
            ['mat-header-row', ''],
            ['mat-row', ''],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'div', 0)(1, 'h1'),
              w(2, 'Ordens de Servi\xe7o'),
              p()(),
              _(3, 'div', 1)(4, 'table', 2),
              Be(5, 3),
              E(6, K$, 2, 0, 'th', 4),
              E(7, X$, 2, 1, 'td', 5),
              He(),
              Be(8, 6),
              E(9, Z$, 2, 0, 'th', 4),
              E(10, Q$, 2, 1, 'td', 5),
              He(),
              Be(11, 7),
              E(12, J$, 2, 0, 'th', 4),
              E(13, e6, 2, 1, 'td', 5),
              He(),
              Be(14, 8),
              E(15, t6, 2, 0, 'th', 4),
              E(16, n6, 2, 1, 'td', 5),
              He(),
              Be(17, 9),
              E(18, r6, 2, 0, 'th', 4),
              E(19, o6, 2, 4, 'td', 10),
              He(),
              Be(20, 11),
              E(21, a6, 2, 0, 'th', 4),
              E(22, s6, 2, 1, 'td', 5),
              He(),
              Be(23, 12),
              E(24, l6, 2, 0, 'th', 4),
              E(25, c6, 7, 2, 'td', 5),
              He(),
              E(26, d6, 1, 0, 'tr', 13),
              E(27, u6, 1, 0, 'tr', 14),
              p(),
              ne(28, 'mat-paginator', 15),
              p(),
              _(29, 'div', 16)(30, 'button', 17),
              O('click', function () {
                return e.navigate2Create();
              }),
              _(31, 'mat-icon'),
              w(32, 'add'),
              p()()()),
              2 & t &&
                (b(4),
                D('dataSource', e.dataSource),
                b(22),
                D('matHeaderRowDef', e.displayedColumns),
                b(1),
                D('matRowDefColumns', e.displayedColumns),
                b(1),
                D('pageSizeOptions', Ms(4, h6)));
          },
          dependencies: [
            gr,
            nh,
            Eg,
            Cl,
            Ra,
            xl,
            Oa,
            Ia,
            Dl,
            Fa,
            Pa,
            Ml,
            El,
            Cr,
          ],
          styles: [
            '.container[_ngcontent-%COMP%]{width:86%;margin-left:auto;margin-right:auto}table[_ngcontent-%COMP%]{width:100%}.fab-container[_ngcontent-%COMP%]{inset:auto 10px 60px auto!important;position:fixed!important}.create[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:.2}#edit[_ngcontent-%COMP%]{color:#75d1e8;padding-right:1rem}#delete[_ngcontent-%COMP%]{color:red;padding-left:1rem}td.baixa[_ngcontent-%COMP%]{color:green}td.media[_ngcontent-%COMP%]{color:#ff0}td.alta[_ngcontent-%COMP%]{color:red}',
          ],
        }));
      class Bl {
        constructor(t, e, i, r) {
          (this.tecnicoService = t),
            (this.clienteService = e),
            (this.service = i),
            (this.router = r),
            (this.ordem = {
              prioridade: '',
              observacoes: '',
              status: '',
              idTecnico: '',
              idCliente: '',
            }),
            (this.listadeTecnicos = []),
            (this.listadeClientes = []);
        }
        ngOnInit() {
          this.listaTecnicos(), this.listaClientes();
        }
        cancela() {
          this.router.navigate(['ordens']);
        }
        create() {
          this.service.create(this.ordem).subscribe(
            (t) => {
              this.service.message('Ordem criada com sucesso!'),
                this.router.navigate(['ordens']);
            },
            (t) => {
              this.service.message(t.error.listadeErros[0].messagemErro);
            }
          );
        }
        listaTecnicos() {
          this.tecnicoService.findAll().subscribe(
            (t) => {
              this.listadeTecnicos = t;
            },
            (t) => {
              console.log(t);
            }
          );
        }
        listaClientes() {
          this.clienteService.findAll().subscribe(
            (t) => {
              this.listadeClientes = t;
            },
            (t) => {
              console.log(t);
            }
          );
        }
      }
      function p6(n, t) {
        if ((1 & n && (_(0, 'mat-option', 13), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          Wr('value', e.id), b(1), De(e.nome);
        }
      }
      function g6(n, t) {
        if ((1 & n && (_(0, 'mat-option', 13), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          Wr('value', e.id), b(1), De(e.nome);
        }
      }
      (Bl.ɵfac = function (t) {
        return new (t || Bl)(m(gn), m(_n), m(Ei), m(We));
      }),
        (Bl.ɵcmp = W({
          type: Bl,
          selectors: [['app-ordem-create']],
          decls: 43,
          vars: 7,
          consts: [
            [1, 'container'],
            [1, 'labels'],
            ['appearance', 'fill'],
            [3, 'value', 'valueChange'],
            [3, 'value', 4, 'ngFor', 'ngForOf'],
            ['value', '0'],
            ['value', '1'],
            ['value', '2'],
            [1, 'form'],
            [1, 'full-width'],
            [
              'name',
              'observacoes',
              'matInput',
              '',
              'maxlength',
              '255',
              3,
              'ngModel',
              'ngModelChange',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'accent',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
            [3, 'value'],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'div', 0)(1, 'h1'),
              w(2, 'Criando uma Ordem de Servi\xe7o'),
              p(),
              _(3, 'div', 1)(4, 'mat-form-field', 2)(5, 'mat-label'),
              w(6, 'Selecione um t\xe9cnico'),
              p(),
              _(7, 'mat-select', 3),
              O('valueChange', function (r) {
                return (e.ordem.idTecnico = r);
              }),
              E(8, m6, 2, 2, 'mat-option', 4),
              p()(),
              _(9, 'mat-form-field', 2)(10, 'mat-label'),
              w(11, 'Selecione um cliente'),
              p(),
              _(12, 'mat-select', 3),
              O('valueChange', function (r) {
                return (e.ordem.idCliente = r);
              }),
              E(13, f6, 2, 2, 'mat-option', 4),
              p()(),
              _(14, 'mat-form-field', 2)(15, 'mat-label'),
              w(16, 'Selecione um status'),
              p(),
              _(17, 'mat-select', 3),
              O('valueChange', function (r) {
                return (e.ordem.status = r);
              }),
              _(18, 'mat-option', 5),
              w(19, 'ABERTO'),
              p(),
              _(20, 'mat-option', 6),
              w(21, 'EM ANDAMENTO'),
              p(),
              _(22, 'mat-option', 7),
              w(23, 'ENCERRADO'),
              p()()(),
              _(24, 'mat-form-field', 2)(25, 'mat-label'),
              w(26, 'Selecione uma prioridade'),
              p(),
              _(27, 'mat-select', 3),
              O('valueChange', function (r) {
                return (e.ordem.prioridade = r);
              }),
              _(28, 'mat-option', 5),
              w(29, 'BAIXA'),
              p(),
              _(30, 'mat-option', 6),
              w(31, 'M\xc9DIA'),
              p(),
              _(32, 'mat-option', 7),
              w(33, 'ALTA'),
              p()()()(),
              _(34, 'form', 8)(35, 'mat-form-field', 9)(36, 'mat-label'),
              w(37, 'Adicione uma observa\xe7\xe3o da ordem de servi\xe7o'),
              p(),
              _(38, 'textarea', 10),
              O('ngModelChange', function (r) {
                return (e.ordem.observacoes = r);
              }),
              p()()(),
              _(39, 'button', 11),
              O('click', function () {
                return e.create();
              }),
              w(40, ' Criar Ordem '),
              p(),
              _(41, 'button', 12),
              O('click', function () {
                return e.cancela();
              }),
              w(42, ' Cancelar '),
              p()()),
              2 & t &&
                (b(7),
                D('value', e.ordem.idTecnico),
                b(1),
                D('ngForOf', e.listadeTecnicos),
                b(4),
                D('value', e.ordem.idCliente),
                b(1),
                D('ngForOf', e.listadeClientes),
                b(4),
                D('value', e.ordem.status),
                b(10),
                D('value', e.ordem.prioridade),
                b(11),
                D('ngModel', e.ordem.observacoes));
          },
          dependencies: [
            Ad,
            Zi,
            ei,
            Ki,
            Xi,
            Mi,
            Ea,
            pn,
            wi,
            qi,
            xi,
            o_,
            bu,
            Mr,
          ],
          styles: [
            'textarea[_ngcontent-%COMP%]{min-height:4rem;max-height:20rem}.full-width[_ngcontent-%COMP%]{width:100%}.container[_ngcontent-%COMP%]{width:70%;margin:auto}.labels[_ngcontent-%COMP%]{display:flex;justify-content:space-between}button[_ngcontent-%COMP%]{width:100%;margin-bottom:.5rem}h1[_ngcontent-%COMP%]{text-align:center;margin-bottom:4rem}',
          ],
        }));
      class Hl {
        constructor(t, e, i, r, o) {
          (this.tecnicoService = t),
            (this.clienteService = e),
            (this.service = i),
            (this.router = r),
            (this.route = o),
            (this.ordem = {
              prioridade: '',
              observacoes: '',
              status: '',
              idTecnico: '',
              idCliente: '',
            }),
            (this.listadeTecnicos = []),
            (this.listadeClientes = []);
        }
        ngOnInit() {
          this.listaTecnicos(), this.listaClientes();
          let t = Number(this.route.snapshot.paramMap.get('id'));
          this.service.findById(t).subscribe((e) => {
            console.log(e), (this.ordem = e), this.converteStatusePrioridade();
          });
        }
        cancela() {
          this.router.navigate(['ordens']);
        }
        update() {
          this.service.update(this.ordem).subscribe(
            (t) => {
              this.service.message('Ordem atualizada com sucesso!'),
                this.router.navigate(['ordens']);
            },
            (t) => {
              console.log(t);
            }
          );
        }
        listaTecnicos() {
          this.tecnicoService.findAll().subscribe(
            (t) => {
              this.listadeTecnicos = t;
            },
            (t) => {
              console.log(t);
            }
          );
        }
        listaClientes() {
          this.clienteService.findAll().subscribe(
            (t) => {
              this.listadeClientes = t;
            },
            (t) => {
              console.log(t);
            }
          );
        }
        converteStatusePrioridade() {
          'ABERTO' == this.ordem.status
            ? (this.ordem.status = '0')
            : 'ANDAMENTO' == this.ordem.status
            ? (this.ordem.status = '1')
            : 'ENCERRADO' == this.ordem.status && (this.ordem.status = '2'),
            'BAIXA' == this.ordem.prioridade
              ? (this.ordem.prioridade = '0')
              : 'MEDIA' == this.ordem.prioridade
              ? (this.ordem.prioridade = '1')
              : 'ALTA' == this.ordem.prioridade &&
                (this.ordem.prioridade = '2'),
            (this.ordem.idCliente = this.ordem.idCliente.toString()),
            (this.ordem.idTecnico = this.ordem.idTecnico.toString());
        }
      }
      (Hl.ɵfac = function (t) {
        return new (t || Hl)(m(gn), m(_n), m(Ei), m(We), m(In));
      }),
        (Hl.ɵcmp = W({
          type: Hl,
          selectors: [['app-ordem-update']],
          decls: 43,
          vars: 7,
          consts: [
            [1, 'container'],
            [1, 'labels'],
            ['appearance', 'fill'],
            [3, 'value', 'valueChange'],
            [3, 'value', 4, 'ngFor', 'ngForOf'],
            ['value', '0'],
            ['value', '1'],
            ['value', '2'],
            [1, 'form'],
            [1, 'full-width'],
            [
              'name',
              'observacoes',
              'matInput',
              '',
              'maxlength',
              '255',
              3,
              'ngModel',
              'ngModelChange',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'accent',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
            [3, 'value'],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'div', 0)(1, 'h1'),
              w(2, 'Atualiza uma Ordem de Servi\xe7o'),
              p(),
              _(3, 'div', 1)(4, 'mat-form-field', 2)(5, 'mat-label'),
              w(6, 'Selecione um t\xe9cnico'),
              p(),
              _(7, 'mat-select', 3),
              O('valueChange', function (r) {
                return (e.ordem.idTecnico = r);
              }),
              E(8, p6, 2, 2, 'mat-option', 4),
              p()(),
              _(9, 'mat-form-field', 2)(10, 'mat-label'),
              w(11, 'Selecione um cliente'),
              p(),
              _(12, 'mat-select', 3),
              O('valueChange', function (r) {
                return (e.ordem.idCliente = r);
              }),
              E(13, g6, 2, 2, 'mat-option', 4),
              p()(),
              _(14, 'mat-form-field', 2)(15, 'mat-label'),
              w(16, 'Selecione um status'),
              p(),
              _(17, 'mat-select', 3),
              O('valueChange', function (r) {
                return (e.ordem.status = r);
              }),
              _(18, 'mat-option', 5),
              w(19, 'ABERTO'),
              p(),
              _(20, 'mat-option', 6),
              w(21, 'EM ANDAMENTO'),
              p(),
              _(22, 'mat-option', 7),
              w(23, 'ENCERRADO'),
              p()()(),
              _(24, 'mat-form-field', 2)(25, 'mat-label'),
              w(26, 'Selecione uma prioridade'),
              p(),
              _(27, 'mat-select', 3),
              O('valueChange', function (r) {
                return (e.ordem.prioridade = r);
              }),
              _(28, 'mat-option', 5),
              w(29, 'BAIXA'),
              p(),
              _(30, 'mat-option', 6),
              w(31, 'M\xc9DIA'),
              p(),
              _(32, 'mat-option', 7),
              w(33, 'ALTA'),
              p()()()(),
              _(34, 'form', 8)(35, 'mat-form-field', 9)(36, 'mat-label'),
              w(37, 'Adicione uma observa\xe7\xe3o da ordem de servi\xe7o'),
              p(),
              _(38, 'textarea', 10),
              O('ngModelChange', function (r) {
                return (e.ordem.observacoes = r);
              }),
              p()()(),
              _(39, 'button', 11),
              O('click', function () {
                return e.update();
              }),
              w(40, ' Atualiza Ordem '),
              p(),
              _(41, 'button', 12),
              O('click', function () {
                return e.cancela();
              }),
              w(42, ' Cancelar '),
              p()()),
              2 & t &&
                (b(7),
                D('value', e.ordem.idTecnico),
                b(1),
                D('ngForOf', e.listadeTecnicos),
                b(4),
                D('value', e.ordem.idCliente),
                b(1),
                D('ngForOf', e.listadeClientes),
                b(4),
                D('value', e.ordem.status),
                b(10),
                D('value', e.ordem.prioridade),
                b(11),
                D('ngModel', e.ordem.observacoes));
          },
          dependencies: [
            Ad,
            Zi,
            ei,
            Ki,
            Xi,
            Mi,
            Ea,
            pn,
            wi,
            qi,
            xi,
            o_,
            bu,
            Mr,
          ],
          styles: [
            'textarea[_ngcontent-%COMP%]{min-height:4rem;max-height:20rem}.full-width[_ngcontent-%COMP%]{width:100%}.container[_ngcontent-%COMP%]{width:70%;margin:auto}.labels[_ngcontent-%COMP%]{display:flex;justify-content:space-between}button[_ngcontent-%COMP%]{width:100%;margin-bottom:.5rem}h1[_ngcontent-%COMP%]{text-align:center;margin-bottom:4rem}',
          ],
        }));
      class zl {
        constructor(t, e, i) {
          (this.route = t),
            (this.service = e),
            (this.router = i),
            (this.ordem = {
              idTecnico: '',
              idCliente: '',
              observacoes: '',
              prioridade: '',
              status: '',
            });
        }
        ngOnInit() {
          (this.ordem.id = this.route.snapshot.paramMap.get('id')),
            this.findById();
        }
        findById() {
          this.service.findById(this.ordem.id).subscribe((t) => {
            this.ordem = t;
          });
        }
        volta() {
          this.router.navigate(['ordens']);
        }
      }
      function _6(n, t) {
        1 & n && (_(0, 'th', 16), w(1, 'cliente'), p());
      }
      function v6(n, t) {
        if ((1 & n && (_(0, 'td', 17), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.idCliente);
        }
      }
      function b6(n, t) {
        1 & n && (_(0, 'th', 16), w(1, 't\xe9cnico'), p());
      }
      function y6(n, t) {
        if ((1 & n && (_(0, 'td', 17), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.idTecnico);
        }
      }
      function w6(n, t) {
        1 & n && (_(0, 'th', 16), w(1, 'abertura'), p());
      }
      function C6(n, t) {
        if ((1 & n && (_(0, 'td', 17), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.dataAbertura);
        }
      }
      function x6(n, t) {
        1 & n && (_(0, 'th', 16), w(1, 'fechamento'), p());
      }
      function D6(n, t) {
        if ((1 & n && (_(0, 'td', 17), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.dataFechamento);
        }
      }
      function M6(n, t) {
        1 & n && (_(0, 'th', 16), w(1, 'prioridade'), p());
      }
      function E6(n, t) {
        if ((1 & n && (_(0, 'td', 17), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          bf(G().prioridade(e.prioridade)), b(1), Ze(' ', e.prioridade, ' ');
        }
      }
      function S6(n, t) {
        1 & n && (_(0, 'th', 16), w(1, 'status'), p());
      }
      function k6(n, t) {
        if ((1 & n && (_(0, 'td', 17), w(1), p()), 2 & n)) {
          const e = t.$implicit;
          b(1), De(e.status);
        }
      }
      function A6(n, t) {
        1 & n && (_(0, 'th', 16), w(1, 'a\xe7\xf5es'), p());
      }
      function T6(n, t) {
        if (
          (1 & n &&
            (_(0, 'td', 17)(1, 'a', 18)(2, 'i', 19),
            w(3, 'edit'),
            p()(),
            _(4, 'a', 18)(5, 'i', 20),
            w(6, 'visibility'),
            p()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          b(1),
            Gn('routerLink', '../update/', e.id, ''),
            b(3),
            Gn('routerLink', '../view/', e.id, '');
        }
      }
      function I6(n, t) {
        1 & n && ne(0, 'tr', 21);
      }
      function R6(n, t) {
        1 & n && ne(0, 'tr', 22);
      }
      (zl.ɵfac = function (t) {
        return new (t || zl)(m(In), m(Ei), m(We));
      }),
        (zl.ɵcmp = W({
          type: zl,
          selectors: [['app-ordem-view']],
          decls: 10,
          vars: 2,
          consts: [
            [1, 'container'],
            [1, 'mat-elevation-z8'],
            ['id', 'abertura'],
            [
              'mat-stroked-button',
              '',
              'color',
              'warn',
              1,
              'mat-elevation-z8',
              3,
              'click',
            ],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'div', 0)(1, 'h1'),
              w(2, 'Observa\xe7\xf5es da Ordem de Servi\xe7o'),
              p(),
              _(3, 'mat-card', 1)(4, 'p', 2),
              w(5),
              p(),
              _(6, 'p'),
              w(7),
              p()(),
              _(8, 'button', 3),
              O('click', function () {
                return e.volta();
              }),
              w(9, ' Voltar '),
              p()()),
              2 & t &&
                (b(5),
                Ze('Data de abertura: ', e.ordem.dataAbertura, ''),
                b(2),
                De(e.ordem.observacoes));
          },
          dependencies: [wi, Dg],
          styles: [
            '.container[_ngcontent-%COMP%]{width:70%;margin:auto}h1[_ngcontent-%COMP%]{text-align:center}#abertura[_ngcontent-%COMP%]{text-align:end}button[_ngcontent-%COMP%]{width:100%;margin-top:.5%}',
          ],
        }));
      const O6 = function () {
        return [1, 5, 10, 15, 20];
      };
      class jl {
        constructor(t, e, i, r) {
          (this.ordemService = t),
            (this.router = e),
            (this.clienteService = i),
            (this.tecnicoService = r),
            (this.listadeOrdens = []),
            (this.displayedColumns = [
              'cliente',
              'tecnico',
              'abertura',
              'fechamento',
              'prioridade',
              'status',
              'acoes',
            ]),
            (this.dataSource = new xr(this.listadeOrdens));
        }
        ngAfterViewInit() {
          this.findAll();
        }
        findAll() {
          this.ordemService.findAll().subscribe(
            (t) => {
              t.forEach((e) => {
                'ENCERRADO' == e.status && this.listadeOrdens.push(e);
              }),
                this.listadeOrdens.forEach((e) => {
                  this.clienteService.findById(e.idCliente).subscribe(
                    (i) => {
                      e.idCliente = i.nome;
                    },
                    (i) => {
                      console.log(i);
                    }
                  ),
                    this.tecnicoService.findById(e.idTecnico).subscribe(
                      (i) => {
                        e.idTecnico = i.nome;
                      },
                      (i) => {
                        console.log(i);
                      }
                    );
                }),
                console.log(t),
                (this.dataSource = new xr(this.listadeOrdens)),
                (this.dataSource.paginator = this.paginator);
            },
            (t) => {
              console.log(t);
            }
          );
        }
        prioridade(t) {
          switch (t) {
            case 'ALTA':
              return 'alta';
            case 'MEDIA':
              return 'media';
            default:
              return 'baixa';
          }
        }
      }
      (jl.ɵfac = function (t) {
        return new (t || jl)(m(Ei), m(We), m(_n), m(gn));
      }),
        (jl.ɵcmp = W({
          type: jl,
          selectors: [['app-ordem-closed']],
          viewQuery: function (t, e) {
            if ((1 & t && Se(Cr, 5), 2 & t)) {
              let i;
              V((i = B())) && (e.paginator = i.first);
            }
          },
          decls: 29,
          vars: 5,
          consts: [
            [1, 'create'],
            [1, 'mat-elevation-z8', 'container'],
            ['mat-table', '', 3, 'dataSource'],
            ['matColumnDef', 'cliente'],
            ['mat-header-cell', '', 4, 'matHeaderCellDef'],
            ['mat-cell', '', 4, 'matCellDef'],
            ['matColumnDef', 'tecnico'],
            ['matColumnDef', 'abertura'],
            ['matColumnDef', 'fechamento'],
            ['matColumnDef', 'prioridade'],
            ['mat-cell', '', 3, 'class', 4, 'matCellDef'],
            ['matColumnDef', 'status'],
            ['matColumnDef', 'acoes'],
            ['mat-header-row', '', 4, 'matHeaderRowDef'],
            ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
            [
              'showFirstLastButtons',
              '',
              'aria-label',
              'Select page of periodic elements',
              3,
              'pageSizeOptions',
            ],
            ['mat-header-cell', ''],
            ['mat-cell', ''],
            [3, 'routerLink'],
            ['id', 'edit', 1, 'material-icons'],
            ['id', 'view', 1, 'material-icons'],
            ['mat-header-row', ''],
            ['mat-row', ''],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'div', 0)(1, 'h1'),
              w(2, 'Ordens Encerradas'),
              p()(),
              _(3, 'div', 1)(4, 'table', 2),
              Be(5, 3),
              E(6, _6, 2, 0, 'th', 4),
              E(7, v6, 2, 1, 'td', 5),
              He(),
              Be(8, 6),
              E(9, b6, 2, 0, 'th', 4),
              E(10, y6, 2, 1, 'td', 5),
              He(),
              Be(11, 7),
              E(12, w6, 2, 0, 'th', 4),
              E(13, C6, 2, 1, 'td', 5),
              He(),
              Be(14, 8),
              E(15, x6, 2, 0, 'th', 4),
              E(16, D6, 2, 1, 'td', 5),
              He(),
              Be(17, 9),
              E(18, M6, 2, 0, 'th', 4),
              E(19, E6, 2, 4, 'td', 10),
              He(),
              Be(20, 11),
              E(21, S6, 2, 0, 'th', 4),
              E(22, k6, 2, 1, 'td', 5),
              He(),
              Be(23, 12),
              E(24, A6, 2, 0, 'th', 4),
              E(25, T6, 7, 2, 'td', 5),
              He(),
              E(26, I6, 1, 0, 'tr', 13),
              E(27, R6, 1, 0, 'tr', 14),
              p(),
              ne(28, 'mat-paginator', 15),
              p()),
              2 & t &&
                (b(4),
                D('dataSource', e.dataSource),
                b(22),
                D('matHeaderRowDef', e.displayedColumns),
                b(1),
                D('matRowDefColumns', e.displayedColumns),
                b(1),
                D('pageSizeOptions', Ms(4, O6)));
          },
          dependencies: [gr, Cl, Ra, xl, Oa, Ia, Dl, Fa, Pa, Ml, El, Cr],
          styles: [
            '.container[_ngcontent-%COMP%]{width:86%;margin-left:auto;margin-right:auto}table[_ngcontent-%COMP%]{width:100%}.fab-container[_ngcontent-%COMP%]{inset:auto 10px 60px auto!important;position:fixed!important}.create[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:.2}#edit[_ngcontent-%COMP%]{color:#75d1e8;padding-right:1rem}#delete[_ngcontent-%COMP%]{color:red;padding-left:1rem}td.baixa[_ngcontent-%COMP%]{color:green}td.media[_ngcontent-%COMP%]{color:#ff0}td.alta[_ngcontent-%COMP%]{color:red}',
          ],
        }));
      const F6 = [
        { path: '', component: ll },
        { path: 'tecnicos', component: Tl },
        { path: 'tecnicos/create', component: Il },
        { path: 'tecnicos/update/:id', component: Rl },
        { path: 'tecnicos/delete/:id', component: Ol },
        { path: 'clientes', component: Fl },
        { path: 'clientes/create', component: Pl },
        { path: 'clientes/update/:id', component: Nl },
        { path: 'clientes/delete/:id', component: Ll },
        { path: 'ordens', component: Vl },
        { path: 'ordens/create', component: Bl },
        { path: 'ordens/update/:id', component: Hl },
        { path: 'ordens/view/:id', component: zl },
        { path: 'ordens/closed', component: jl },
      ];
      class ho {}
      (ho.ɵfac = function (t) {
        return new (t || ho)();
      }),
        (ho.ɵmod = he({ type: ho })),
        (ho.ɵinj = de({ imports: [lM.forRoot(F6), lM] }));
      const P6 = ['*', [['mat-toolbar-row']]],
        N6 = ['*', 'mat-toolbar-row'],
        L6 = Cg(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          }
        );
      let V6 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['mat-toolbar-row']],
              hostAttrs: [1, 'mat-toolbar-row'],
              exportAs: ['matToolbarRow'],
            })),
            n
          );
        })(),
        pk = (() => {
          class n extends L6 {
            constructor(e, i, r) {
              super(e), (this._platform = i), (this._document = r);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() =>
                  this._checkToolbarMixedModes()
                ));
            }
            _checkToolbarMixedModes() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(je), m(oe));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-toolbar']],
              contentQueries: function (e, i, r) {
                if ((1 & e && Me(r, V6, 5), 2 & e)) {
                  let o;
                  V((o = B())) && (i._toolbarRows = o);
                }
              },
              hostAttrs: [1, 'mat-toolbar'],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  be('mat-toolbar-multiple-rows', i._toolbarRows.length > 0)(
                    'mat-toolbar-single-row',
                    0 === i._toolbarRows.length
                  );
              },
              inputs: { color: 'color' },
              exportAs: ['matToolbar'],
              features: [F],
              ngContentSelectors: N6,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (Xe(P6), Y(0), Y(1, 1));
              },
              styles: [
                '.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        B6 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, Ae] })),
            n
          );
        })();
      class Ul {}
      (Ul.ɵfac = function (t) {
        return new (t || Ul)();
      }),
        (Ul.ɵcmp = W({
          type: Ul,
          selectors: [['app-header']],
          decls: 3,
          vars: 0,
          consts: [
            [1, 'header', 'mat-elevation-z8'],
            [1, 'mat-elevation-z8'],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'mat-toolbar', 0)(1, 'h1', 1), w(2, 'OS System'), p()());
          },
          dependencies: [pk],
          styles: [
            '.header[_ngcontent-%COMP%]{height:10%;display:flex;align-items:center;justify-content:center}h1[_ngcontent-%COMP%]{border:1px solid rgb(68,67,67);padding:.4rem 15%;border-radius:5px}',
          ],
        }));
      class $l {}
      ($l.ɵfac = function (t) {
        return new (t || $l)();
      }),
        ($l.ɵcmp = W({
          type: $l,
          selectors: [['app-footer']],
          decls: 3,
          vars: 0,
          consts: [
            [1, 'footer'],
            [1, 'mat-elevation-z8'],
          ],
          template: function (t, e) {
            1 & t &&
              (_(0, 'mat-toolbar', 0)(1, 'p', 1),
              w(2, 'By Andrei Patriota'),
              p()());
          },
          dependencies: [pk],
          styles: [
            '.footer[_ngcontent-%COMP%]{height:7%;position:fixed;bottom:0;display:flex;align-items:center;justify-content:center}p[_ngcontent-%COMP%]{color:#8d8b8b;margin:0;font-size:1rem;border:1px solid rgb(58,57,57);padding:0 8%;border-radius:20px}',
          ],
        }));
      const gk = ['*'],
        H6 = ['content'];
      function z6(n, t) {
        if (1 & n) {
          const e = ui();
          _(0, 'div', 2),
            O('click', function () {
              return Zt(e), Qt(G()._onBackdropClicked());
            }),
            p();
        }
        2 & n && be('mat-drawer-shown', G()._isShowingBackdrop());
      }
      function j6(n, t) {
        1 & n && (_(0, 'mat-drawer-content'), Y(1, 2), p());
      }
      const U6 = [[['mat-drawer']], [['mat-drawer-content']], '*'],
        $6 = ['mat-drawer', 'mat-drawer-content', '*'],
        G6 = {
          transformDrawer: Ci('transform', [
            On(
              'open, open-instant',
              Ye({ transform: 'none', visibility: 'visible' })
            ),
            On('void', Ye({ 'box-shadow': 'none', visibility: 'hidden' })),
            At('void => open-instant', Vt('0ms')),
            At(
              'void <=> open, open-instant => void',
              Vt('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')
            ),
          ]),
        },
        W6 = new A('MAT_DRAWER_DEFAULT_AUTOSIZE', {
          providedIn: 'root',
          factory: function Y6() {
            return !1;
          },
        }),
        _k = new A('MAT_DRAWER_CONTAINER');
      let D_ = (() => {
          class n extends ul {
            constructor(e, i, r, o, a) {
              super(r, o, a),
                (this._changeDetectorRef = e),
                (this._container = i);
            }
            ngAfterContentInit() {
              this._container._contentMarginChanges.subscribe(() => {
                this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(mt), m(Pe(() => bk)), m(j), m(Ca), m(U));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-drawer-content']],
              hostAttrs: [1, 'mat-drawer-content'],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  hi('margin-left', i._container._contentMargins.left, 'px')(
                    'margin-right',
                    i._container._contentMargins.right,
                    'px'
                  );
              },
              features: [X([{ provide: ul, useExisting: n }]), F],
              ngContentSelectors: gk,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Xe(), Y(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        vk = (() => {
          class n {
            get position() {
              return this._position;
            }
            set position(e) {
              (e = 'end' === e ? 'end' : 'start') !== this._position &&
                (this._isAttached && this._updatePositionInParent(e),
                (this._position = e),
                this.onPositionChanged.emit());
            }
            get mode() {
              return this._mode;
            }
            set mode(e) {
              (this._mode = e),
                this._updateFocusTrapState(),
                this._modeChanged.next();
            }
            get disableClose() {
              return this._disableClose;
            }
            set disableClose(e) {
              this._disableClose = ce(e);
            }
            get autoFocus() {
              return (
                this._autoFocus ??
                ('side' === this.mode ? 'dialog' : 'first-tabbable')
              );
            }
            set autoFocus(e) {
              ('true' === e || 'false' === e || null == e) && (e = ce(e)),
                (this._autoFocus = e);
            }
            get opened() {
              return this._opened;
            }
            set opened(e) {
              this.toggle(ce(e));
            }
            constructor(e, i, r, o, a, s, l, c) {
              (this._elementRef = e),
                (this._focusTrapFactory = i),
                (this._focusMonitor = r),
                (this._platform = o),
                (this._ngZone = a),
                (this._interactivityChecker = s),
                (this._doc = l),
                (this._container = c),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._enableAnimations = !1),
                (this._position = 'start'),
                (this._mode = 'over'),
                (this._disableClose = !1),
                (this._opened = !1),
                (this._animationStarted = new z()),
                (this._animationEnd = new z()),
                (this._animationState = 'void'),
                (this.openedChange = new re(!0)),
                (this._openedStream = this.openedChange.pipe(
                  Qe((d) => d),
                  q(() => {})
                )),
                (this.openedStart = this._animationStarted.pipe(
                  Qe(
                    (d) =>
                      d.fromState !== d.toState &&
                      0 === d.toState.indexOf('open')
                  ),
                  Ld(void 0)
                )),
                (this._closedStream = this.openedChange.pipe(
                  Qe((d) => !d),
                  q(() => {})
                )),
                (this.closedStart = this._animationStarted.pipe(
                  Qe((d) => d.fromState !== d.toState && 'void' === d.toState),
                  Ld(void 0)
                )),
                (this._destroyed = new z()),
                (this.onPositionChanged = new re()),
                (this._modeChanged = new z()),
                this.openedChange.subscribe((d) => {
                  d
                    ? (this._doc &&
                        (this._elementFocusedBeforeDrawerWasOpened =
                          this._doc.activeElement),
                      this._takeFocus())
                    : this._isFocusWithinDrawer() &&
                      this._restoreFocus(this._openedVia || 'program');
                }),
                this._ngZone.runOutsideAngular(() => {
                  cl(this._elementRef.nativeElement, 'keydown')
                    .pipe(
                      Qe(
                        (d) => 27 === d.keyCode && !this.disableClose && !Zn(d)
                      ),
                      me(this._destroyed)
                    )
                    .subscribe((d) =>
                      this._ngZone.run(() => {
                        this.close(), d.stopPropagation(), d.preventDefault();
                      })
                    );
                }),
                this._animationEnd
                  .pipe(
                    hg(
                      (d, u) =>
                        d.fromState === u.fromState && d.toState === u.toState
                    )
                  )
                  .subscribe((d) => {
                    const { fromState: u, toState: h } = d;
                    ((0 === h.indexOf('open') && 'void' === u) ||
                      ('void' === h && 0 === u.indexOf('open'))) &&
                      this.openedChange.emit(this._opened);
                  });
            }
            _forceFocus(e, i) {
              this._interactivityChecker.isFocusable(e) ||
                ((e.tabIndex = -1),
                this._ngZone.runOutsideAngular(() => {
                  const r = () => {
                    e.removeEventListener('blur', r),
                      e.removeEventListener('mousedown', r),
                      e.removeAttribute('tabindex');
                  };
                  e.addEventListener('blur', r),
                    e.addEventListener('mousedown', r);
                })),
                e.focus(i);
            }
            _focusByCssSelector(e, i) {
              let r = this._elementRef.nativeElement.querySelector(e);
              r && this._forceFocus(r, i);
            }
            _takeFocus() {
              if (!this._focusTrap) return;
              const e = this._elementRef.nativeElement;
              switch (this.autoFocus) {
                case !1:
                case 'dialog':
                  return;
                case !0:
                case 'first-tabbable':
                  this._focusTrap.focusInitialElementWhenReady().then((i) => {
                    !i &&
                      'function' ==
                        typeof this._elementRef.nativeElement.focus &&
                      e.focus();
                  });
                  break;
                case 'first-heading':
                  this._focusByCssSelector(
                    'h1, h2, h3, h4, h5, h6, [role="heading"]'
                  );
                  break;
                default:
                  this._focusByCssSelector(this.autoFocus);
              }
            }
            _restoreFocus(e) {
              'dialog' !== this.autoFocus &&
                (this._elementFocusedBeforeDrawerWasOpened
                  ? this._focusMonitor.focusVia(
                      this._elementFocusedBeforeDrawerWasOpened,
                      e
                    )
                  : this._elementRef.nativeElement.blur(),
                (this._elementFocusedBeforeDrawerWasOpened = null));
            }
            _isFocusWithinDrawer() {
              const e = this._doc.activeElement;
              return !!e && this._elementRef.nativeElement.contains(e);
            }
            ngAfterViewInit() {
              (this._isAttached = !0),
                (this._focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement
                )),
                this._updateFocusTrapState(),
                'end' === this._position && this._updatePositionInParent('end');
            }
            ngAfterContentChecked() {
              this._platform.isBrowser && (this._enableAnimations = !0);
            }
            ngOnDestroy() {
              this._focusTrap && this._focusTrap.destroy(),
                this._anchor?.remove(),
                (this._anchor = null),
                this._animationStarted.complete(),
                this._animationEnd.complete(),
                this._modeChanged.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open(e) {
              return this.toggle(!0, e);
            }
            close() {
              return this.toggle(!1);
            }
            _closeViaBackdropClick() {
              return this._setOpen(!1, !0, 'mouse');
            }
            toggle(e = !this.opened, i) {
              e && i && (this._openedVia = i);
              const r = this._setOpen(
                e,
                !e && this._isFocusWithinDrawer(),
                this._openedVia || 'program'
              );
              return e || (this._openedVia = null), r;
            }
            _setOpen(e, i, r) {
              return (
                (this._opened = e),
                e
                  ? (this._animationState = this._enableAnimations
                      ? 'open'
                      : 'open-instant')
                  : ((this._animationState = 'void'),
                    i && this._restoreFocus(r)),
                this._updateFocusTrapState(),
                new Promise((o) => {
                  this.openedChange
                    .pipe(ot(1))
                    .subscribe((a) => o(a ? 'open' : 'close'));
                })
              );
            }
            _getWidth() {
              return (
                (this._elementRef.nativeElement &&
                  this._elementRef.nativeElement.offsetWidth) ||
                0
              );
            }
            _updateFocusTrapState() {
              this._focusTrap &&
                (this._focusTrap.enabled = this.opened && 'side' !== this.mode);
            }
            _updatePositionInParent(e) {
              const i = this._elementRef.nativeElement,
                r = i.parentNode;
              'end' === e
                ? (this._anchor ||
                    ((this._anchor =
                      this._doc.createComment('mat-drawer-anchor')),
                    r.insertBefore(this._anchor, i)),
                  r.appendChild(i))
                : this._anchor &&
                  this._anchor.parentNode.insertBefore(i, this._anchor);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(j),
                m(u4),
                m(ol),
                m(je),
                m(U),
                m(DM),
                m(oe, 8),
                m(_k, 8)
              );
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-drawer']],
              viewQuery: function (e, i) {
                if ((1 & e && Se(H6, 5), 2 & e)) {
                  let r;
                  V((r = B())) && (i._content = r.first);
                }
              },
              hostAttrs: ['tabIndex', '-1', 1, 'mat-drawer'],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  Jc('@transform.start', function (o) {
                    return i._animationStarted.next(o);
                  })('@transform.done', function (o) {
                    return i._animationEnd.next(o);
                  }),
                  2 & e &&
                    (ve('align', null),
                    nd('@transform', i._animationState),
                    be('mat-drawer-end', 'end' === i.position)(
                      'mat-drawer-over',
                      'over' === i.mode
                    )('mat-drawer-push', 'push' === i.mode)(
                      'mat-drawer-side',
                      'side' === i.mode
                    )('mat-drawer-opened', i.opened));
              },
              inputs: {
                position: 'position',
                mode: 'mode',
                disableClose: 'disableClose',
                autoFocus: 'autoFocus',
                opened: 'opened',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                openedStart: 'openedStart',
                _closedStream: 'closed',
                closedStart: 'closedStart',
                onPositionChanged: 'positionChanged',
              },
              exportAs: ['matDrawer'],
              ngContentSelectors: gk,
              decls: 3,
              vars: 0,
              consts: [
                ['cdkScrollable', '', 1, 'mat-drawer-inner-container'],
                ['content', ''],
              ],
              template: function (e, i) {
                1 & e && (Xe(), _(0, 'div', 0, 1), Y(2), p());
              },
              dependencies: [ul],
              encapsulation: 2,
              data: { animation: [G6.transformDrawer] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        bk = (() => {
          class n {
            get start() {
              return this._start;
            }
            get end() {
              return this._end;
            }
            get autosize() {
              return this._autosize;
            }
            set autosize(e) {
              this._autosize = ce(e);
            }
            get hasBackdrop() {
              return null == this._backdropOverride
                ? !this._start ||
                    'side' !== this._start.mode ||
                    !this._end ||
                    'side' !== this._end.mode
                : this._backdropOverride;
            }
            set hasBackdrop(e) {
              this._backdropOverride = null == e ? null : ce(e);
            }
            get scrollable() {
              return this._userContent || this._content;
            }
            constructor(e, i, r, o, a, s = !1, l) {
              (this._dir = e),
                (this._element = i),
                (this._ngZone = r),
                (this._changeDetectorRef = o),
                (this._animationMode = l),
                (this._drawers = new Xr()),
                (this.backdropClick = new re()),
                (this._destroyed = new z()),
                (this._doCheckSubject = new z()),
                (this._contentMargins = { left: null, right: null }),
                (this._contentMarginChanges = new z()),
                e &&
                  e.change.pipe(me(this._destroyed)).subscribe(() => {
                    this._validateDrawers(), this.updateContentMargins();
                  }),
                a
                  .change()
                  .pipe(me(this._destroyed))
                  .subscribe(() => this.updateContentMargins()),
                (this._autosize = s);
            }
            ngAfterContentInit() {
              this._allDrawers.changes
                .pipe(_i(this._allDrawers), me(this._destroyed))
                .subscribe((e) => {
                  this._drawers.reset(
                    e.filter((i) => !i._container || i._container === this)
                  ),
                    this._drawers.notifyOnChanges();
                }),
                this._drawers.changes.pipe(_i(null)).subscribe(() => {
                  this._validateDrawers(),
                    this._drawers.forEach((e) => {
                      this._watchDrawerToggle(e),
                        this._watchDrawerPosition(e),
                        this._watchDrawerMode(e);
                    }),
                    (!this._drawers.length ||
                      this._isDrawerOpen(this._start) ||
                      this._isDrawerOpen(this._end)) &&
                      this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._ngZone.runOutsideAngular(() => {
                  this._doCheckSubject
                    .pipe(uu(10), me(this._destroyed))
                    .subscribe(() => this.updateContentMargins());
                });
            }
            ngOnDestroy() {
              this._contentMarginChanges.complete(),
                this._doCheckSubject.complete(),
                this._drawers.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open() {
              this._drawers.forEach((e) => e.open());
            }
            close() {
              this._drawers.forEach((e) => e.close());
            }
            updateContentMargins() {
              let e = 0,
                i = 0;
              if (this._left && this._left.opened)
                if ('side' == this._left.mode) e += this._left._getWidth();
                else if ('push' == this._left.mode) {
                  const r = this._left._getWidth();
                  (e += r), (i -= r);
                }
              if (this._right && this._right.opened)
                if ('side' == this._right.mode) i += this._right._getWidth();
                else if ('push' == this._right.mode) {
                  const r = this._right._getWidth();
                  (i += r), (e -= r);
                }
              (e = e || null),
                (i = i || null),
                (e !== this._contentMargins.left ||
                  i !== this._contentMargins.right) &&
                  ((this._contentMargins = { left: e, right: i }),
                  this._ngZone.run(() =>
                    this._contentMarginChanges.next(this._contentMargins)
                  ));
            }
            ngDoCheck() {
              this._autosize &&
                this._isPushed() &&
                this._ngZone.runOutsideAngular(() =>
                  this._doCheckSubject.next()
                );
            }
            _watchDrawerToggle(e) {
              e._animationStarted
                .pipe(
                  Qe((i) => i.fromState !== i.toState),
                  me(this._drawers.changes)
                )
                .subscribe((i) => {
                  'open-instant' !== i.toState &&
                    'NoopAnimations' !== this._animationMode &&
                    this._element.nativeElement.classList.add(
                      'mat-drawer-transition'
                    ),
                    this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                'side' !== e.mode &&
                  e.openedChange
                    .pipe(me(this._drawers.changes))
                    .subscribe(() => this._setContainerClass(e.opened));
            }
            _watchDrawerPosition(e) {
              e &&
                e.onPositionChanged
                  .pipe(me(this._drawers.changes))
                  .subscribe(() => {
                    this._ngZone.onMicrotaskEmpty.pipe(ot(1)).subscribe(() => {
                      this._validateDrawers();
                    });
                  });
            }
            _watchDrawerMode(e) {
              e &&
                e._modeChanged
                  .pipe(me(on(this._drawers.changes, this._destroyed)))
                  .subscribe(() => {
                    this.updateContentMargins(),
                      this._changeDetectorRef.markForCheck();
                  });
            }
            _setContainerClass(e) {
              const i = this._element.nativeElement.classList,
                r = 'mat-drawer-container-has-open';
              e ? i.add(r) : i.remove(r);
            }
            _validateDrawers() {
              (this._start = this._end = null),
                this._drawers.forEach((e) => {
                  'end' == e.position ? (this._end = e) : (this._start = e);
                }),
                (this._right = this._left = null),
                this._dir && 'rtl' === this._dir.value
                  ? ((this._left = this._end), (this._right = this._start))
                  : ((this._left = this._start), (this._right = this._end));
            }
            _isPushed() {
              return (
                (this._isDrawerOpen(this._start) &&
                  'over' != this._start.mode) ||
                (this._isDrawerOpen(this._end) && 'over' != this._end.mode)
              );
            }
            _onBackdropClicked() {
              this.backdropClick.emit(), this._closeModalDrawersViaBackdrop();
            }
            _closeModalDrawersViaBackdrop() {
              [this._start, this._end]
                .filter((e) => e && !e.disableClose && this._canHaveBackdrop(e))
                .forEach((e) => e._closeViaBackdropClick());
            }
            _isShowingBackdrop() {
              return (
                (this._isDrawerOpen(this._start) &&
                  this._canHaveBackdrop(this._start)) ||
                (this._isDrawerOpen(this._end) &&
                  this._canHaveBackdrop(this._end))
              );
            }
            _canHaveBackdrop(e) {
              return 'side' !== e.mode || !!this._backdropOverride;
            }
            _isDrawerOpen(e) {
              return null != e && e.opened;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(Qn, 8),
                m(j),
                m(U),
                m(mt),
                m(xa),
                m(W6),
                m(Yt, 8)
              );
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-drawer-container']],
              contentQueries: function (e, i, r) {
                if ((1 & e && (Me(r, D_, 5), Me(r, vk, 5)), 2 & e)) {
                  let o;
                  V((o = B())) && (i._content = o.first),
                    V((o = B())) && (i._allDrawers = o);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && Se(D_, 5), 2 & e)) {
                  let r;
                  V((r = B())) && (i._userContent = r.first);
                }
              },
              hostAttrs: [1, 'mat-drawer-container'],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  be(
                    'mat-drawer-container-explicit-backdrop',
                    i._backdropOverride
                  );
              },
              inputs: { autosize: 'autosize', hasBackdrop: 'hasBackdrop' },
              outputs: { backdropClick: 'backdropClick' },
              exportAs: ['matDrawerContainer'],
              features: [X([{ provide: _k, useExisting: n }])],
              ngContentSelectors: $6,
              decls: 4,
              vars: 2,
              consts: [
                [
                  'class',
                  'mat-drawer-backdrop',
                  3,
                  'mat-drawer-shown',
                  'click',
                  4,
                  'ngIf',
                ],
                [4, 'ngIf'],
                [1, 'mat-drawer-backdrop', 3, 'click'],
              ],
              template: function (e, i) {
                1 & e &&
                  (Xe(U6),
                  E(0, z6, 1, 2, 'div', 0),
                  Y(1),
                  Y(2, 1),
                  E(3, j6, 2, 0, 'mat-drawer-content', 1)),
                  2 & e &&
                    (D('ngIf', i.hasBackdrop), b(3), D('ngIf', !i._content));
              },
              dependencies: [An, D_],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        q6 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Tn, Ae, br, br, Ae] })),
            n
          );
        })(),
        K6 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [Ae, Ae] })),
            n
          );
        })();
      const yk = ['*'],
        Ck = ['unscopedContent'],
        X6 = ['text'],
        Z6 = [
          [
            ['', 'matListItemAvatar', ''],
            ['', 'matListItemIcon', ''],
          ],
          [['', 'matListItemTitle', '']],
          [['', 'matListItemLine', '']],
          '*',
          [['', 'matListItemMeta', '']],
          [['mat-divider']],
        ],
        Q6 = [
          '[matListItemAvatar],[matListItemIcon]',
          '[matListItemTitle]',
          '[matListItemLine]',
          '*',
          '[matListItemMeta]',
          'mat-divider',
        ],
        xk = new A('ListOption');
      let Dk = (() => {
          class n {
            constructor(e) {
              this._elementRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matListItemTitle', '']],
              hostAttrs: [
                1,
                'mat-mdc-list-item-title',
                'mdc-list-item__primary-text',
              ],
            })),
            n
          );
        })(),
        Mk = (() => {
          class n {
            constructor(e) {
              this._elementRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j));
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matListItemLine', '']],
              hostAttrs: [
                1,
                'mat-mdc-list-item-line',
                'mdc-list-item__secondary-text',
              ],
            })),
            n
          );
        })(),
        gG = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matListItemMeta', '']],
              hostAttrs: [1, 'mat-mdc-list-item-meta', 'mdc-list-item__end'],
            })),
            n
          );
        })(),
        Ek = (() => {
          class n {
            constructor(e) {
              this._listOption = e;
            }
            _isAlignedAtStart() {
              return (
                !this._listOption ||
                'after' === this._listOption?._getTogglePosition()
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(xk, 8));
            }),
            (n.ɵdir = S({
              type: n,
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  be('mdc-list-item__start', i._isAlignedAtStart())(
                    'mdc-list-item__end',
                    !i._isAlignedAtStart()
                  );
              },
            })),
            n
          );
        })(),
        _G = (() => {
          class n extends Ek {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matListItemAvatar', '']],
              hostAttrs: [1, 'mat-mdc-list-item-avatar'],
              features: [F],
            })),
            n
          );
        })(),
        vG = (() => {
          class n extends Ek {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [['', 'matListItemIcon', '']],
              hostAttrs: [1, 'mat-mdc-list-item-icon'],
              features: [F],
            })),
            n
          );
        })();
      const bG = new A('MAT_LIST_CONFIG');
      let Va = (() => {
          class n {
            constructor() {
              (this._isNonInteractive = !0),
                (this._disableRipple = !1),
                (this._disabled = !1),
                (this._defaultOptions = ie(bG, { optional: !0 }));
            }
            get disableRipple() {
              return this._disableRipple;
            }
            set disableRipple(e) {
              this._disableRipple = ce(e);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              this._disabled = ce(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = S({
              type: n,
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && ve('aria-disabled', i.disabled);
              },
              inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
            })),
            n
          );
        })(),
        M_ = (() => {
          class n {
            set lines(e) {
              (this._explicitLines = yi(e, null)), this._updateItemLines(!1);
            }
            get disableRipple() {
              return (
                this.disabled ||
                this._disableRipple ||
                this._noopAnimations ||
                !!this._listBase?.disableRipple
              );
            }
            set disableRipple(e) {
              this._disableRipple = ce(e);
            }
            get disabled() {
              return this._disabled || !!this._listBase?.disabled;
            }
            set disabled(e) {
              this._disabled = ce(e);
            }
            get rippleDisabled() {
              return this.disableRipple || !!this.rippleConfig.disabled;
            }
            constructor(e, i, r, o, a, s) {
              (this._elementRef = e),
                (this._ngZone = i),
                (this._listBase = r),
                (this._platform = o),
                (this._explicitLines = null),
                (this._disableRipple = !1),
                (this._disabled = !1),
                (this._subscriptions = new Oe()),
                (this._rippleRenderer = null),
                (this._hasUnscopedTextContent = !1),
                (this.rippleConfig = a || {}),
                (this._hostElement = this._elementRef.nativeElement),
                (this._noopAnimations = 'NoopAnimations' === s),
                r && !r._isNonInteractive && this._initInteractiveListItem(),
                'button' === this._hostElement.nodeName.toLowerCase() &&
                  !this._hostElement.hasAttribute('type') &&
                  this._hostElement.setAttribute('type', 'button');
            }
            ngAfterViewInit() {
              this._monitorProjectedLinesAndTitle(), this._updateItemLines(!0);
            }
            ngOnDestroy() {
              this._subscriptions.unsubscribe(),
                null !== this._rippleRenderer &&
                  this._rippleRenderer._removeTriggerEvents();
            }
            _hasIconOrAvatar() {
              return !(!this._avatars.length && !this._icons.length);
            }
            _initInteractiveListItem() {
              this._hostElement.classList.add('mat-mdc-list-item-interactive'),
                (this._rippleRenderer = new ya(
                  this,
                  this._ngZone,
                  this._hostElement,
                  this._platform
                )),
                this._rippleRenderer.setupTriggerEvents(this._hostElement);
            }
            _monitorProjectedLinesAndTitle() {
              this._ngZone.runOutsideAngular(() => {
                this._subscriptions.add(
                  on(this._lines.changes, this._titles.changes).subscribe(() =>
                    this._updateItemLines(!1)
                  )
                );
              });
            }
            _updateItemLines(e) {
              if (!this._lines || !this._titles || !this._unscopedContent)
                return;
              e && this._checkDomForUnscopedTextContent();
              const i = this._explicitLines ?? this._inferLinesFromContent(),
                r = this._unscopedContent.nativeElement;
              if (
                (this._hostElement.classList.toggle(
                  'mat-mdc-list-item-single-line',
                  i <= 1
                ),
                this._hostElement.classList.toggle(
                  'mdc-list-item--with-one-line',
                  i <= 1
                ),
                this._hostElement.classList.toggle(
                  'mdc-list-item--with-two-lines',
                  2 === i
                ),
                this._hostElement.classList.toggle(
                  'mdc-list-item--with-three-lines',
                  3 === i
                ),
                this._hasUnscopedTextContent)
              ) {
                const o = 0 === this._titles.length && 1 === i;
                r.classList.toggle('mdc-list-item__primary-text', o),
                  r.classList.toggle('mdc-list-item__secondary-text', !o);
              } else
                r.classList.remove('mdc-list-item__primary-text'),
                  r.classList.remove('mdc-list-item__secondary-text');
            }
            _inferLinesFromContent() {
              let e = this._titles.length + this._lines.length;
              return this._hasUnscopedTextContent && (e += 1), e;
            }
            _checkDomForUnscopedTextContent() {
              this._hasUnscopedTextContent = Array.from(
                this._unscopedContent.nativeElement.childNodes
              )
                .filter((e) => e.nodeType !== e.COMMENT_NODE)
                .some((e) => !(!e.textContent || !e.textContent.trim()));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(j),
                m(U),
                m(Va, 8),
                m(je),
                m(_u, 8),
                m(Yt, 8)
              );
            }),
            (n.ɵdir = S({
              type: n,
              contentQueries: function (e, i, r) {
                if ((1 & e && (Me(r, _G, 4), Me(r, vG, 4)), 2 & e)) {
                  let o;
                  V((o = B())) && (i._avatars = o),
                    V((o = B())) && (i._icons = o);
                }
              },
              hostVars: 3,
              hostBindings: function (e, i) {
                2 & e &&
                  (ve('aria-disabled', i.disabled),
                  be('mdc-list-item--disabled', i.disabled));
              },
              inputs: {
                lines: 'lines',
                disableRipple: 'disableRipple',
                disabled: 'disabled',
              },
            })),
            n
          );
        })(),
        yG = (() => {
          class n extends M_ {
            get activated() {
              return this._activated;
            }
            set activated(e) {
              this._activated = ce(e);
            }
            constructor(e, i, r, o, a, s) {
              super(e, i, r, o, a, s), (this._activated = !1);
            }
            _getAriaCurrent() {
              return 'A' === this._hostElement.nodeName && this._activated
                ? 'page'
                : null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(j),
                m(U),
                m(Va, 8),
                m(je),
                m(_u, 8),
                m(Yt, 8)
              );
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [
                ['mat-list-item'],
                ['a', 'mat-list-item', ''],
                ['button', 'mat-list-item', ''],
              ],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (Me(r, Mk, 5), Me(r, Dk, 5), Me(r, gG, 5)), 2 & e)
                ) {
                  let o;
                  V((o = B())) && (i._lines = o),
                    V((o = B())) && (i._titles = o),
                    V((o = B())) && (i._meta = o);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && (Se(Ck, 5), Se(X6, 5)), 2 & e)) {
                  let r;
                  V((r = B())) && (i._unscopedContent = r.first),
                    V((r = B())) && (i._itemText = r.first);
                }
              },
              hostAttrs: [1, 'mat-mdc-list-item', 'mdc-list-item'],
              hostVars: 11,
              hostBindings: function (e, i) {
                2 & e &&
                  (ve('aria-current', i._getAriaCurrent()),
                  be('mdc-list-item--activated', i.activated)(
                    'mdc-list-item--with-leading-avatar',
                    0 !== i._avatars.length
                  )('mdc-list-item--with-leading-icon', 0 !== i._icons.length)(
                    'mdc-list-item--with-trailing-meta',
                    0 !== i._meta.length
                  )('_mat-animation-noopable', i._noopAnimations));
              },
              inputs: { activated: 'activated' },
              exportAs: ['matListItem'],
              features: [F],
              ngContentSelectors: Q6,
              decls: 10,
              vars: 0,
              consts: [
                [1, 'mdc-list-item__content'],
                [
                  1,
                  'mat-mdc-list-item-unscoped-content',
                  3,
                  'cdkObserveContent',
                ],
                ['unscopedContent', ''],
                [1, 'mat-mdc-focus-indicator'],
              ],
              template: function (e, i) {
                1 & e &&
                  (Xe(Z6),
                  Y(0),
                  _(1, 'span', 0),
                  Y(2, 1),
                  Y(3, 2),
                  _(4, 'span', 1, 2),
                  O('cdkObserveContent', function () {
                    return i._updateItemLines(!0);
                  }),
                  Y(6, 3),
                  p()(),
                  Y(7, 4),
                  Y(8, 5),
                  ne(9, 'div', 3));
              },
              dependencies: [mg],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        CG = (() => {
          class n extends Va {
            constructor() {
              super(...arguments), (this._isNonInteractive = !1);
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-nav-list']],
              hostAttrs: [
                'role',
                'navigation',
                1,
                'mat-mdc-nav-list',
                'mat-mdc-list-base',
                'mdc-list',
              ],
              exportAs: ['matNavList'],
              features: [X([{ provide: Va, useExisting: n }]), F],
              ngContentSelectors: yk,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Xe(), Y(0));
              },
              styles: [
                '.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:"";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:"";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:"";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:"";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:"";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:"";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:""}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        EG = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ imports: [fg, Tn, Ae, vu, jM, K6] })),
            n
          );
        })();
      function kk(n, t) {
        return t
          ? (e) =>
              Ls(
                t.pipe(
                  ot(1),
                  (function SG() {
                    return Je((n, t) => {
                      n.subscribe(qe(t, nc));
                    });
                  })()
                ),
                e.pipe(kk(n))
              )
          : yt((e, i) => It(n(e, i)).pipe(ot(1), Ld(e)));
      }
      function Ak(n, t = du) {
        const e = nE(n, t);
        return kk(() => e);
      }
      const kG = ['mat-menu-item', ''];
      function AG(n, t) {
        1 & n && (ii(), _(0, 'svg', 3), ne(1, 'polygon', 4), p());
      }
      const TG = [[['mat-icon'], ['', 'matMenuItemIcon', '']], '*'],
        IG = ['mat-icon, [matMenuItemIcon]', '*'];
      function RG(n, t) {
        if (1 & n) {
          const e = ui();
          _(0, 'div', 0),
            O('keydown', function (r) {
              return Zt(e), Qt(G()._handleKeydown(r));
            })('click', function () {
              return Zt(e), Qt(G().closed.emit('click'));
            })('@transformMenu.start', function (r) {
              return Zt(e), Qt(G()._onAnimationStart(r));
            })('@transformMenu.done', function (r) {
              return Zt(e), Qt(G()._onAnimationDone(r));
            }),
            _(1, 'div', 1),
            Y(2),
            p()();
        }
        if (2 & n) {
          const e = G();
          D('id', e.panelId)('ngClass', e._classList)(
            '@transformMenu',
            e._panelAnimationState
          ),
            ve('aria-label', e.ariaLabel || null)(
              'aria-labelledby',
              e.ariaLabelledby || null
            )('aria-describedby', e.ariaDescribedby || null);
        }
      }
      const OG = ['*'],
        E_ = new A('MAT_MENU_PANEL'),
        FG = xg(gu(class {}));
      let ih = (() => {
        class n extends FG {
          constructor(e, i, r, o, a) {
            super(),
              (this._elementRef = e),
              (this._document = i),
              (this._focusMonitor = r),
              (this._parentMenu = o),
              (this._changeDetectorRef = a),
              (this.role = 'menuitem'),
              (this._hovered = new z()),
              (this._focused = new z()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              o?.addItem?.(this);
          }
          focus(e, i) {
            this._focusMonitor && e
              ? this._focusMonitor.focusVia(this._getHostElement(), e, i)
              : this._getHostElement().focus(i),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor &&
              this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor &&
              this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu &&
                this._parentMenu.removeItem &&
                this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(e) {
            this.disabled && (e.preventDefault(), e.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            const e = this._elementRef.nativeElement.cloneNode(!0),
              i = e.querySelectorAll('mat-icon, .material-icons');
            for (let r = 0; r < i.length; r++) i[r].remove();
            return e.textContent?.trim() || '';
          }
          _setHighlighted(e) {
            (this._highlighted = e), this._changeDetectorRef?.markForCheck();
          }
          _setTriggersSubmenu(e) {
            (this._triggersSubmenu = e),
              this._changeDetectorRef?.markForCheck();
          }
          _hasFocus() {
            return (
              this._document &&
              this._document.activeElement === this._getHostElement()
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(j), m(oe), m(ol), m(E_, 8), m(mt));
          }),
          (n.ɵcmp = W({
            type: n,
            selectors: [['', 'mat-menu-item', '']],
            hostAttrs: [
              1,
              'mat-mdc-menu-item',
              'mat-mdc-focus-indicator',
              'mdc-list-item',
            ],
            hostVars: 8,
            hostBindings: function (e, i) {
              1 & e &&
                O('click', function (o) {
                  return i._checkDisabled(o);
                })('mouseenter', function () {
                  return i._handleMouseEnter();
                }),
                2 & e &&
                  (ve('role', i.role)('tabindex', i._getTabIndex())(
                    'aria-disabled',
                    i.disabled
                  )('disabled', i.disabled || null),
                  be('mat-mdc-menu-item-highlighted', i._highlighted)(
                    'mat-mdc-menu-item-submenu-trigger',
                    i._triggersSubmenu
                  ));
            },
            inputs: {
              disabled: 'disabled',
              disableRipple: 'disableRipple',
              role: 'role',
            },
            exportAs: ['matMenuItem'],
            features: [F],
            attrs: kG,
            ngContentSelectors: IG,
            decls: 5,
            vars: 3,
            consts: [
              [1, 'mdc-list-item__primary-text'],
              [
                'matRipple',
                '',
                1,
                'mat-mdc-menu-ripple',
                3,
                'matRippleDisabled',
                'matRippleTrigger',
              ],
              [
                'class',
                'mat-mdc-menu-submenu-icon',
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                4,
                'ngIf',
              ],
              [
                'viewBox',
                '0 0 5 10',
                'focusable',
                'false',
                1,
                'mat-mdc-menu-submenu-icon',
              ],
              ['points', '0,0 5,5 0,10'],
            ],
            template: function (e, i) {
              1 & e &&
                (Xe(TG),
                Y(0),
                _(1, 'span', 0),
                Y(2, 1),
                p(),
                ne(3, 'div', 1),
                E(4, AG, 2, 0, 'svg', 2)),
                2 & e &&
                  (b(3),
                  D('matRippleDisabled', i.disableRipple || i.disabled)(
                    'matRippleTrigger',
                    i._getHostElement()
                  ),
                  b(1),
                  D('ngIf', i._triggersSubmenu));
            },
            dependencies: [An, wa],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const PG = new A('MatMenuContent'),
        rh = {
          transformMenu: Ci('transformMenu', [
            On('void', Ye({ opacity: 0, transform: 'scale(0.8)' })),
            At(
              'void => enter',
              Vt(
                '120ms cubic-bezier(0, 0, 0.2, 1)',
                Ye({ opacity: 1, transform: 'scale(1)' })
              )
            ),
            At('* => void', Vt('100ms 25ms linear', Ye({ opacity: 0 }))),
          ]),
          fadeInItems: Ci('fadeInItems', [
            On('showing', Ye({ opacity: 1 })),
            At('void => *', [
              Ye({ opacity: 0 }),
              Vt('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
            ]),
          ]),
        };
      let NG = 0;
      const Tk = new A('mat-menu-default-options', {
        providedIn: 'root',
        factory: function LG() {
          return {
            overlapTrigger: !1,
            xPosition: 'after',
            yPosition: 'below',
            backdropClass: 'cdk-overlay-transparent-backdrop',
          };
        },
      });
      let Gl = (() => {
          class n {
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(e) {
              (this._xPosition = e), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(e) {
              (this._yPosition = e), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(e) {
              this._overlapTrigger = ce(e);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = ce(e);
            }
            set panelClass(e) {
              const i = this._previousPanelClass;
              i &&
                i.length &&
                i.split(' ').forEach((r) => {
                  this._classList[r] = !1;
                }),
                (this._previousPanelClass = e),
                e &&
                  e.length &&
                  (e.split(' ').forEach((r) => {
                    this._classList[r] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ''));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(e) {
              this.panelClass = e;
            }
            constructor(e, i, r, o) {
              (this._elementRef = e),
                (this._ngZone = i),
                (this._defaultOptions = r),
                (this._changeDetectorRef = o),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new Xr()),
                (this._classList = {}),
                (this._panelAnimationState = 'void'),
                (this._animationDone = new z()),
                (this.overlayPanelClass =
                  this._defaultOptions.overlayPanelClass || ''),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new re()),
                (this.close = this.closed),
                (this.panelId = 'mat-menu-panel-' + NG++);
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new xM(this._directDescendantItems)
                  .withWrap()
                  .withTypeAhead()
                  .withHomeAndEnd()),
                this._keyManager.tabOut.subscribe(() =>
                  this.closed.emit('tab')
                ),
                this._directDescendantItems.changes
                  .pipe(
                    _i(this._directDescendantItems),
                    nn((e) => on(...e.map((i) => i._focused)))
                  )
                  .subscribe((e) => this._keyManager.updateActiveItem(e)),
                this._directDescendantItems.changes.subscribe((e) => {
                  const i = this._keyManager;
                  if (
                    'enter' === this._panelAnimationState &&
                    i.activeItem?._hasFocus()
                  ) {
                    const r = e.toArray(),
                      o = Math.max(
                        0,
                        Math.min(r.length - 1, i.activeItemIndex || 0)
                      );
                    r[o] && !r[o].disabled
                      ? i.setActiveItem(o)
                      : i.setNextItemActive();
                  }
                });
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._directDescendantItems.destroy(),
                this.closed.complete(),
                this._firstItemFocusSubscription?.unsubscribe();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                _i(this._directDescendantItems),
                nn((i) => on(...i.map((r) => r._hovered)))
              );
            }
            addItem(e) {}
            removeItem(e) {}
            _handleKeydown(e) {
              const i = e.keyCode,
                r = this._keyManager;
              switch (i) {
                case 27:
                  Zn(e) || (e.preventDefault(), this.closed.emit('keydown'));
                  break;
                case 37:
                  this.parentMenu &&
                    'ltr' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                case 39:
                  this.parentMenu &&
                    'rtl' === this.direction &&
                    this.closed.emit('keydown');
                  break;
                default:
                  return (
                    (38 === i || 40 === i) && r.setFocusOrigin('keyboard'),
                    void r.onKeydown(e)
                  );
              }
              e.stopPropagation();
            }
            focusFirstItem(e = 'program') {
              this._firstItemFocusSubscription?.unsubscribe(),
                (this._firstItemFocusSubscription = this._ngZone.onStable
                  .pipe(ot(1))
                  .subscribe(() => {
                    let i = null;
                    if (
                      (this._directDescendantItems.length &&
                        (i = this._directDescendantItems.first
                          ._getHostElement()
                          .closest('[role="menu"]')),
                      !i || !i.contains(document.activeElement))
                    ) {
                      const r = this._keyManager;
                      r.setFocusOrigin(e).setFirstItemActive(),
                        !r.activeItem && i && i.focus();
                    }
                  }));
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(e) {
              const i = Math.min(this._baseElevation + e, 24),
                r = `${this._elevationPrefix}${i}`,
                o = Object.keys(this._classList).find((a) =>
                  a.startsWith(this._elevationPrefix)
                );
              (!o || o === this._previousElevation) &&
                (this._previousElevation &&
                  (this._classList[this._previousElevation] = !1),
                (this._classList[r] = !0),
                (this._previousElevation = r));
            }
            setPositionClasses(e = this.xPosition, i = this.yPosition) {
              const r = this._classList;
              (r['mat-menu-before'] = 'before' === e),
                (r['mat-menu-after'] = 'after' === e),
                (r['mat-menu-above'] = 'above' === i),
                (r['mat-menu-below'] = 'below' === i),
                this._changeDetectorRef?.markForCheck();
            }
            _startAnimation() {
              this._panelAnimationState = 'enter';
            }
            _resetAnimation() {
              this._panelAnimationState = 'void';
            }
            _onAnimationDone(e) {
              this._animationDone.next(e), (this._isAnimating = !1);
            }
            _onAnimationStart(e) {
              (this._isAnimating = !0),
                'enter' === e.toState &&
                  0 === this._keyManager.activeItemIndex &&
                  (e.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes.pipe(_i(this._allItems)).subscribe((e) => {
                this._directDescendantItems.reset(
                  e.filter((i) => i._parentMenu === this)
                ),
                  this._directDescendantItems.notifyOnChanges();
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(U), m(Tk), m(mt));
            }),
            (n.ɵdir = S({
              type: n,
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (Me(r, PG, 5), Me(r, ih, 5), Me(r, ih, 4)), 2 & e)
                ) {
                  let o;
                  V((o = B())) && (i.lazyContent = o.first),
                    V((o = B())) && (i._allItems = o),
                    V((o = B())) && (i.items = o);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && Se(ut, 5), 2 & e)) {
                  let r;
                  V((r = B())) && (i.templateRef = r.first);
                }
              },
              inputs: {
                backdropClass: 'backdropClass',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                overlapTrigger: 'overlapTrigger',
                hasBackdrop: 'hasBackdrop',
                panelClass: ['class', 'panelClass'],
                classList: 'classList',
              },
              outputs: { closed: 'closed', close: 'close' },
            })),
            n
          );
        })(),
        VG = (() => {
          class n extends Gl {
            constructor(e, i, r, o) {
              super(e, i, r, o),
                (this._elevationPrefix = 'mat-elevation-z'),
                (this._baseElevation = 8);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(U), m(Tk), m(mt));
            }),
            (n.ɵcmp = W({
              type: n,
              selectors: [['mat-menu']],
              hostVars: 3,
              hostBindings: function (e, i) {
                2 & e &&
                  ve('aria-label', null)('aria-labelledby', null)(
                    'aria-describedby',
                    null
                  );
              },
              exportAs: ['matMenu'],
              features: [X([{ provide: E_, useExisting: n }]), F],
              ngContentSelectors: OG,
              decls: 1,
              vars: 0,
              consts: [
                [
                  'tabindex',
                  '-1',
                  'role',
                  'menu',
                  1,
                  'mat-mdc-menu-panel',
                  'mdc-menu-surface',
                  'mdc-menu-surface--open',
                  'mat-mdc-elevation-specific',
                  3,
                  'id',
                  'ngClass',
                  'keydown',
                  'click',
                ],
                [1, 'mat-mdc-menu-content', 'mdc-list'],
              ],
              template: function (e, i) {
                1 & e && (Xe(), E(0, RG, 3, 6, 'ng-template'));
              },
              dependencies: [kd],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;position:relative}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item.mdc-list-item{align-items:center}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:"";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item .mdc-list-item__primary-text{white-space:normal}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}',
              ],
              encapsulation: 2,
              data: { animation: [rh.transformMenu, rh.fadeInItems] },
              changeDetection: 0,
            })),
            n
          );
        })();
      const Ik = new A('mat-menu-scroll-strategy'),
        HG = {
          provide: Ik,
          deps: [Jn],
          useFactory: function BG(n) {
            return () => n.scrollStrategies.reposition();
          },
        },
        Rk = ro({ passive: !0 });
      let zG = (() => {
          class n {
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(e) {
              this.menu = e;
            }
            get menu() {
              return this._menu;
            }
            set menu(e) {
              e !== this._menu &&
                ((this._menu = e),
                this._menuCloseSubscription.unsubscribe(),
                e &&
                  (this._menuCloseSubscription = e.close.subscribe((i) => {
                    this._destroyMenu(i),
                      ('click' === i || 'tab' === i) &&
                        this._parentMaterialMenu &&
                        this._parentMaterialMenu.closed.emit(i);
                  })),
                this._menuItemInstance?._setTriggersSubmenu(
                  this.triggersSubmenu()
                ));
            }
            constructor(e, i, r, o, a, s, l, c, d) {
              (this._overlay = e),
                (this._element = i),
                (this._viewContainerRef = r),
                (this._menuItemInstance = s),
                (this._dir = l),
                (this._focusMonitor = c),
                (this._ngZone = d),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = Oe.EMPTY),
                (this._hoverSubscription = Oe.EMPTY),
                (this._menuCloseSubscription = Oe.EMPTY),
                (this._changeDetectorRef = ie(mt)),
                (this._handleTouchStart = (u) => {
                  bg(u) || (this._openedBy = 'touch');
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new re()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new re()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = o),
                (this._parentMaterialMenu = a instanceof Gl ? a : void 0),
                i.nativeElement.addEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  Rk
                );
            }
            ngAfterContentInit() {
              this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef &&
                (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener(
                  'touchstart',
                  this._handleTouchStart,
                  Rk
                ),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            triggersSubmenu() {
              return !!(
                this._menuItemInstance &&
                this._parentMaterialMenu &&
                this.menu
              );
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              const e = this.menu;
              if (this._menuOpen || !e) return;
              const i = this._createOverlay(e),
                r = i.getConfig(),
                o = r.positionStrategy;
              this._setPosition(e, o),
                (r.hasBackdrop =
                  null == e.hasBackdrop
                    ? !this.triggersSubmenu()
                    : e.hasBackdrop),
                i.attach(this._getPortal(e)),
                e.lazyContent && e.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription =
                  this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(e),
                e instanceof Gl &&
                  (e._startAnimation(),
                  e._directDescendantItems.changes
                    .pipe(me(e.close))
                    .subscribe(() => {
                      o.withLockedPosition(!1).reapplyLastPosition(),
                        o.withLockedPosition(!0);
                    }));
            }
            closeMenu() {
              this.menu?.close.emit();
            }
            focus(e, i) {
              this._focusMonitor && e
                ? this._focusMonitor.focusVia(this._element, e, i)
                : this._element.nativeElement.focus(i);
            }
            updatePosition() {
              this._overlayRef?.updatePosition();
            }
            _destroyMenu(e) {
              if (!this._overlayRef || !this.menuOpen) return;
              const i = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this.restoreFocus &&
                  ('keydown' === e ||
                    !this._openedBy ||
                    !this.triggersSubmenu()) &&
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                i instanceof Gl
                  ? (i._resetAnimation(),
                    i.lazyContent
                      ? i._animationDone
                          .pipe(
                            Qe((r) => 'void' === r.toState),
                            ot(1),
                            me(i.lazyContent._attached)
                          )
                          .subscribe({
                            next: () => i.lazyContent.detach(),
                            complete: () => this._setIsMenuOpen(!1),
                          })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), i?.lazyContent?.detach());
            }
            _initMenu(e) {
              (e.parentMenu = this.triggersSubmenu()
                ? this._parentMaterialMenu
                : void 0),
                (e.direction = this.dir),
                this._setMenuElevation(e),
                e.focusFirstItem(this._openedBy || 'program'),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation(e) {
              if (e.setElevation) {
                let i = 0,
                  r = e.parentMenu;
                for (; r; ) i++, (r = r.parentMenu);
                e.setElevation(i);
              }
            }
            _setIsMenuOpen(e) {
              e !== this._menuOpen &&
                ((this._menuOpen = e),
                this._menuOpen
                  ? this.menuOpened.emit()
                  : this.menuClosed.emit(),
                this.triggersSubmenu() &&
                  this._menuItemInstance._setHighlighted(e),
                this._changeDetectorRef.markForCheck());
            }
            _createOverlay(e) {
              if (!this._overlayRef) {
                const i = this._getOverlayConfig(e);
                this._subscribeToPositions(e, i.positionStrategy),
                  (this._overlayRef = this._overlay.create(i)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig(e) {
              return new Mu({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn(
                    '.mat-menu-panel, .mat-mdc-menu-panel'
                  ),
                backdropClass:
                  e.backdropClass || 'cdk-overlay-transparent-backdrop',
                panelClass: e.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(e, i) {
              e.setPositionClasses &&
                i.positionChanges.subscribe((r) => {
                  const o =
                      'start' === r.connectionPair.overlayX
                        ? 'after'
                        : 'before',
                    a = 'top' === r.connectionPair.overlayY ? 'below' : 'above';
                  this._ngZone
                    ? this._ngZone.run(() => e.setPositionClasses(o, a))
                    : e.setPositionClasses(o, a);
                });
            }
            _setPosition(e, i) {
              let [r, o] =
                  'before' === e.xPosition
                    ? ['end', 'start']
                    : ['start', 'end'],
                [a, s] =
                  'above' === e.yPosition
                    ? ['bottom', 'top']
                    : ['top', 'bottom'],
                [l, c] = [a, s],
                [d, u] = [r, o],
                h = 0;
              if (this.triggersSubmenu()) {
                if (
                  ((u = r = 'before' === e.xPosition ? 'start' : 'end'),
                  (o = d = 'end' === r ? 'start' : 'end'),
                  this._parentMaterialMenu)
                ) {
                  if (null == this._parentInnerPadding) {
                    const f = this._parentMaterialMenu.items.first;
                    this._parentInnerPadding = f
                      ? f._getHostElement().offsetTop
                      : 0;
                  }
                  h =
                    'bottom' === a
                      ? this._parentInnerPadding
                      : -this._parentInnerPadding;
                }
              } else
                e.overlapTrigger ||
                  ((l = 'top' === a ? 'bottom' : 'top'),
                  (c = 'top' === s ? 'bottom' : 'top'));
              i.withPositions([
                {
                  originX: r,
                  originY: l,
                  overlayX: d,
                  overlayY: a,
                  offsetY: h,
                },
                {
                  originX: o,
                  originY: l,
                  overlayX: u,
                  overlayY: a,
                  offsetY: h,
                },
                {
                  originX: r,
                  originY: c,
                  overlayX: d,
                  overlayY: s,
                  offsetY: -h,
                },
                {
                  originX: o,
                  originY: c,
                  overlayX: u,
                  overlayY: s,
                  offsetY: -h,
                },
              ]);
            }
            _menuClosingActions() {
              const e = this._overlayRef.backdropClick(),
                i = this._overlayRef.detachments();
              return on(
                e,
                this._parentMaterialMenu
                  ? this._parentMaterialMenu.closed
                  : H(),
                this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      Qe((a) => a !== this._menuItemInstance),
                      Qe(() => this._menuOpen)
                    )
                  : H(),
                i
              );
            }
            _handleMousedown(e) {
              vg(e) ||
                ((this._openedBy = 0 === e.button ? 'mouse' : void 0),
                this.triggersSubmenu() && e.preventDefault());
            }
            _handleKeydown(e) {
              const i = e.keyCode;
              (13 === i || 32 === i) && (this._openedBy = 'keyboard'),
                this.triggersSubmenu() &&
                  ((39 === i && 'ltr' === this.dir) ||
                    (37 === i && 'rtl' === this.dir)) &&
                  ((this._openedBy = 'keyboard'), this.openMenu());
            }
            _handleClick(e) {
              this.triggersSubmenu()
                ? (e.stopPropagation(), this.openMenu())
                : this.toggleMenu();
            }
            _handleHover() {
              !this.triggersSubmenu() ||
                !this._parentMaterialMenu ||
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    Qe((e) => e === this._menuItemInstance && !e.disabled),
                    Ak(0, kg)
                  )
                  .subscribe(() => {
                    (this._openedBy = 'mouse'),
                      this.menu instanceof Gl && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(
                              ot(1),
                              Ak(0, kg),
                              me(this._parentMaterialMenu._hovered())
                            )
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal(e) {
              return (
                (!this._portal || this._portal.templateRef !== e.templateRef) &&
                  (this._portal = new Du(
                    e.templateRef,
                    this._viewContainerRef
                  )),
                this._portal
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(Jn),
                m(j),
                m(ht),
                m(Ik),
                m(E_, 8),
                m(ih, 10),
                m(Qn, 8),
                m(ol),
                m(U)
              );
            }),
            (n.ɵdir = S({
              type: n,
              hostVars: 3,
              hostBindings: function (e, i) {
                1 & e &&
                  O('click', function (o) {
                    return i._handleClick(o);
                  })('mousedown', function (o) {
                    return i._handleMousedown(o);
                  })('keydown', function (o) {
                    return i._handleKeydown(o);
                  }),
                  2 & e &&
                    ve('aria-haspopup', i.menu ? 'menu' : null)(
                      'aria-expanded',
                      i.menuOpen
                    )('aria-controls', i.menuOpen ? i.menu.panelId : null);
              },
              inputs: {
                _deprecatedMatMenuTriggerFor: [
                  'mat-menu-trigger-for',
                  '_deprecatedMatMenuTriggerFor',
                ],
                menu: ['matMenuTriggerFor', 'menu'],
                menuData: ['matMenuTriggerData', 'menuData'],
                restoreFocus: ['matMenuTriggerRestoreFocus', 'restoreFocus'],
              },
              outputs: {
                menuOpened: 'menuOpened',
                onMenuOpen: 'onMenuOpen',
                menuClosed: 'menuClosed',
                onMenuClose: 'onMenuClose',
              },
            })),
            n
          );
        })(),
        jG = (() => {
          class n extends zG {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = _e(n)))(i || n);
              };
            })()),
            (n.ɵdir = S({
              type: n,
              selectors: [
                ['', 'mat-menu-trigger-for', ''],
                ['', 'matMenuTriggerFor', ''],
              ],
              hostAttrs: [1, 'mat-mdc-menu-trigger'],
              exportAs: ['matMenuTrigger'],
              features: [F],
            })),
            n
          );
        })(),
        UG = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({
              providers: [HG],
              imports: [Tn, vu, Ae, hl, br, Ae],
            })),
            n
          );
        })();
      class Wl {
        constructor() {
          this.showFiller = !1;
        }
      }
      (Wl.ɵfac = function (t) {
        return new (t || Wl)();
      }),
        (Wl.ɵcmp = W({
          type: Wl,
          selectors: [['app-nav']],
          decls: 31,
          vars: 1,
          consts: [
            ['autosize', '', 1, 'container'],
            ['mode', 'side', 1, 'sidenav'],
            ['drawer', ''],
            [1, 'nav-list'],
            ['mat-list-item', '', 'routerLink', '/'],
            [1, 'material-icons'],
            ['mat-list-item', '', 'routerLink', '/tecnicos'],
            ['mat-list-item', '', 'routerLink', '/clientes'],
            ['mat-list-item', '', 3, 'matMenuTriggerFor'],
            ['menu', 'matMenu'],
            ['routerLink', 'ordens', 'mat-menu-item', ''],
            ['routerLink', 'ordens/closed', 'mat-menu-item', ''],
            [1, 'sidenav-content'],
            ['mat-icon-button', '', 3, 'click'],
          ],
          template: function (t, e) {
            if (1 & t) {
              const i = ui();
              _(0, 'mat-drawer-container', 0)(1, 'mat-drawer', 1, 2)(
                3,
                'mat-nav-list',
                3
              )(4, 'a', 4)(5, 'em', 5),
                w(6, 'home'),
                p(),
                w(7, 'Home '),
                p(),
                _(8, 'a', 6)(9, 'em', 5),
                w(10, 'work'),
                p(),
                w(11, 'T\xe9cnico '),
                p(),
                _(12, 'a', 7)(13, 'em', 5),
                w(14, 'person_search'),
                p(),
                w(15, 'Cliente '),
                p(),
                _(16, 'a', 8)(17, 'em', 5),
                w(18, 'person_pin'),
                p(),
                w(19, 'Ordens de Servi\xe7o '),
                _(20, 'mat-menu', null, 9)(22, 'a', 10),
                w(23, 'Abertas ou em Andamento '),
                p(),
                _(24, 'a', 11),
                w(25, 'Encerradas '),
                p()()()()(),
                _(26, 'div', 12)(27, 'button', 13),
                O('click', function () {
                  return Zt(i), Qt(En(2).toggle());
                }),
                _(28, 'mat-icon'),
                w(29, 'more-vert'),
                p()(),
                ne(30, 'router-outlet'),
                p()();
            }
            if (2 & t) {
              const i = En(21);
              b(16), D('matMenuTriggerFor', i);
            }
          },
          dependencies: [qp, gr, vk, bk, nh, JM, CG, yG, VG, ih, jG],
          styles: [
            '.container[_ngcontent-%COMP%]{height:83%}i[_ngcontent-%COMP%]{margin-right:1rem}button[_ngcontent-%COMP%]{margin:1rem auto 0 1rem}em[_ngcontent-%COMP%]{margin-right:1rem}',
          ],
        }));
      class Yl {
        constructor() {
          this.title = 'os';
        }
      }
      function Ok(n) {
        return new k(3e3, !1);
      }
      function DW() {
        return typeof window < 'u' && typeof window.document < 'u';
      }
      function S_() {
        return (
          typeof process < 'u' &&
          '[object process]' === {}.toString.call(process)
        );
      }
      function Er(n) {
        switch (n.length) {
          case 0:
            return new ml();
          case 1:
            return n[0];
          default:
            return new yE(n);
        }
      }
      function Fk(n, t, e, i, r = new Map(), o = new Map()) {
        const a = [],
          s = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((d) => {
            const u = d.get('offset'),
              h = u == l,
              f = (h && c) || new Map();
            d.forEach((g, v) => {
              let y = v,
                x = g;
              if ('offset' !== v)
                switch (((y = t.normalizePropertyName(y, a)), x)) {
                  case '!':
                    x = r.get(v);
                    break;
                  case Yi:
                    x = o.get(v);
                    break;
                  default:
                    x = t.normalizeStyleValue(v, y, x, a);
                }
              f.set(y, x);
            }),
              h || s.push(f),
              (c = f),
              (l = u);
          }),
          a.length)
        )
          throw (function hW(n) {
            return new k(3502, !1);
          })();
        return s;
      }
      function k_(n, t, e, i) {
        switch (t) {
          case 'start':
            n.onStart(() => i(e && A_(e, 'start', n)));
            break;
          case 'done':
            n.onDone(() => i(e && A_(e, 'done', n)));
            break;
          case 'destroy':
            n.onDestroy(() => i(e && A_(e, 'destroy', n)));
        }
      }
      function A_(n, t, e) {
        const o = T_(
            n.element,
            n.triggerName,
            n.fromState,
            n.toState,
            t || n.phaseName,
            e.totalTime ?? n.totalTime,
            !!e.disabled
          ),
          a = n._data;
        return null != a && (o._data = a), o;
      }
      function T_(n, t, e, i, r = '', o = 0, a) {
        return {
          element: n,
          triggerName: t,
          fromState: e,
          toState: i,
          phaseName: r,
          totalTime: o,
          disabled: !!a,
        };
      }
      function vn(n, t, e) {
        let i = n.get(t);
        return i || n.set(t, (i = e)), i;
      }
      function Pk(n) {
        const t = n.indexOf(':');
        return [n.substring(1, t), n.slice(t + 1)];
      }
      (Yl.ɵfac = function (t) {
        return new (t || Yl)();
      }),
        (Yl.ɵcmp = W({
          type: Yl,
          selectors: [['app-root']],
          decls: 3,
          vars: 0,
          template: function (t, e) {
            1 & t && ne(0, 'app-header')(1, 'app-nav')(2, 'app-footer');
          },
          dependencies: [Ul, $l, Wl],
          encapsulation: 2,
        }));
      let I_ = (n, t) => !1,
        Nk = (n, t, e) => [],
        Lk = null;
      function R_(n) {
        const t = n.parentNode || n.host;
        return t === Lk ? null : t;
      }
      (S_() || typeof Element < 'u') &&
        (DW()
          ? ((Lk = (() => document.documentElement)()),
            (I_ = (n, t) => {
              for (; t; ) {
                if (t === n) return !0;
                t = R_(t);
              }
              return !1;
            }))
          : (I_ = (n, t) => n.contains(t)),
        (Nk = (n, t, e) => {
          if (e) return Array.from(n.querySelectorAll(t));
          const i = n.querySelector(t);
          return i ? [i] : [];
        }));
      let mo = null,
        Vk = !1;
      const Bk = I_,
        Hk = Nk;
      let zk = (() => {
          class n {
            validateStyleProperty(e) {
              return (function EW(n) {
                mo ||
                  ((mo =
                    (function SW() {
                      return typeof document < 'u' ? document.body : null;
                    })() || {}),
                  (Vk = !!mo.style && 'WebkitAppearance' in mo.style));
                let t = !0;
                return (
                  mo.style &&
                    !(function MW(n) {
                      return 'ebkit' == n.substring(1, 6);
                    })(n) &&
                    ((t = n in mo.style),
                    !t &&
                      Vk &&
                      (t =
                        'Webkit' + n.charAt(0).toUpperCase() + n.slice(1) in
                        mo.style)),
                  t
                );
              })(e);
            }
            matchesElement(e, i) {
              return !1;
            }
            containsElement(e, i) {
              return Bk(e, i);
            }
            getParentElement(e) {
              return R_(e);
            }
            query(e, i, r) {
              return Hk(e, i, r);
            }
            computeStyle(e, i, r) {
              return r || '';
            }
            animate(e, i, r, o, a, s = [], l) {
              return new ml(r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        O_ = (() => {
          class n {}
          return (n.NOOP = new zk()), n;
        })();
      const F_ = 'ng-enter',
        oh = 'ng-leave',
        ah = 'ng-trigger',
        sh = '.ng-trigger',
        Uk = 'ng-animating',
        P_ = '.ng-animating';
      function tr(n) {
        if ('number' == typeof n) return n;
        const t = n.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : N_(parseFloat(t[1]), t[2]);
      }
      function N_(n, t) {
        return 's' === t ? 1e3 * n : n;
      }
      function lh(n, t, e) {
        return n.hasOwnProperty('duration')
          ? n
          : (function TW(n, t, e) {
              let r,
                o = 0,
                a = '';
              if ('string' == typeof n) {
                const s = n.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === s)
                  return t.push(Ok()), { duration: 0, delay: 0, easing: '' };
                r = N_(parseFloat(s[1]), s[2]);
                const l = s[3];
                null != l && (o = N_(parseFloat(l), s[4]));
                const c = s[5];
                c && (a = c);
              } else r = n;
              if (!e) {
                let s = !1,
                  l = t.length;
                r < 0 &&
                  (t.push(
                    (function $G() {
                      return new k(3100, !1);
                    })()
                  ),
                  (s = !0)),
                  o < 0 &&
                    (t.push(
                      (function GG() {
                        return new k(3101, !1);
                      })()
                    ),
                    (s = !0)),
                  s && t.splice(l, 0, Ok());
              }
              return { duration: r, delay: o, easing: a };
            })(n, t, e);
      }
      function ql(n, t = {}) {
        return (
          Object.keys(n).forEach((e) => {
            t[e] = n[e];
          }),
          t
        );
      }
      function $k(n) {
        const t = new Map();
        return (
          Object.keys(n).forEach((e) => {
            t.set(e, n[e]);
          }),
          t
        );
      }
      function Sr(n, t = new Map(), e) {
        if (e) for (let [i, r] of e) t.set(i, r);
        for (let [i, r] of n) t.set(i, r);
        return t;
      }
      function Wk(n, t, e) {
        return e ? t + ':' + e + ';' : '';
      }
      function Yk(n) {
        let t = '';
        for (let e = 0; e < n.style.length; e++) {
          const i = n.style.item(e);
          t += Wk(0, i, n.style.getPropertyValue(i));
        }
        for (const e in n.style)
          n.style.hasOwnProperty(e) &&
            !e.startsWith('_') &&
            (t += Wk(0, FW(e), n.style[e]));
        n.setAttribute('style', t);
      }
      function Si(n, t, e) {
        n.style &&
          (t.forEach((i, r) => {
            const o = V_(r);
            e && !e.has(r) && e.set(r, n.style[o]), (n.style[o] = i);
          }),
          S_() && Yk(n));
      }
      function fo(n, t) {
        n.style &&
          (t.forEach((e, i) => {
            const r = V_(i);
            n.style[r] = '';
          }),
          S_() && Yk(n));
      }
      function Kl(n) {
        return Array.isArray(n) ? (1 == n.length ? n[0] : _E(n)) : n;
      }
      const L_ = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function qk(n) {
        let t = [];
        if ('string' == typeof n) {
          let e;
          for (; (e = L_.exec(n)); ) t.push(e[1]);
          L_.lastIndex = 0;
        }
        return t;
      }
      function Xl(n, t, e) {
        const i = n.toString(),
          r = i.replace(L_, (o, a) => {
            let s = t[a];
            return (
              null == s &&
                (e.push(
                  (function YG(n) {
                    return new k(3003, !1);
                  })()
                ),
                (s = '')),
              s.toString()
            );
          });
        return r == i ? n : r;
      }
      function ch(n) {
        const t = [];
        let e = n.next();
        for (; !e.done; ) t.push(e.value), (e = n.next());
        return t;
      }
      const OW = /-+([a-z0-9])/g;
      function V_(n) {
        return n.replace(OW, (...t) => t[1].toUpperCase());
      }
      function FW(n) {
        return n.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      }
      function bn(n, t, e) {
        switch (t.type) {
          case 7:
            return n.visitTrigger(t, e);
          case 0:
            return n.visitState(t, e);
          case 1:
            return n.visitTransition(t, e);
          case 2:
            return n.visitSequence(t, e);
          case 3:
            return n.visitGroup(t, e);
          case 4:
            return n.visitAnimate(t, e);
          case 5:
            return n.visitKeyframes(t, e);
          case 6:
            return n.visitStyle(t, e);
          case 8:
            return n.visitReference(t, e);
          case 9:
            return n.visitAnimateChild(t, e);
          case 10:
            return n.visitAnimateRef(t, e);
          case 11:
            return n.visitQuery(t, e);
          case 12:
            return n.visitStagger(t, e);
          default:
            throw (function qG(n) {
              return new k(3004, !1);
            })();
        }
      }
      function Kk(n, t) {
        return window.getComputedStyle(n)[t];
      }
      function HW(n, t) {
        const e = [];
        return (
          'string' == typeof n
            ? n.split(/\s*,\s*/).forEach((i) =>
                (function zW(n, t, e) {
                  if (':' == n[0]) {
                    const l = (function jW(n, t) {
                      switch (n) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ':decrement':
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              (function lW(n) {
                                return new k(3016, !1);
                              })()
                            ),
                            '* => *'
                          );
                      }
                    })(n, e);
                    if ('function' == typeof l) return void t.push(l);
                    n = l;
                  }
                  const i = n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        (function sW(n) {
                          return new k(3015, !1);
                        })()
                      ),
                      t
                    );
                  const r = i[1],
                    o = i[2],
                    a = i[3];
                  t.push(Xk(r, a));
                  '<' == o[0] && !('*' == r && '*' == a) && t.push(Xk(a, r));
                })(i, e, t)
              )
            : e.push(n),
          e
        );
      }
      const mh = new Set(['true', '1']),
        fh = new Set(['false', '0']);
      function Xk(n, t) {
        const e = mh.has(n) || fh.has(n),
          i = mh.has(t) || fh.has(t);
        return (r, o) => {
          let a = '*' == n || n == r,
            s = '*' == t || t == o;
          return (
            !a && e && 'boolean' == typeof r && (a = r ? mh.has(n) : fh.has(n)),
            !s && i && 'boolean' == typeof o && (s = o ? mh.has(t) : fh.has(t)),
            a && s
          );
        };
      }
      const UW = new RegExp('s*:selfs*,?', 'g');
      function B_(n, t, e, i) {
        return new $W(n).build(t, e, i);
      }
      class $W {
        constructor(t) {
          this._driver = t;
        }
        build(t, e, i) {
          const r = new YW(e);
          return this._resetContextStyleTimingState(r), bn(this, Kl(t), r);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ''),
            (t.collectedStyles = new Map()),
            t.collectedStyles.set('', new Map()),
            (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let i = (e.queryCount = 0),
            r = (e.depCount = 0);
          const o = [],
            a = [];
          return (
            '@' == t.name.charAt(0) &&
              e.errors.push(
                (function XG() {
                  return new k(3006, !1);
                })()
              ),
            t.definitions.forEach((s) => {
              if ((this._resetContextStyleTimingState(e), 0 == s.type)) {
                const l = s,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((d) => {
                    (l.name = d), o.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == s.type) {
                const l = this.visitTransition(s, e);
                (i += l.queryCount), (r += l.depCount), a.push(l);
              } else
                e.errors.push(
                  (function ZG() {
                    return new k(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: t.name,
              states: o,
              transitions: a,
              queryCount: i,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(t, e) {
          const i = this.visitStyle(t.styles, e),
            r = (t.options && t.options.params) || null;
          if (i.containsDynamicStyles) {
            const o = new Set(),
              a = r || {};
            i.styles.forEach((s) => {
              s instanceof Map &&
                s.forEach((l) => {
                  qk(l).forEach((c) => {
                    a.hasOwnProperty(c) || o.add(c);
                  });
                });
            }),
              o.size &&
                (ch(o.values()),
                e.errors.push(
                  (function QG(n, t) {
                    return new k(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: t.name,
            style: i,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = bn(this, Kl(t.animation), e);
          return {
            type: 1,
            matchers: HW(t.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: po(t.options),
          };
        }
        visitSequence(t, e) {
          return {
            type: 2,
            steps: t.steps.map((i) => bn(this, i, e)),
            options: po(t.options),
          };
        }
        visitGroup(t, e) {
          const i = e.currentTime;
          let r = 0;
          const o = t.steps.map((a) => {
            e.currentTime = i;
            const s = bn(this, a, e);
            return (r = Math.max(r, e.currentTime)), s;
          });
          return (
            (e.currentTime = r), { type: 3, steps: o, options: po(t.options) }
          );
        }
        visitAnimate(t, e) {
          const i = (function KW(n, t) {
            if (n.hasOwnProperty('duration')) return n;
            if ('number' == typeof n) return H_(lh(n, t).duration, 0, '');
            const e = n;
            if (
              e
                .split(/\s+/)
                .some((o) => '{' == o.charAt(0) && '{' == o.charAt(1))
            ) {
              const o = H_(0, 0, '');
              return (o.dynamic = !0), (o.strValue = e), o;
            }
            const r = lh(e, t);
            return H_(r.duration, r.delay, r.easing);
          })(t.timings, e.errors);
          e.currentAnimateTimings = i;
          let r,
            o = t.styles ? t.styles : Ye({});
          if (5 == o.type) r = this.visitKeyframes(o, e);
          else {
            let a = t.styles,
              s = !1;
            if (!a) {
              s = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (a = Ye(c));
            }
            e.currentTime += i.duration + i.delay;
            const l = this.visitStyle(a, e);
            (l.isEmptyStep = s), (r = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: r, options: null }
          );
        }
        visitStyle(t, e) {
          const i = this._makeStyleAst(t, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(t, e) {
          const i = [],
            r = Array.isArray(t.styles) ? t.styles : [t.styles];
          for (let s of r)
            'string' == typeof s
              ? s === Yi
                ? i.push(s)
                : e.errors.push(new k(3002, !1))
              : i.push($k(s));
          let o = !1,
            a = null;
          return (
            i.forEach((s) => {
              if (
                s instanceof Map &&
                (s.has('easing') && ((a = s.get('easing')), s.delete('easing')),
                !o)
              )
                for (let l of s.values())
                  if (l.toString().indexOf('{{') >= 0) {
                    o = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: i,
              easing: a,
              offset: t.offset,
              containsDynamicStyles: o,
              options: null,
            }
          );
        }
        _validateStyleAst(t, e) {
          const i = e.currentAnimateTimings;
          let r = e.currentTime,
            o = e.currentTime;
          i && o > 0 && (o -= i.duration + i.delay),
            t.styles.forEach((a) => {
              'string' != typeof a &&
                a.forEach((s, l) => {
                  const c = e.collectedStyles.get(e.currentQuerySelector),
                    d = c.get(l);
                  let u = !0;
                  d &&
                    (o != r &&
                      o >= d.startTime &&
                      r <= d.endTime &&
                      (e.errors.push(
                        (function eW(n, t, e, i, r) {
                          return new k(3010, !1);
                        })()
                      ),
                      (u = !1)),
                    (o = d.startTime)),
                    u && c.set(l, { startTime: o, endTime: r }),
                    e.options &&
                      (function RW(n, t, e) {
                        const i = t.params || {},
                          r = qk(n);
                        r.length &&
                          r.forEach((o) => {
                            i.hasOwnProperty(o) ||
                              e.push(
                                (function WG(n) {
                                  return new k(3001, !1);
                                })()
                              );
                          });
                      })(s, e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                (function tW() {
                  return new k(3011, !1);
                })()
              ),
              i
            );
          let o = 0;
          const a = [];
          let s = !1,
            l = !1,
            c = 0;
          const d = t.steps.map((x) => {
            const R = this._makeStyleAst(x, e);
            let M =
                null != R.offset
                  ? R.offset
                  : (function qW(n) {
                      if ('string' == typeof n) return null;
                      let t = null;
                      if (Array.isArray(n))
                        n.forEach((e) => {
                          if (e instanceof Map && e.has('offset')) {
                            const i = e;
                            (t = parseFloat(i.get('offset'))),
                              i.delete('offset');
                          }
                        });
                      else if (n instanceof Map && n.has('offset')) {
                        const e = n;
                        (t = parseFloat(e.get('offset'))), e.delete('offset');
                      }
                      return t;
                    })(R.styles),
              N = 0;
            return (
              null != M && (o++, (N = R.offset = M)),
              (l = l || N < 0 || N > 1),
              (s = s || N < c),
              (c = N),
              a.push(N),
              R
            );
          });
          l &&
            e.errors.push(
              (function nW() {
                return new k(3012, !1);
              })()
            ),
            s &&
              e.errors.push(
                (function iW() {
                  return new k(3200, !1);
                })()
              );
          const u = t.steps.length;
          let h = 0;
          o > 0 && o < u
            ? e.errors.push(
                (function rW() {
                  return new k(3202, !1);
                })()
              )
            : 0 == o && (h = 1 / (u - 1));
          const f = u - 1,
            g = e.currentTime,
            v = e.currentAnimateTimings,
            y = v.duration;
          return (
            d.forEach((x, R) => {
              const M = h > 0 ? (R == f ? 1 : h * R) : a[R],
                N = M * y;
              (e.currentTime = g + v.delay + N),
                (v.duration = N),
                this._validateStyleAst(x, e),
                (x.offset = M),
                i.styles.push(x);
            }),
            i
          );
        }
        visitReference(t, e) {
          return {
            type: 8,
            animation: bn(this, Kl(t.animation), e),
            options: po(t.options),
          };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: po(t.options) };
        }
        visitAnimateRef(t, e) {
          return {
            type: 10,
            animation: this.visitReference(t.animation, e),
            options: po(t.options),
          };
        }
        visitQuery(t, e) {
          const i = e.currentQuerySelector,
            r = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [o, a] = (function GW(n) {
            const t = !!n.split(/\s*,\s*/).find((e) => ':self' == e);
            return (
              t && (n = n.replace(UW, '')),
              (n = n
                .replace(/@\*/g, sh)
                .replace(/@\w+/g, (e) => sh + '-' + e.slice(1))
                .replace(/:animating/g, P_)),
              [n, t]
            );
          })(t.selector);
          (e.currentQuerySelector = i.length ? i + ' ' + o : o),
            vn(e.collectedStyles, e.currentQuerySelector, new Map());
          const s = bn(this, Kl(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: o,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: a,
              animation: s,
              originalSelector: t.selector,
              options: po(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery ||
            e.errors.push(
              (function oW() {
                return new k(3013, !1);
              })()
            );
          const i =
            'full' === t.timings
              ? { duration: 0, delay: 0, easing: 'full' }
              : lh(t.timings, e.errors, !0);
          return {
            type: 12,
            animation: bn(this, Kl(t.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class YW {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function po(n) {
        return (
          n
            ? (n = ql(n)).params &&
              (n.params = (function WW(n) {
                return n ? ql(n) : null;
              })(n.params))
            : (n = {}),
          n
        );
      }
      function H_(n, t, e) {
        return { duration: n, delay: t, easing: e };
      }
      function z_(n, t, e, i, r, o, a = null, s = !1) {
        return {
          type: 1,
          element: n,
          keyframes: t,
          preStyleProps: e,
          postStyleProps: i,
          duration: r,
          delay: o,
          totalTime: r + o,
          easing: a,
          subTimeline: s,
        };
      }
      class ph {
        constructor() {
          this._map = new Map();
        }
        get(t) {
          return this._map.get(t) || [];
        }
        append(t, e) {
          let i = this._map.get(t);
          i || this._map.set(t, (i = [])), i.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const QW = new RegExp(':enter', 'g'),
        eY = new RegExp(':leave', 'g');
      function j_(n, t, e, i, r, o = new Map(), a = new Map(), s, l, c = []) {
        return new tY().buildKeyframes(n, t, e, i, r, o, a, s, l, c);
      }
      class tY {
        buildKeyframes(t, e, i, r, o, a, s, l, c, d = []) {
          c = c || new ph();
          const u = new U_(t, e, c, r, o, d, []);
          u.options = l;
          const h = l.delay ? tr(l.delay) : 0;
          u.currentTimeline.delayNextStep(h),
            u.currentTimeline.setStyles([a], null, u.errors, l),
            bn(this, i, u);
          const f = u.timelines.filter((g) => g.containsAnimation());
          if (f.length && s.size) {
            let g;
            for (let v = f.length - 1; v >= 0; v--) {
              const y = f[v];
              if (y.element === e) {
                g = y;
                break;
              }
            }
            g &&
              !g.allowOnlyTimelineStyles() &&
              g.setStyles([s], null, u.errors, l);
          }
          return f.length
            ? f.map((g) => g.buildKeyframes())
            : [z_(e, [], [], [], 0, h, '', !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const i = e.subInstructions.get(e.element);
          if (i) {
            const r = e.createSubContext(t.options),
              o = e.currentTimeline.currentTime,
              a = this._visitSubInstructions(i, r, r.options);
            o != a && e.transformIntoNewTimeline(a);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const i = e.createSubContext(t.options);
          i.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [t.options, t.animation.options],
              e,
              i
            ),
            this.visitReference(t.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _applyAnimationRefDelays(t, e, i) {
          for (const r of t) {
            const o = r?.delay;
            if (o) {
              const a =
                'number' == typeof o ? o : tr(Xl(o, r?.params ?? {}, e.errors));
              i.delayNextStep(a);
            }
          }
        }
        _visitSubInstructions(t, e, i) {
          let o = e.currentTimeline.currentTime;
          const a = null != i.duration ? tr(i.duration) : null,
            s = null != i.delay ? tr(i.delay) : null;
          return (
            0 !== a &&
              t.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, a, s);
                o = Math.max(o, c.duration + c.delay);
              }),
            o
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0),
            bn(this, t.animation, e),
            (e.previousNode = t);
        }
        visitSequence(t, e) {
          const i = e.subContextCount;
          let r = e;
          const o = t.options;
          if (
            o &&
            (o.params || o.delay) &&
            ((r = e.createSubContext(o)),
            r.transformIntoNewTimeline(),
            null != o.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = gh));
            const a = tr(o.delay);
            r.delayNextStep(a);
          }
          t.steps.length &&
            (t.steps.forEach((a) => bn(this, a, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > i && r.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const i = [];
          let r = e.currentTimeline.currentTime;
          const o = t.options && t.options.delay ? tr(t.options.delay) : 0;
          t.steps.forEach((a) => {
            const s = e.createSubContext(t.options);
            o && s.delayNextStep(o),
              bn(this, a, s),
              (r = Math.max(r, s.currentTimeline.currentTime)),
              i.push(s.currentTimeline);
          }),
            i.forEach((a) => e.currentTimeline.mergeTimelineCollectedStyles(a)),
            e.transformIntoNewTimeline(r),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const i = t.strValue;
            return lh(e.params ? Xl(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            r = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), r.snapshotCurrentStyles());
          const o = t.style;
          5 == o.type
            ? this.visitKeyframes(o, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(o, e),
              r.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const i = e.currentTimeline,
            r = e.currentAnimateTimings;
          !r && i.hasCurrentStyleProperties() && i.forwardFrame();
          const o = (r && r.easing) || t.easing;
          t.isEmptyStep
            ? i.applyEmptyStep(o)
            : i.setStyles(t.styles, o, e.errors, e.options),
            (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const i = e.currentAnimateTimings,
            r = e.currentTimeline.duration,
            o = i.duration,
            s = e.createSubContext().currentTimeline;
          (s.easing = i.easing),
            t.styles.forEach((l) => {
              s.forwardTime((l.offset || 0) * o),
                s.setStyles(l.styles, l.easing, e.errors, e.options),
                s.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(s),
            e.transformIntoNewTimeline(r + o),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const i = e.currentTimeline.currentTime,
            r = t.options || {},
            o = r.delay ? tr(r.delay) : 0;
          o &&
            (6 === e.previousNode.type ||
              (0 == i && e.currentTimeline.hasCurrentStyleProperties())) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = gh));
          let a = i;
          const s = e.invokeQuery(
            t.selector,
            t.originalSelector,
            t.limit,
            t.includeSelf,
            !!r.optional,
            e.errors
          );
          e.currentQueryTotal = s.length;
          let l = null;
          s.forEach((c, d) => {
            e.currentQueryIndex = d;
            const u = e.createSubContext(t.options, c);
            o && u.delayNextStep(o),
              c === e.element && (l = u.currentTimeline),
              bn(this, t.animation, u),
              u.currentTimeline.applyStylesToKeyframe(),
              (a = Math.max(a, u.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(a),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const i = e.parentContext,
            r = e.currentTimeline,
            o = t.timings,
            a = Math.abs(o.duration),
            s = a * (e.currentQueryTotal - 1);
          let l = a * e.currentQueryIndex;
          switch (o.duration < 0 ? 'reverse' : o.easing) {
            case 'reverse':
              l = s - l;
              break;
            case 'full':
              l = i.currentStaggerTime;
          }
          const d = e.currentTimeline;
          l && d.delayNextStep(l);
          const u = d.currentTime;
          bn(this, t.animation, e),
            (e.previousNode = t),
            (i.currentStaggerTime =
              r.currentTime - u + (r.startTime - i.currentTimeline.startTime));
        }
      }
      const gh = {};
      class U_ {
        constructor(t, e, i, r, o, a, s, l) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = r),
            (this._leaveClassName = o),
            (this.errors = a),
            (this.timelines = s),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = gh),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new _h(this._driver, e, 0)),
            s.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const i = t;
          let r = this.options;
          null != i.duration && (r.duration = tr(i.duration)),
            null != i.delay && (r.delay = tr(i.delay));
          const o = i.params;
          if (o) {
            let a = r.params;
            a || (a = this.options.params = {}),
              Object.keys(o).forEach((s) => {
                (!e || !a.hasOwnProperty(s)) &&
                  (a[s] = Xl(o[s], a, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (t.params = {});
              Object.keys(e).forEach((r) => {
                i[r] = e[r];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, i) {
          const r = e || this.element,
            o = new U_(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, i || 0)
            );
          return (
            (o.previousNode = this.previousNode),
            (o.currentAnimateTimings = this.currentAnimateTimings),
            (o.options = this._copyOptions()),
            o.updateOptions(t),
            (o.currentQueryIndex = this.currentQueryIndex),
            (o.currentQueryTotal = this.currentQueryTotal),
            (o.parentContext = this),
            this.subContextCount++,
            o
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = gh),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, i) {
          const r = {
              duration: e ?? t.duration,
              delay: this.currentTimeline.currentTime + (i ?? 0) + t.delay,
              easing: '',
            },
            o = new nY(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              r,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(o), r;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, i, r, o, a) {
          let s = [];
          if ((r && s.push(this.element), t.length > 0)) {
            t = (t = t.replace(QW, '.' + this._enterClassName)).replace(
              eY,
              '.' + this._leaveClassName
            );
            let c = this._driver.query(this.element, t, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              s.push(...c);
          }
          return (
            !o &&
              0 == s.length &&
              a.push(
                (function aW(n) {
                  return new k(3014, !1);
                })()
              ),
            s
          );
        }
      }
      class _h {
        constructor(t, e, i, r) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t),
              e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new _h(
              this._driver,
              t,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(),
            (this.duration = t),
            this._loadKeyframe();
        }
        _updateStyle(t, e) {
          this._localTimelineStyles.set(t, e),
            this._globalTimelineStyles.set(t, e),
            this._styleSummary.set(t, { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && this._previousKeyframe.set('easing', t);
          for (let [e, i] of this._globalTimelineStyles)
            this._backFill.set(e, i || Yi), this._currentKeyframe.set(e, Yi);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(t, e, i, r) {
          e && this._previousKeyframe.set('easing', e);
          const o = (r && r.params) || {},
            a = (function iY(n, t) {
              const e = new Map();
              let i;
              return (
                n.forEach((r) => {
                  if ('*' === r) {
                    i = i || t.keys();
                    for (let o of i) e.set(o, Yi);
                  } else Sr(r, e);
                }),
                e
              );
            })(t, this._globalTimelineStyles);
          for (let [s, l] of a) {
            const c = Xl(l, o, i);
            this._pendingStyles.set(s, c),
              this._localTimelineStyles.has(s) ||
                this._backFill.set(s, this._globalTimelineStyles.get(s) ?? Yi),
              this._updateStyle(s, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((t, e) => {
              this._currentKeyframe.set(e, t);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((t, e) => {
              this._currentKeyframe.has(e) || this._currentKeyframe.set(e, t);
            }));
        }
        snapshotCurrentStyles() {
          for (let [t, e] of this._localTimelineStyles)
            this._pendingStyles.set(t, e), this._updateStyle(t, e);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          t._styleSummary.forEach((e, i) => {
            const r = this._styleSummary.get(i);
            (!r || e.time > r.time) && this._updateStyle(i, e.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((s, l) => {
            const c = Sr(s, new Map(), this._backFill);
            c.forEach((d, u) => {
              '!' === d ? t.add(u) : d === Yi && e.add(u);
            }),
              i || c.set('offset', l / this.duration),
              r.push(c);
          });
          const o = t.size ? ch(t.values()) : [],
            a = e.size ? ch(e.values()) : [];
          if (i) {
            const s = r[0],
              l = new Map(s);
            s.set('offset', 0), l.set('offset', 1), (r = [s, l]);
          }
          return z_(
            this.element,
            r,
            o,
            a,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class nY extends _h {
        constructor(t, e, i, r, o, a, s = !1) {
          super(t, e, a.delay),
            (this.keyframes = i),
            (this.preStyleProps = r),
            (this.postStyleProps = o),
            (this._stretchStartingKeyframe = s),
            (this.timings = {
              duration: a.duration,
              delay: a.delay,
              easing: a.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: i, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const o = [],
              a = i + e,
              s = e / a,
              l = Sr(t[0]);
            l.set('offset', 0), o.push(l);
            const c = Sr(t[0]);
            c.set('offset', Jk(s)), o.push(c);
            const d = t.length - 1;
            for (let u = 1; u <= d; u++) {
              let h = Sr(t[u]);
              const f = h.get('offset');
              h.set('offset', Jk((e + f * i) / a)), o.push(h);
            }
            (i = a), (e = 0), (r = ''), (t = o);
          }
          return z_(
            this.element,
            t,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            r,
            !0
          );
        }
      }
      function Jk(n, t = 3) {
        const e = Math.pow(10, t - 1);
        return Math.round(n * e) / e;
      }
      class $_ {}
      const rY = new Set([
        'width',
        'height',
        'minWidth',
        'minHeight',
        'maxWidth',
        'maxHeight',
        'left',
        'top',
        'bottom',
        'right',
        'fontSize',
        'outlineWidth',
        'outlineOffset',
        'paddingTop',
        'paddingLeft',
        'paddingBottom',
        'paddingRight',
        'marginTop',
        'marginLeft',
        'marginBottom',
        'marginRight',
        'borderRadius',
        'borderWidth',
        'borderTopWidth',
        'borderLeftWidth',
        'borderRightWidth',
        'borderBottomWidth',
        'textIndent',
        'perspective',
      ]);
      class oY extends $_ {
        normalizePropertyName(t, e) {
          return V_(t);
        }
        normalizeStyleValue(t, e, i, r) {
          let o = '';
          const a = i.toString().trim();
          if (rY.has(e) && 0 !== i && '0' !== i)
            if ('number' == typeof i) o = 'px';
            else {
              const s = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              s &&
                0 == s[1].length &&
                r.push(
                  (function KG(n, t) {
                    return new k(3005, !1);
                  })()
                );
            }
          return a + o;
        }
      }
      function e1(n, t, e, i, r, o, a, s, l, c, d, u, h) {
        return {
          type: 0,
          element: n,
          triggerName: t,
          isRemovalTransition: r,
          fromState: e,
          fromStyles: o,
          toState: i,
          toStyles: a,
          timelines: s,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: d,
          totalTime: u,
          errors: h,
        };
      }
      const G_ = {};
      class t1 {
        constructor(t, e, i) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = i);
        }
        match(t, e, i, r) {
          return (function aY(n, t, e, i, r) {
            return n.some((o) => o(t, e, i, r));
          })(this.ast.matchers, t, e, i, r);
        }
        buildStyles(t, e, i) {
          let r = this._stateStyles.get('*');
          return (
            void 0 !== t && (r = this._stateStyles.get(t?.toString()) || r),
            r ? r.buildStyles(e, i) : new Map()
          );
        }
        build(t, e, i, r, o, a, s, l, c, d) {
          const u = [],
            h = (this.ast.options && this.ast.options.params) || G_,
            g = this.buildStyles(i, (s && s.params) || G_, u),
            v = (l && l.params) || G_,
            y = this.buildStyles(r, v, u),
            x = new Set(),
            R = new Map(),
            M = new Map(),
            N = 'void' === r,
            Ee = { params: sY(v, h), delay: this.ast.options?.delay },
            Te = d ? [] : j_(t, e, this.ast.animation, o, a, g, y, Ee, c, u);
          let Bt = 0;
          if (
            (Te.forEach((ir) => {
              Bt = Math.max(ir.duration + ir.delay, Bt);
            }),
            u.length)
          )
            return e1(e, this._triggerName, i, r, N, g, y, [], [], R, M, Bt, u);
          Te.forEach((ir) => {
            const rr = ir.element,
              C1 = vn(R, rr, new Set());
            ir.preStyleProps.forEach((go) => C1.add(go));
            const Jl = vn(M, rr, new Set());
            ir.postStyleProps.forEach((go) => Jl.add(go)),
              rr !== e && x.add(rr);
          });
          const nr = ch(x.values());
          return e1(e, this._triggerName, i, r, N, g, y, Te, nr, R, M, Bt);
        }
      }
      function sY(n, t) {
        const e = ql(t);
        for (const i in n) n.hasOwnProperty(i) && null != n[i] && (e[i] = n[i]);
        return e;
      }
      class lY {
        constructor(t, e, i) {
          (this.styles = t), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(t, e) {
          const i = new Map(),
            r = ql(this.defaultParams);
          return (
            Object.keys(t).forEach((o) => {
              const a = t[o];
              null !== a && (r[o] = a);
            }),
            this.styles.styles.forEach((o) => {
              'string' != typeof o &&
                o.forEach((a, s) => {
                  a && (a = Xl(a, r, e));
                  const l = this.normalizer.normalizePropertyName(s, e);
                  (a = this.normalizer.normalizeStyleValue(s, l, a, e)),
                    i.set(s, a);
                });
            }),
            i
          );
        }
      }
      class dY {
        constructor(t, e, i) {
          (this.name = t),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = new Map()),
            e.states.forEach((r) => {
              this.states.set(
                r.name,
                new lY(r.style, (r.options && r.options.params) || {}, i)
              );
            }),
            n1(this.states, 'true', '1'),
            n1(this.states, 'false', '0'),
            e.transitions.forEach((r) => {
              this.transitionFactories.push(new t1(t, r, this.states));
            }),
            (this.fallbackTransition = (function uY(n, t, e) {
              return new t1(
                n,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(a, s) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                t
              );
            })(t, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, i, r) {
          return (
            this.transitionFactories.find((a) => a.match(t, e, i, r)) || null
          );
        }
        matchStyles(t, e, i) {
          return this.fallbackTransition.buildStyles(t, e, i);
        }
      }
      function n1(n, t, e) {
        n.has(t)
          ? n.has(e) || n.set(e, n.get(t))
          : n.has(e) && n.set(t, n.get(e));
      }
      const hY = new ph();
      class mY {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(t, e) {
          const i = [],
            o = B_(this._driver, e, i, []);
          if (i.length)
            throw (function mW(n) {
              return new k(3503, !1);
            })();
          this._animations.set(t, o);
        }
        _buildPlayer(t, e, i) {
          const r = t.element,
            o = Fk(0, this._normalizer, 0, t.keyframes, e, i);
          return this._driver.animate(
            r,
            o,
            t.duration,
            t.delay,
            t.easing,
            [],
            !0
          );
        }
        create(t, e, i = {}) {
          const r = [],
            o = this._animations.get(t);
          let a;
          const s = new Map();
          if (
            (o
              ? ((a = j_(
                  this._driver,
                  e,
                  o,
                  F_,
                  oh,
                  new Map(),
                  new Map(),
                  i,
                  hY,
                  r
                )),
                a.forEach((d) => {
                  const u = vn(s, d.element, new Map());
                  d.postStyleProps.forEach((h) => u.set(h, null));
                }))
              : (r.push(
                  (function fW() {
                    return new k(3300, !1);
                  })()
                ),
                (a = [])),
            r.length)
          )
            throw (function pW(n) {
              return new k(3504, !1);
            })();
          s.forEach((d, u) => {
            d.forEach((h, f) => {
              d.set(f, this._driver.computeStyle(u, f, Yi));
            });
          });
          const c = Er(
            a.map((d) => {
              const u = s.get(d.element);
              return this._buildPlayer(d, new Map(), u);
            })
          );
          return (
            this._playersById.set(t, c),
            c.onDestroy(() => this.destroy(t)),
            this.players.push(c),
            c
          );
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), this._playersById.delete(t);
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(t) {
          const e = this._playersById.get(t);
          if (!e)
            throw (function gW(n) {
              return new k(3301, !1);
            })();
          return e;
        }
        listen(t, e, i, r) {
          const o = T_(e, '', '', '');
          return k_(this._getPlayer(t), i, o, r), () => {};
        }
        command(t, e, i, r) {
          if ('register' == i) return void this.register(t, r[0]);
          if ('create' == i) return void this.create(t, e, r[0] || {});
          const o = this._getPlayer(t);
          switch (i) {
            case 'play':
              o.play();
              break;
            case 'pause':
              o.pause();
              break;
            case 'reset':
              o.reset();
              break;
            case 'restart':
              o.restart();
              break;
            case 'finish':
              o.finish();
              break;
            case 'init':
              o.init();
              break;
            case 'setPosition':
              o.setPosition(parseFloat(r[0]));
              break;
            case 'destroy':
              this.destroy(t);
          }
        }
      }
      const r1 = 'ng-animate-queued',
        W_ = 'ng-animate-disabled',
        vY = [],
        o1 = {
          namespaceId: '',
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        bY = {
          namespaceId: '',
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        Pn = '__ng_removed';
      class Y_ {
        get params() {
          return this.options.params;
        }
        constructor(t, e = '') {
          this.namespaceId = e;
          const i = t && t.hasOwnProperty('value');
          if (
            ((this.value = (function xY(n) {
              return n ?? null;
            })(i ? t.value : t)),
            i)
          ) {
            const o = ql(t);
            delete o.value, (this.options = o);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((r) => {
              null == i[r] && (i[r] = e[r]);
            });
          }
        }
      }
      const Zl = 'void',
        q_ = new Y_(Zl);
      class yY {
        constructor(t, e, i) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + t),
            Nn(e, this._hostClassName);
        }
        listen(t, e, i, r) {
          if (!this._triggers.has(e))
            throw (function _W(n, t) {
              return new k(3302, !1);
            })();
          if (null == i || 0 == i.length)
            throw (function vW(n) {
              return new k(3303, !1);
            })();
          if (
            !(function DY(n) {
              return 'start' == n || 'done' == n;
            })(i)
          )
            throw (function bW(n, t) {
              return new k(3400, !1);
            })();
          const o = vn(this._elementListeners, t, []),
            a = { name: e, phase: i, callback: r };
          o.push(a);
          const s = vn(this._engine.statesByElement, t, new Map());
          return (
            s.has(e) || (Nn(t, ah), Nn(t, ah + '-' + e), s.set(e, q_)),
            () => {
              this._engine.afterFlush(() => {
                const l = o.indexOf(a);
                l >= 0 && o.splice(l, 1), this._triggers.has(e) || s.delete(e);
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers.has(t) && (this._triggers.set(t, e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers.get(t);
          if (!e)
            throw (function yW(n) {
              return new k(3401, !1);
            })();
          return e;
        }
        trigger(t, e, i, r = !0) {
          const o = this._getTrigger(e),
            a = new K_(this.id, e, t);
          let s = this._engine.statesByElement.get(t);
          s ||
            (Nn(t, ah),
            Nn(t, ah + '-' + e),
            this._engine.statesByElement.set(t, (s = new Map())));
          let l = s.get(e);
          const c = new Y_(i, this.id);
          if (
            (!(i && i.hasOwnProperty('value')) &&
              l &&
              c.absorbOptions(l.options),
            s.set(e, c),
            l || (l = q_),
            c.value !== Zl && l.value === c.value)
          ) {
            if (
              !(function SY(n, t) {
                const e = Object.keys(n),
                  i = Object.keys(t);
                if (e.length != i.length) return !1;
                for (let r = 0; r < e.length; r++) {
                  const o = e[r];
                  if (!t.hasOwnProperty(o) || n[o] !== t[o]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const v = [],
                y = o.matchStyles(l.value, l.params, v),
                x = o.matchStyles(c.value, c.params, v);
              v.length
                ? this._engine.reportError(v)
                : this._engine.afterFlush(() => {
                    fo(t, y), Si(t, x);
                  });
            }
            return;
          }
          const h = vn(this._engine.playersByElement, t, []);
          h.forEach((v) => {
            v.namespaceId == this.id &&
              v.triggerName == e &&
              v.queued &&
              v.destroy();
          });
          let f = o.matchTransition(l.value, c.value, t, c.params),
            g = !1;
          if (!f) {
            if (!r) return;
            (f = o.fallbackTransition), (g = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: f,
              fromState: l,
              toState: c,
              player: a,
              isFallbackTransition: g,
            }),
            g ||
              (Nn(t, r1),
              a.onStart(() => {
                Ba(t, r1);
              })),
            a.onDone(() => {
              let v = this.players.indexOf(a);
              v >= 0 && this.players.splice(v, 1);
              const y = this._engine.playersByElement.get(t);
              if (y) {
                let x = y.indexOf(a);
                x >= 0 && y.splice(x, 1);
              }
            }),
            this.players.push(a),
            h.push(a),
            a
          );
        }
        deregister(t) {
          this._triggers.delete(t),
            this._engine.statesByElement.forEach((e) => e.delete(t)),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((r) => r.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t),
            this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const i = this._engine.driver.query(t, sh, !0);
          i.forEach((r) => {
            if (r[Pn]) return;
            const o = this._engine.fetchNamespacesByElement(r);
            o.size
              ? o.forEach((a) => a.triggerLeaveAnimation(r, e, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(t, e, i, r) {
          const o = this._engine.statesByElement.get(t),
            a = new Map();
          if (o) {
            const s = [];
            if (
              (o.forEach((l, c) => {
                if ((a.set(c, l.value), this._triggers.has(c))) {
                  const d = this.trigger(t, c, Zl, r);
                  d && s.push(d);
                }
              }),
              s.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e, a),
                i && Er(s).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t),
            i = this._engine.statesByElement.get(t);
          if (e && i) {
            const r = new Set();
            e.forEach((o) => {
              const a = o.name;
              if (r.has(a)) return;
              r.add(a);
              const l = this._triggers.get(a).fallbackTransition,
                c = i.get(a) || q_,
                d = new Y_(Zl),
                u = new K_(this.id, a, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: a,
                  transition: l,
                  fromState: c,
                  toState: d,
                  player: u,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const i = this._engine;
          if (
            (t.childElementCount && this._signalRemovalForInnerTriggers(t, e),
            this.triggerLeaveAnimation(t, e, !0))
          )
            return;
          let r = !1;
          if (i.totalAnimations) {
            const o = i.players.length ? i.playersByQueriedElement.get(t) : [];
            if (o && o.length) r = !0;
            else {
              let a = t;
              for (; (a = a.parentNode); )
                if (i.statesByElement.get(a)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), r))
            i.markElementAsRemoved(this.id, t, !1, e);
          else {
            const o = t[Pn];
            (!o || o === o1) &&
              (i.afterFlush(() => this.clearElementCache(t)),
              i.destroyInnerAnimations(t),
              i._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          Nn(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const r = i.player;
              if (r.destroyed) return;
              const o = i.element,
                a = this._elementListeners.get(o);
              a &&
                a.forEach((s) => {
                  if (s.name == i.triggerName) {
                    const l = T_(
                      o,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = t), k_(i.player, s.phase, l, s.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, r) => {
              const o = i.transition.ast.depCount,
                a = r.transition.ast.depCount;
              return 0 == o || 0 == a
                ? o - a
                : this._engine.driver.containsElement(i.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return (
            this._elementListeners.has(t) && (e = !0),
            (e = !!this._queue.find((i) => i.element === t) || e),
            e
          );
        }
      }
      class wY {
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, o) => {});
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && t.push(i);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const i = new yY(t, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = i)
          );
        }
        _balanceNamespaceList(t, e) {
          const i = this._namespaceList,
            r = this.namespacesByHostElement;
          if (i.length - 1 >= 0) {
            let a = !1,
              s = this.driver.getParentElement(e);
            for (; s; ) {
              const l = r.get(s);
              if (l) {
                const c = i.indexOf(l);
                i.splice(c + 1, 0, t), (a = !0);
                break;
              }
              s = this.driver.getParentElement(s);
            }
            a || i.unshift(t);
          } else i.push(t);
          return r.set(e, t), t;
        }
        register(t, e) {
          let i = this._namespaceLookup[t];
          return i || (i = this.createNamespace(t, e)), i;
        }
        registerTrigger(t, e, i) {
          let r = this._namespaceLookup[t];
          r && r.register(e, i) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const i = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(i.hostElement),
              delete this._namespaceLookup[t];
            const r = this._namespaceList.indexOf(i);
            r >= 0 && this._namespaceList.splice(r, 1);
          }),
            this.afterFlushAnimationsDone(() => i.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            i = this.statesByElement.get(t);
          if (i)
            for (let r of i.values())
              if (r.namespaceId) {
                const o = this._fetchNamespace(r.namespaceId);
                o && e.add(o);
              }
          return e;
        }
        trigger(t, e, i, r) {
          if (vh(e)) {
            const o = this._fetchNamespace(t);
            if (o) return o.trigger(e, i, r), !0;
          }
          return !1;
        }
        insertNode(t, e, i, r) {
          if (!vh(e)) return;
          const o = e[Pn];
          if (o && o.setForRemoval) {
            (o.setForRemoval = !1), (o.setForMove = !0);
            const a = this.collectedLeaveElements.indexOf(e);
            a >= 0 && this.collectedLeaveElements.splice(a, 1);
          }
          if (t) {
            const a = this._fetchNamespace(t);
            a && a.insertNode(e, i);
          }
          r && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) ||
              (this.disabledNodes.add(t), Nn(t, W_))
            : this.disabledNodes.has(t) &&
              (this.disabledNodes.delete(t), Ba(t, W_));
        }
        removeNode(t, e, i, r) {
          if (vh(e)) {
            const o = t ? this._fetchNamespace(t) : null;
            if (
              (o ? o.removeNode(e, r) : this.markElementAsRemoved(t, e, !1, r),
              i)
            ) {
              const a = this.namespacesByHostElement.get(e);
              a && a.id !== t && a.removeNode(e, r);
            }
          } else this._onRemovalComplete(e, r);
        }
        markElementAsRemoved(t, e, i, r, o) {
          this.collectedLeaveElements.push(e),
            (e[Pn] = {
              namespaceId: t,
              setForRemoval: r,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: o,
            });
        }
        listen(t, e, i, r, o) {
          return vh(e) ? this._fetchNamespace(t).listen(e, i, r, o) : () => {};
        }
        _buildInstruction(t, e, i, r, o) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            i,
            r,
            t.fromState.options,
            t.toState.options,
            e,
            o
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, sh, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, P_, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return Er(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t[Pn];
          if (e && e.setForRemoval) {
            if (((t[Pn] = o1), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          t.classList?.contains(W_) && this.markElementAsDisabled(t, !1),
            this.driver.query(t, '.ng-animate-disabled', !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, r) =>
                this._balanceNamespaceList(i, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              Nn(this.collectedEnterElements[i], 'ng-star-inserted');
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, t);
            } finally {
              for (let r = 0; r < i.length; r++) i[r]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? Er(e).onDone(() => {
                    i.forEach((r) => r());
                  })
                : i.forEach((r) => r());
          }
        }
        reportError(t) {
          throw (function wW(n) {
            return new k(3402, !1);
          })();
        }
        _flushAnimations(t, e) {
          const i = new ph(),
            r = [],
            o = new Map(),
            a = [],
            s = new Map(),
            l = new Map(),
            c = new Map(),
            d = new Set();
          this.disabledNodes.forEach(($) => {
            d.add($);
            const K = this.driver.query($, '.ng-animate-queued', !0);
            for (let te = 0; te < K.length; te++) d.add(K[te]);
          });
          const u = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            f = l1(h, this.collectedEnterElements),
            g = new Map();
          let v = 0;
          f.forEach(($, K) => {
            const te = F_ + v++;
            g.set(K, te), $.forEach((ke) => Nn(ke, te));
          });
          const y = [],
            x = new Set(),
            R = new Set();
          for (let $ = 0; $ < this.collectedLeaveElements.length; $++) {
            const K = this.collectedLeaveElements[$],
              te = K[Pn];
            te &&
              te.setForRemoval &&
              (y.push(K),
              x.add(K),
              te.hasAnimation
                ? this.driver
                    .query(K, '.ng-star-inserted', !0)
                    .forEach((ke) => x.add(ke))
                : R.add(K));
          }
          const M = new Map(),
            N = l1(h, Array.from(x));
          N.forEach(($, K) => {
            const te = oh + v++;
            M.set(K, te), $.forEach((ke) => Nn(ke, te));
          }),
            t.push(() => {
              f.forEach(($, K) => {
                const te = g.get(K);
                $.forEach((ke) => Ba(ke, te));
              }),
                N.forEach(($, K) => {
                  const te = M.get(K);
                  $.forEach((ke) => Ba(ke, te));
                }),
                y.forEach(($) => {
                  this.processLeaveNode($);
                });
            });
          const Ee = [],
            Te = [];
          for (let $ = this._namespaceList.length - 1; $ >= 0; $--)
            this._namespaceList[$].drainQueuedTransitions(e).forEach((te) => {
              const ke = te.player,
                Mt = te.element;
              if ((Ee.push(ke), this.collectedEnterElements.length)) {
                const Ht = Mt[Pn];
                if (Ht && Ht.setForMove) {
                  if (
                    Ht.previousTriggersValues &&
                    Ht.previousTriggersValues.has(te.triggerName)
                  ) {
                    const _o = Ht.previousTriggersValues.get(te.triggerName),
                      Ln = this.statesByElement.get(te.element);
                    if (Ln && Ln.has(te.triggerName)) {
                      const xh = Ln.get(te.triggerName);
                      (xh.value = _o), Ln.set(te.triggerName, xh);
                    }
                  }
                  return void ke.destroy();
                }
              }
              const ki = !u || !this.driver.containsElement(u, Mt),
                yn = M.get(Mt),
                kr = g.get(Mt),
                nt = this._buildInstruction(te, i, kr, yn, ki);
              if (nt.errors && nt.errors.length) return void Te.push(nt);
              if (ki)
                return (
                  ke.onStart(() => fo(Mt, nt.fromStyles)),
                  ke.onDestroy(() => Si(Mt, nt.toStyles)),
                  void r.push(ke)
                );
              if (te.isFallbackTransition)
                return (
                  ke.onStart(() => fo(Mt, nt.fromStyles)),
                  ke.onDestroy(() => Si(Mt, nt.toStyles)),
                  void r.push(ke)
                );
              const M1 = [];
              nt.timelines.forEach((Ht) => {
                (Ht.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(Ht.element) || M1.push(Ht);
              }),
                (nt.timelines = M1),
                i.append(Mt, nt.timelines),
                a.push({ instruction: nt, player: ke, element: Mt }),
                nt.queriedElements.forEach((Ht) => vn(s, Ht, []).push(ke)),
                nt.preStyleProps.forEach((Ht, _o) => {
                  if (Ht.size) {
                    let Ln = l.get(_o);
                    Ln || l.set(_o, (Ln = new Set())),
                      Ht.forEach((xh, ev) => Ln.add(ev));
                  }
                }),
                nt.postStyleProps.forEach((Ht, _o) => {
                  let Ln = c.get(_o);
                  Ln || c.set(_o, (Ln = new Set())),
                    Ht.forEach((xh, ev) => Ln.add(ev));
                });
            });
          if (Te.length) {
            const $ = [];
            Te.forEach((K) => {
              $.push(
                (function CW(n, t) {
                  return new k(3505, !1);
                })()
              );
            }),
              Ee.forEach((K) => K.destroy()),
              this.reportError($);
          }
          const Bt = new Map(),
            nr = new Map();
          a.forEach(($) => {
            const K = $.element;
            i.has(K) &&
              (nr.set(K, K),
              this._beforeAnimationBuild(
                $.player.namespaceId,
                $.instruction,
                Bt
              ));
          }),
            r.forEach(($) => {
              const K = $.element;
              this._getPreviousPlayers(
                K,
                !1,
                $.namespaceId,
                $.triggerName,
                null
              ).forEach((ke) => {
                vn(Bt, K, []).push(ke), ke.destroy();
              });
            });
          const ir = y.filter(($) => d1($, l, c)),
            rr = new Map();
          s1(rr, this.driver, R, c, Yi).forEach(($) => {
            d1($, l, c) && ir.push($);
          });
          const Jl = new Map();
          f.forEach(($, K) => {
            s1(Jl, this.driver, new Set($), l, '!');
          }),
            ir.forEach(($) => {
              const K = rr.get($),
                te = Jl.get($);
              rr.set(
                $,
                new Map([
                  ...Array.from(K?.entries() ?? []),
                  ...Array.from(te?.entries() ?? []),
                ])
              );
            });
          const go = [],
            x1 = [],
            D1 = {};
          a.forEach(($) => {
            const { element: K, player: te, instruction: ke } = $;
            if (i.has(K)) {
              if (d.has(K))
                return (
                  te.onDestroy(() => Si(K, ke.toStyles)),
                  (te.disabled = !0),
                  te.overrideTotalTime(ke.totalTime),
                  void r.push(te)
                );
              let Mt = D1;
              if (nr.size > 1) {
                let yn = K;
                const kr = [];
                for (; (yn = yn.parentNode); ) {
                  const nt = nr.get(yn);
                  if (nt) {
                    Mt = nt;
                    break;
                  }
                  kr.push(yn);
                }
                kr.forEach((nt) => nr.set(nt, Mt));
              }
              const ki = this._buildAnimation(
                te.namespaceId,
                ke,
                Bt,
                o,
                Jl,
                rr
              );
              if ((te.setRealPlayer(ki), Mt === D1)) go.push(te);
              else {
                const yn = this.playersByElement.get(Mt);
                yn && yn.length && (te.parentPlayer = Er(yn)), r.push(te);
              }
            } else
              fo(K, ke.fromStyles),
                te.onDestroy(() => Si(K, ke.toStyles)),
                x1.push(te),
                d.has(K) && r.push(te);
          }),
            x1.forEach(($) => {
              const K = o.get($.element);
              if (K && K.length) {
                const te = Er(K);
                $.setRealPlayer(te);
              }
            }),
            r.forEach(($) => {
              $.parentPlayer ? $.syncPlayerEvents($.parentPlayer) : $.destroy();
            });
          for (let $ = 0; $ < y.length; $++) {
            const K = y[$],
              te = K[Pn];
            if ((Ba(K, oh), te && te.hasAnimation)) continue;
            let ke = [];
            if (s.size) {
              let ki = s.get(K);
              ki && ki.length && ke.push(...ki);
              let yn = this.driver.query(K, P_, !0);
              for (let kr = 0; kr < yn.length; kr++) {
                let nt = s.get(yn[kr]);
                nt && nt.length && ke.push(...nt);
              }
            }
            const Mt = ke.filter((ki) => !ki.destroyed);
            Mt.length ? MY(this, K, Mt) : this.processLeaveNode(K);
          }
          return (
            (y.length = 0),
            go.forEach(($) => {
              this.players.push($),
                $.onDone(() => {
                  $.destroy();
                  const K = this.players.indexOf($);
                  this.players.splice(K, 1);
                }),
                $.play();
            }),
            go
          );
        }
        elementContainsData(t, e) {
          let i = !1;
          const r = e[Pn];
          return (
            r && r.setForRemoval && (i = !0),
            this.playersByElement.has(e) && (i = !0),
            this.playersByQueriedElement.has(e) && (i = !0),
            this.statesByElement.has(e) && (i = !0),
            this._fetchNamespace(t).elementContainsData(e) || i
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, i, r, o) {
          let a = [];
          if (e) {
            const s = this.playersByQueriedElement.get(t);
            s && (a = s);
          } else {
            const s = this.playersByElement.get(t);
            if (s) {
              const l = !o || o == Zl;
              s.forEach((c) => {
                c.queued || (!l && c.triggerName != r) || a.push(c);
              });
            }
          }
          return (
            (i || r) &&
              (a = a.filter(
                (s) => !((i && i != s.namespaceId) || (r && r != s.triggerName))
              )),
            a
          );
        }
        _beforeAnimationBuild(t, e, i) {
          const o = e.element,
            a = e.isRemovalTransition ? void 0 : t,
            s = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              d = c !== o,
              u = vn(i, c, []);
            this._getPreviousPlayers(c, d, a, s, e.toState).forEach((f) => {
              const g = f.getRealPlayer();
              g.beforeDestroy && g.beforeDestroy(), f.destroy(), u.push(f);
            });
          }
          fo(o, e.fromStyles);
        }
        _buildAnimation(t, e, i, r, o, a) {
          const s = e.triggerName,
            l = e.element,
            c = [],
            d = new Set(),
            u = new Set(),
            h = e.timelines.map((g) => {
              const v = g.element;
              d.add(v);
              const y = v[Pn];
              if (y && y.removedBeforeQueried)
                return new ml(g.duration, g.delay);
              const x = v !== l,
                R = (function EY(n) {
                  const t = [];
                  return c1(n, t), t;
                })((i.get(v) || vY).map((Bt) => Bt.getRealPlayer())).filter(
                  (Bt) => !!Bt.element && Bt.element === v
                ),
                M = o.get(v),
                N = a.get(v),
                Ee = Fk(0, this._normalizer, 0, g.keyframes, M, N),
                Te = this._buildPlayer(g, Ee, R);
              if ((g.subTimeline && r && u.add(v), x)) {
                const Bt = new K_(t, s, v);
                Bt.setRealPlayer(Te), c.push(Bt);
              }
              return Te;
            });
          c.forEach((g) => {
            vn(this.playersByQueriedElement, g.element, []).push(g),
              g.onDone(() =>
                (function CY(n, t, e) {
                  let i = n.get(t);
                  if (i) {
                    if (i.length) {
                      const r = i.indexOf(e);
                      i.splice(r, 1);
                    }
                    0 == i.length && n.delete(t);
                  }
                  return i;
                })(this.playersByQueriedElement, g.element, g)
              );
          }),
            d.forEach((g) => Nn(g, Uk));
          const f = Er(h);
          return (
            f.onDestroy(() => {
              d.forEach((g) => Ba(g, Uk)), Si(l, e.toStyles);
            }),
            u.forEach((g) => {
              vn(r, g, []).push(f);
            }),
            f
          );
        }
        _buildPlayer(t, e, i) {
          return e.length > 0
            ? this.driver.animate(
                t.element,
                e,
                t.duration,
                t.delay,
                t.easing,
                i
              )
            : new ml(t.duration, t.delay);
        }
      }
      class K_ {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new ml()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            this._queuedCallbacks.forEach((e, i) => {
              e.forEach((r) => k_(t, i, void 0, r));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback('start')),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          vn(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent('done', t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent('start', t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent('destroy', t),
            this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function vh(n) {
        return n && 1 === n.nodeType;
      }
      function a1(n, t) {
        const e = n.style.display;
        return (n.style.display = t ?? 'none'), e;
      }
      function s1(n, t, e, i, r) {
        const o = [];
        e.forEach((l) => o.push(a1(l)));
        const a = [];
        i.forEach((l, c) => {
          const d = new Map();
          l.forEach((u) => {
            const h = t.computeStyle(c, u, r);
            d.set(u, h), (!h || 0 == h.length) && ((c[Pn] = bY), a.push(c));
          }),
            n.set(c, d);
        });
        let s = 0;
        return e.forEach((l) => a1(l, o[s++])), a;
      }
      function l1(n, t) {
        const e = new Map();
        if ((n.forEach((s) => e.set(s, [])), 0 == t.length)) return e;
        const r = new Set(t),
          o = new Map();
        function a(s) {
          if (!s) return 1;
          let l = o.get(s);
          if (l) return l;
          const c = s.parentNode;
          return (l = e.has(c) ? c : r.has(c) ? 1 : a(c)), o.set(s, l), l;
        }
        return (
          t.forEach((s) => {
            const l = a(s);
            1 !== l && e.get(l).push(s);
          }),
          e
        );
      }
      function Nn(n, t) {
        n.classList?.add(t);
      }
      function Ba(n, t) {
        n.classList?.remove(t);
      }
      function MY(n, t, e) {
        Er(e).onDone(() => n.processLeaveNode(t));
      }
      function c1(n, t) {
        for (let e = 0; e < n.length; e++) {
          const i = n[e];
          i instanceof yE ? c1(i.players, t) : t.push(i);
        }
      }
      function d1(n, t, e) {
        const i = e.get(n);
        if (!i) return !1;
        let r = t.get(n);
        return r ? i.forEach((o) => r.add(o)) : t.set(n, i), e.delete(n), !0;
      }
      class bh {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, o) => {}),
            (this._transitionEngine = new wY(t, e, i)),
            (this._timelineEngine = new mY(t, e, i)),
            (this._transitionEngine.onRemovalComplete = (r, o) =>
              this.onRemovalComplete(r, o));
        }
        registerTrigger(t, e, i, r, o) {
          const a = t + '-' + r;
          let s = this._triggerCache[a];
          if (!s) {
            const l = [],
              d = B_(this._driver, o, l, []);
            if (l.length)
              throw (function uW(n, t) {
                return new k(3404, !1);
              })();
            (s = (function cY(n, t, e) {
              return new dY(n, t, e);
            })(r, d, this._normalizer)),
              (this._triggerCache[a] = s);
          }
          this._transitionEngine.registerTrigger(e, r, s);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, i, r) {
          this._transitionEngine.insertNode(t, e, i, r);
        }
        onRemove(t, e, i, r) {
          this._transitionEngine.removeNode(t, e, r || !1, i);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, i, r) {
          if ('@' == i.charAt(0)) {
            const [o, a] = Pk(i);
            this._timelineEngine.command(o, e, a, r);
          } else this._transitionEngine.trigger(t, e, i, r);
        }
        listen(t, e, i, r, o) {
          if ('@' == i.charAt(0)) {
            const [a, s] = Pk(i);
            return this._timelineEngine.listen(a, e, s, o);
          }
          return this._transitionEngine.listen(t, e, i, r, o);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let AY = (() => {
        class n {
          constructor(e, i, r) {
            (this._element = e),
              (this._startStyles = i),
              (this._endStyles = r),
              (this._state = 0);
            let o = n.initialStylesByElement.get(e);
            o || n.initialStylesByElement.set(e, (o = new Map())),
              (this._initialStyles = o);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Si(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Si(this._element, this._initialStyles),
                this._endStyles &&
                  (Si(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (n.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (fo(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (fo(this._element, this._endStyles),
                  (this._endStyles = null)),
                Si(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (n.initialStylesByElement = new WeakMap()), n;
      })();
      function X_(n) {
        let t = null;
        return (
          n.forEach((e, i) => {
            (function TY(n) {
              return 'display' === n || 'position' === n;
            })(i) && ((t = t || new Map()), t.set(i, e));
          }),
          t
        );
      }
      class u1 {
        constructor(t, e, i, r) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            t,
            this.options
          )),
            (this._finalKeyframe = t.length ? t[t.length - 1] : new Map()),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(t) {
          const e = [];
          return (
            t.forEach((i) => {
              e.push(Object.fromEntries(i));
            }),
            e
          );
        }
        _triggerWebAnimation(t, e, i) {
          return t.animate(this._convertKeyframesToObject(e), i);
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = t * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((i, r) => {
              'offset' !== r &&
                t.set(r, this._finished ? i : Kk(this.element, r));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = 'start' === t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class IY {
        validateStyleProperty(t) {
          return !0;
        }
        validateAnimatableStyleProperty(t) {
          return !0;
        }
        matchesElement(t, e) {
          return !1;
        }
        containsElement(t, e) {
          return Bk(t, e);
        }
        getParentElement(t) {
          return R_(t);
        }
        query(t, e, i) {
          return Hk(t, e, i);
        }
        computeStyle(t, e, i) {
          return window.getComputedStyle(t)[e];
        }
        animate(t, e, i, r, o, a = []) {
          const l = {
            duration: i,
            delay: r,
            fill: 0 == r ? 'both' : 'forwards',
          };
          o && (l.easing = o);
          const c = new Map(),
            d = a.filter((f) => f instanceof u1);
          (function PW(n, t) {
            return 0 === n || 0 === t;
          })(i, r) &&
            d.forEach((f) => {
              f.currentSnapshot.forEach((g, v) => c.set(v, g));
            });
          let u = (function IW(n) {
            return n.length
              ? n[0] instanceof Map
                ? n
                : n.map((t) => $k(t))
              : [];
          })(e).map((f) => Sr(f));
          u = (function NW(n, t, e) {
            if (e.size && t.length) {
              let i = t[0],
                r = [];
              if (
                (e.forEach((o, a) => {
                  i.has(a) || r.push(a), i.set(a, o);
                }),
                r.length)
              )
                for (let o = 1; o < t.length; o++) {
                  let a = t[o];
                  r.forEach((s) => a.set(s, Kk(n, s)));
                }
            }
            return t;
          })(t, u, c);
          const h = (function kY(n, t) {
            let e = null,
              i = null;
            return (
              Array.isArray(t) && t.length
                ? ((e = X_(t[0])), t.length > 1 && (i = X_(t[t.length - 1])))
                : t instanceof Map && (e = X_(t)),
              e || i ? new AY(n, e, i) : null
            );
          })(t, u);
          return new u1(t, u, l, h);
        }
      }
      let RY = (() => {
        class n extends gE {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: '0',
                encapsulation: Hn.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(e) ? _E(e) : e;
            return (
              h1(this._renderer, null, i, 'register', [r]),
              new OY(i, this._renderer)
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(ms), C(oe));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class OY extends aj {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new FY(this._id, t, e || {}, this._renderer);
        }
      }
      class FY {
        constructor(t, e, i, r) {
          (this.id = t),
            (this.element = e),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', i);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return h1(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen('done', t);
        }
        onStart(t) {
          this._listen('start', t);
        }
        onDestroy(t) {
          this._listen('destroy', t);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset'), (this._started = !1);
        }
        setPosition(t) {
          this._command('setPosition', t);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function h1(n, t, e, i, r) {
        return n.setProperty(t, `@@${e}:${i}`, r);
      }
      const m1 = '@.disabled';
      let PY = (() => {
        class n {
          constructor(e, i, r) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (i.onRemovalComplete = (o, a) => {
                const s = a?.parentNode(o);
                s && a.removeChild(s, o);
              });
          }
          createRenderer(e, i) {
            const o = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let d = this._rendererCache.get(o);
              return (
                d ||
                  ((d = new f1('', o, this.engine, () =>
                    this._rendererCache.delete(o)
                  )),
                  this._rendererCache.set(o, d)),
                d
              );
            }
            const a = i.id,
              s = i.id + '-' + this._currentId;
            this._currentId++, this.engine.register(s, e);
            const l = (d) => {
              Array.isArray(d)
                ? d.forEach(l)
                : this.engine.registerTrigger(a, s, e, d.name, d);
            };
            return i.data.animation.forEach(l), new NY(this, s, o, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, r) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((o) => {
                        const [a, s] = o;
                        a(s);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(C(ms), C(bh), C(U));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class f1 {
        constructor(t, e, i, r) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = i),
            (this._onDestroy = r),
            (this.destroyNode = this.delegate.destroyNode
              ? (o) => e.destroyNode(o)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy(),
            this._onDestroy?.();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e),
            this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, i, r = !0) {
          this.delegate.insertBefore(t, e, i),
            this.engine.onInsert(this.namespaceId, e, t, r);
        }
        removeChild(t, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, i);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, i, r) {
          this.delegate.setAttribute(t, e, i, r);
        }
        removeAttribute(t, e, i) {
          this.delegate.removeAttribute(t, e, i);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, i, r) {
          this.delegate.setStyle(t, e, i, r);
        }
        removeStyle(t, e, i) {
          this.delegate.removeStyle(t, e, i);
        }
        setProperty(t, e, i) {
          '@' == e.charAt(0) && e == m1
            ? this.disableAnimations(t, !!i)
            : this.delegate.setProperty(t, e, i);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, i) {
          return this.delegate.listen(t, e, i);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class NY extends f1 {
        constructor(t, e, i, r, o) {
          super(e, i, r, o), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, i) {
          '@' == e.charAt(0)
            ? '.' == e.charAt(1) && e == m1
              ? this.disableAnimations(t, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, t, e.slice(1), i)
            : this.delegate.setProperty(t, e, i);
        }
        listen(t, e, i) {
          if ('@' == e.charAt(0)) {
            const r = (function LY(n) {
              switch (n) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return n;
              }
            })(t);
            let o = e.slice(1),
              a = '';
            return (
              '@' != o.charAt(0) &&
                ([o, a] = (function VY(n) {
                  const t = n.indexOf('.');
                  return [n.substring(0, t), n.slice(t + 1)];
                })(o)),
              this.engine.listen(this.namespaceId, r, o, a, (s) => {
                this.factory.scheduleListenerCallback(s._data || -1, i, s);
              })
            );
          }
          return this.delegate.listen(t, e, i);
        }
      }
      const p1 = [
          { provide: gE, useClass: RY },
          {
            provide: $_,
            useFactory: function HY() {
              return new oY();
            },
          },
          {
            provide: bh,
            useClass: (() => {
              class n extends bh {
                constructor(e, i, r, o) {
                  super(e.body, i, r);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (n.ɵfac = function (e) {
                  return new (e || n)(C(oe), C(O_), C($_), C(ra));
                }),
                (n.ɵprov = I({ token: n, factory: n.ɵfac })),
                n
              );
            })(),
          },
          {
            provide: ms,
            useFactory: function zY(n, t, e) {
              return new PY(n, t, e);
            },
            deps: [Fd, bh, U],
          },
        ],
        Z_ = [
          { provide: O_, useFactory: () => new IY() },
          { provide: Yt, useValue: 'BrowserAnimations' },
          ...p1,
        ],
        g1 = [
          { provide: O_, useClass: zk },
          { provide: Yt, useValue: 'NoopAnimations' },
          ...p1,
        ];
      let _1 = (() => {
          class n {
            static withConfig(e) {
              return { ngModule: n, providers: e.disableAnimations ? g1 : Z_ };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = he({ type: n })),
            (n.ɵinj = de({ providers: Z_, imports: [Sp] })),
            n
          );
        })(),
        $Y = (() => {
          class n {
            constructor() {
              (this.changes = new z()),
                (this.calendarLabel = 'Calendar'),
                (this.openCalendarLabel = 'Open calendar'),
                (this.closeCalendarLabel = 'Close calendar'),
                (this.prevMonthLabel = 'Previous month'),
                (this.nextMonthLabel = 'Next month'),
                (this.prevYearLabel = 'Previous year'),
                (this.nextYearLabel = 'Next year'),
                (this.prevMultiYearLabel = 'Previous 24 years'),
                (this.nextMultiYearLabel = 'Next 24 years'),
                (this.switchToMonthViewLabel = 'Choose date'),
                (this.switchToMultiYearViewLabel = 'Choose month and year'),
                (this.startDateLabel = 'Start date'),
                (this.endDateLabel = 'End date');
            }
            formatYearRange(e, i) {
              return `${e} \u2013 ${i}`;
            }
            formatYearRangeLabel(e, i) {
              return `${e} to ${i}`;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      const e7 = {
        provide: new A('mat-datepicker-scroll-strategy'),
        deps: [Jn],
        useFactory: function JY(n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let s7 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = he({ type: n })),
          (n.ɵinj = de({
            providers: [$Y, e7],
            imports: [Tn, yu, hl, IM, Og, Ae, br],
          })),
          n
        );
      })();
      class za {}
      (za.ɵfac = function (t) {
        return new (t || za)();
      }),
        (za.ɵmod = he({ type: za, bootstrap: [Yl] })),
        (za.ɵinj = de({
          imports: [
            Sp,
            ho,
            z8,
            j8,
            _1,
            O5,
            Sp,
            ho,
            _1,
            B6,
            q6,
            r$,
            yu,
            EG,
            az,
            c5,
            PS,
            x$,
            s7,
            PU,
            ak,
            UG,
          ],
        })),
        LV()
          .bootstrapModule(za)
          .catch((n) => console.error(n));
    },
  },
  (Ce) => {
    Ce((Ce.s = 7));
  },
]);
